-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity weight_load_conv_wei is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    weight_burst_buf2_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    weight_burst_buf2_V_ce0 : OUT STD_LOGIC;
    weight_burst_buf2_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_conv_weight_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_conv_weight_V_V_full_n : IN STD_LOGIC;
    fifo_conv_weight_V_V_write : OUT STD_LOGIC;
    inst2_V : IN STD_LOGIC_VECTOR (191 downto 0);
    inst3_V : IN STD_LOGIC_VECTOR (191 downto 0) );
end;


architecture behav of weight_load_conv_wei is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_conv_weight_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal done_reg_168 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_op_assign_reg_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_op_assign_1_reg_132 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_132_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_132_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_132_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_132_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_132_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_132_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_132_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_reg_144_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter16_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter17_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter18_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter19_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter20_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter21_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter22_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_156_pp0_iter23_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal done_reg_168_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_168_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_220_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_228_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_232_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_489 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_499 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_done_phi_fu_172_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal oo_fu_287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal oo_reg_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_fu_299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_510 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_3_fu_333_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_3_reg_521 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal q_2_fu_349_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_2_reg_526 : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_1_fu_357_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_1_reg_531 : STD_LOGIC_VECTOR (31 downto 0);
    signal oo_4_fu_395_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal done_4_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_407_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_412_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_reg_556 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_416_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_reg_561 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_421_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_reg_566 : STD_LOGIC_VECTOR (31 downto 0);
    signal bus_w_idx_reg_571 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_12_reg_576 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_576_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_576_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_576_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bus_w_data_V_reg_585 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_phi_mux_i_op_assign_phi_fu_124_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_op_assign_1_phi_fu_136_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_i_op_assign_2_phi_fu_148_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_ii_phi_fu_160_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_phi_fu_183_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter28_tmp_V_reg_180 : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_w_data_V_1_fu_458_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal tmp_9_fu_454_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal FILTER_S2_V_fu_190_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal LAYER_IN_NUM_T_V_fu_200_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_236_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal LAYER_OUT_NUM_T_V_fu_210_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ii_2_fu_254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal q_fu_265_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_fu_276_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_317_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp3_fu_325_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp7_fu_341_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_365_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_374_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_381_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_388_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_412_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_421_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_425_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_w_idx_fu_431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_365_ce : STD_LOGIC;
    signal grp_fu_412_ce : STD_LOGIC;
    signal grp_fu_421_ce : STD_LOGIC;
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_47 : BOOLEAN;

    component top_kernel_mul_32g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    top_kernel_mul_32g8j_U62 : component top_kernel_mul_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => i_op_assign_reg_120,
        din1 => grp_fu_365_p1,
        ce => grp_fu_365_ce,
        dout => grp_fu_365_p2);

    top_kernel_mul_32g8j_U63 : component top_kernel_mul_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp5_reg_551,
        din1 => grp_fu_412_p1,
        ce => grp_fu_412_ce,
        dout => grp_fu_412_p2);

    top_kernel_mul_32g8j_U64 : component top_kernel_mul_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp4_reg_561,
        din1 => grp_fu_421_p1,
        ce => grp_fu_421_ce,
        dout => grp_fu_421_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_220_p3 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_220_p3 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    done_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_220_p3 = ap_const_lv1_1))) then 
                done_reg_168 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                done_reg_168 <= done_4_fu_402_p2;
            end if; 
        end if;
    end process;

    i_op_assign_1_reg_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_220_p3 = ap_const_lv1_1))) then 
                i_op_assign_1_reg_132 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_op_assign_1_reg_132 <= p_3_reg_521;
            end if; 
        end if;
    end process;

    i_op_assign_2_reg_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_220_p3 = ap_const_lv1_1))) then 
                i_op_assign_2_reg_144 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_op_assign_2_reg_144 <= q_2_reg_526;
            end if; 
        end if;
    end process;

    i_op_assign_reg_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_220_p3 = ap_const_lv1_1))) then 
                i_op_assign_reg_120 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                i_op_assign_reg_120 <= oo_4_fu_395_p3;
            end if; 
        end if;
    end process;

    ii_reg_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_220_p3 = ap_const_lv1_1))) then 
                ii_reg_156 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                ii_reg_156 <= ii_1_reg_531;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168_pp0_iter26_reg = ap_const_lv1_0))) then
                bus_w_data_V_reg_585 <= weight_burst_buf2_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168_pp0_iter23_reg = ap_const_lv1_0))) then
                bus_w_idx_reg_571 <= local_w_idx_fu_431_p2(31 downto 4);
                tmp_12_reg_576 <= local_w_idx_fu_431_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                done_reg_168_pp0_iter10_reg <= done_reg_168_pp0_iter9_reg;
                done_reg_168_pp0_iter11_reg <= done_reg_168_pp0_iter10_reg;
                done_reg_168_pp0_iter12_reg <= done_reg_168_pp0_iter11_reg;
                done_reg_168_pp0_iter13_reg <= done_reg_168_pp0_iter12_reg;
                done_reg_168_pp0_iter14_reg <= done_reg_168_pp0_iter13_reg;
                done_reg_168_pp0_iter15_reg <= done_reg_168_pp0_iter14_reg;
                done_reg_168_pp0_iter16_reg <= done_reg_168_pp0_iter15_reg;
                done_reg_168_pp0_iter17_reg <= done_reg_168_pp0_iter16_reg;
                done_reg_168_pp0_iter18_reg <= done_reg_168_pp0_iter17_reg;
                done_reg_168_pp0_iter19_reg <= done_reg_168_pp0_iter18_reg;
                done_reg_168_pp0_iter20_reg <= done_reg_168_pp0_iter19_reg;
                done_reg_168_pp0_iter21_reg <= done_reg_168_pp0_iter20_reg;
                done_reg_168_pp0_iter22_reg <= done_reg_168_pp0_iter21_reg;
                done_reg_168_pp0_iter23_reg <= done_reg_168_pp0_iter22_reg;
                done_reg_168_pp0_iter24_reg <= done_reg_168_pp0_iter23_reg;
                done_reg_168_pp0_iter25_reg <= done_reg_168_pp0_iter24_reg;
                done_reg_168_pp0_iter26_reg <= done_reg_168_pp0_iter25_reg;
                done_reg_168_pp0_iter27_reg <= done_reg_168_pp0_iter26_reg;
                done_reg_168_pp0_iter2_reg <= done_reg_168_pp0_iter1_reg;
                done_reg_168_pp0_iter3_reg <= done_reg_168_pp0_iter2_reg;
                done_reg_168_pp0_iter4_reg <= done_reg_168_pp0_iter3_reg;
                done_reg_168_pp0_iter5_reg <= done_reg_168_pp0_iter4_reg;
                done_reg_168_pp0_iter6_reg <= done_reg_168_pp0_iter5_reg;
                done_reg_168_pp0_iter7_reg <= done_reg_168_pp0_iter6_reg;
                done_reg_168_pp0_iter8_reg <= done_reg_168_pp0_iter7_reg;
                done_reg_168_pp0_iter9_reg <= done_reg_168_pp0_iter8_reg;
                i_op_assign_1_reg_132_pp0_iter2_reg <= i_op_assign_1_reg_132_pp0_iter1_reg;
                i_op_assign_1_reg_132_pp0_iter3_reg <= i_op_assign_1_reg_132_pp0_iter2_reg;
                i_op_assign_1_reg_132_pp0_iter4_reg <= i_op_assign_1_reg_132_pp0_iter3_reg;
                i_op_assign_1_reg_132_pp0_iter5_reg <= i_op_assign_1_reg_132_pp0_iter4_reg;
                i_op_assign_1_reg_132_pp0_iter6_reg <= i_op_assign_1_reg_132_pp0_iter5_reg;
                i_op_assign_1_reg_132_pp0_iter7_reg <= i_op_assign_1_reg_132_pp0_iter6_reg;
                i_op_assign_2_reg_144_pp0_iter10_reg <= i_op_assign_2_reg_144_pp0_iter9_reg;
                i_op_assign_2_reg_144_pp0_iter11_reg <= i_op_assign_2_reg_144_pp0_iter10_reg;
                i_op_assign_2_reg_144_pp0_iter12_reg <= i_op_assign_2_reg_144_pp0_iter11_reg;
                i_op_assign_2_reg_144_pp0_iter13_reg <= i_op_assign_2_reg_144_pp0_iter12_reg;
                i_op_assign_2_reg_144_pp0_iter14_reg <= i_op_assign_2_reg_144_pp0_iter13_reg;
                i_op_assign_2_reg_144_pp0_iter15_reg <= i_op_assign_2_reg_144_pp0_iter14_reg;
                i_op_assign_2_reg_144_pp0_iter2_reg <= i_op_assign_2_reg_144_pp0_iter1_reg;
                i_op_assign_2_reg_144_pp0_iter3_reg <= i_op_assign_2_reg_144_pp0_iter2_reg;
                i_op_assign_2_reg_144_pp0_iter4_reg <= i_op_assign_2_reg_144_pp0_iter3_reg;
                i_op_assign_2_reg_144_pp0_iter5_reg <= i_op_assign_2_reg_144_pp0_iter4_reg;
                i_op_assign_2_reg_144_pp0_iter6_reg <= i_op_assign_2_reg_144_pp0_iter5_reg;
                i_op_assign_2_reg_144_pp0_iter7_reg <= i_op_assign_2_reg_144_pp0_iter6_reg;
                i_op_assign_2_reg_144_pp0_iter8_reg <= i_op_assign_2_reg_144_pp0_iter7_reg;
                i_op_assign_2_reg_144_pp0_iter9_reg <= i_op_assign_2_reg_144_pp0_iter8_reg;
                ii_reg_156_pp0_iter10_reg <= ii_reg_156_pp0_iter9_reg;
                ii_reg_156_pp0_iter11_reg <= ii_reg_156_pp0_iter10_reg;
                ii_reg_156_pp0_iter12_reg <= ii_reg_156_pp0_iter11_reg;
                ii_reg_156_pp0_iter13_reg <= ii_reg_156_pp0_iter12_reg;
                ii_reg_156_pp0_iter14_reg <= ii_reg_156_pp0_iter13_reg;
                ii_reg_156_pp0_iter15_reg <= ii_reg_156_pp0_iter14_reg;
                ii_reg_156_pp0_iter16_reg <= ii_reg_156_pp0_iter15_reg;
                ii_reg_156_pp0_iter17_reg <= ii_reg_156_pp0_iter16_reg;
                ii_reg_156_pp0_iter18_reg <= ii_reg_156_pp0_iter17_reg;
                ii_reg_156_pp0_iter19_reg <= ii_reg_156_pp0_iter18_reg;
                ii_reg_156_pp0_iter20_reg <= ii_reg_156_pp0_iter19_reg;
                ii_reg_156_pp0_iter21_reg <= ii_reg_156_pp0_iter20_reg;
                ii_reg_156_pp0_iter22_reg <= ii_reg_156_pp0_iter21_reg;
                ii_reg_156_pp0_iter23_reg <= ii_reg_156_pp0_iter22_reg;
                ii_reg_156_pp0_iter2_reg <= ii_reg_156_pp0_iter1_reg;
                ii_reg_156_pp0_iter3_reg <= ii_reg_156_pp0_iter2_reg;
                ii_reg_156_pp0_iter4_reg <= ii_reg_156_pp0_iter3_reg;
                ii_reg_156_pp0_iter5_reg <= ii_reg_156_pp0_iter4_reg;
                ii_reg_156_pp0_iter6_reg <= ii_reg_156_pp0_iter5_reg;
                ii_reg_156_pp0_iter7_reg <= ii_reg_156_pp0_iter6_reg;
                ii_reg_156_pp0_iter8_reg <= ii_reg_156_pp0_iter7_reg;
                ii_reg_156_pp0_iter9_reg <= ii_reg_156_pp0_iter8_reg;
                tmp_12_reg_576_pp0_iter25_reg <= tmp_12_reg_576;
                tmp_12_reg_576_pp0_iter26_reg <= tmp_12_reg_576_pp0_iter25_reg;
                tmp_12_reg_576_pp0_iter27_reg <= tmp_12_reg_576_pp0_iter26_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                done_reg_168_pp0_iter1_reg <= done_reg_168;
                i_op_assign_1_reg_132_pp0_iter1_reg <= i_op_assign_1_reg_132;
                i_op_assign_2_reg_144_pp0_iter1_reg <= i_op_assign_2_reg_144;
                ii_reg_156_pp0_iter1_reg <= ii_reg_156;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_done_phi_fu_172_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                ii_1_reg_531 <= ii_1_fu_357_p3;
                p_3_reg_521 <= p_3_fu_333_p3;
                q_2_reg_526 <= q_2_fu_349_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_done_phi_fu_172_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                oo_reg_504 <= oo_fu_287_p2;
                sel_tmp1_reg_510 <= sel_tmp1_fu_299_p2;
                sel_tmp6_reg_516 <= sel_tmp6_fu_311_p2;
                tmp_4_reg_499 <= tmp_4_fu_260_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168_pp0_iter15_reg = ap_const_lv1_0))) then
                tmp4_reg_561 <= tmp4_fu_416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168_pp0_iter7_reg = ap_const_lv1_0))) then
                tmp5_reg_551 <= tmp5_fu_407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168_pp0_iter14_reg = ap_const_lv1_0))) then
                tmp6_reg_556 <= grp_fu_412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168_pp0_iter22_reg = ap_const_lv1_0))) then
                tmp7_reg_566 <= grp_fu_421_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_220_p3 = ap_const_lv1_1))) then
                    tmp_1_reg_476(15 downto 0) <= tmp_1_fu_228_p1(15 downto 0);
                    tmp_2_reg_484(15 downto 0) <= tmp_2_fu_232_p1(15 downto 0);
                    tmp_5_reg_489(12 downto 0) <= tmp_5_fu_246_p1(12 downto 0);
                    tmp_6_reg_494(15 downto 0) <= tmp_6_fu_250_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168_pp0_iter6_reg = ap_const_lv1_0))) then
                tmp_7_reg_546 <= grp_fu_365_p2;
            end if;
        end if;
    end process;
    tmp_1_reg_476(31 downto 16) <= "0000000000000000";
    tmp_2_reg_484(31 downto 16) <= "0000000000000000";
    tmp_5_reg_489(31 downto 13) <= "0000000000000000000";
    tmp_6_reg_494(31 downto 16) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter28, tmp_fu_220_p3, ap_phi_mux_done_phi_fu_172_p4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter27)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (tmp_fu_220_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_start = ap_const_logic_1) and (tmp_fu_220_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_phi_mux_done_phi_fu_172_p4 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_phi_mux_done_phi_fu_172_p4 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    FILTER_S2_V_fu_190_p4 <= inst2_V(159 downto 144);
    LAYER_IN_NUM_T_V_fu_200_p4 <= inst3_V(79 downto 64);
    LAYER_OUT_NUM_T_V_fu_210_p4 <= inst3_V(95 downto 80);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state31 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo_conv_weight_V_V_full_n, ap_enable_reg_pp0_iter28, done_reg_168_pp0_iter27_reg)
    begin
                ap_block_pp0_stage0_01001 <= ((done_reg_168_pp0_iter27_reg = ap_const_lv1_0) and (fifo_conv_weight_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo_conv_weight_V_V_full_n, ap_enable_reg_pp0_iter28, done_reg_168_pp0_iter27_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((done_reg_168_pp0_iter27_reg = ap_const_lv1_0) and (fifo_conv_weight_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_conv_weight_V_V_full_n, ap_enable_reg_pp0_iter28, done_reg_168_pp0_iter27_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((done_reg_168_pp0_iter27_reg = ap_const_lv1_0) and (fifo_conv_weight_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state30_pp0_stage0_iter28_assign_proc : process(fifo_conv_weight_V_V_full_n, done_reg_168_pp0_iter27_reg)
    begin
                ap_block_state30_pp0_stage0_iter28 <= ((done_reg_168_pp0_iter27_reg = ap_const_lv1_0) and (fifo_conv_weight_V_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_47_assign_proc : process(ap_enable_reg_pp0_iter28, ap_block_pp0_stage0, done_reg_168_pp0_iter27_reg)
    begin
                ap_condition_47 <= ((done_reg_168_pp0_iter27_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(ap_phi_mux_done_phi_fu_172_p4)
    begin
        if ((ap_phi_mux_done_phi_fu_172_p4 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27)
    begin
        if (((ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_done_phi_fu_172_p4_assign_proc : process(ap_block_pp0_stage0, done_reg_168, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, done_4_fu_402_p2)
    begin
        if (((done_reg_168 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_done_phi_fu_172_p4 <= done_4_fu_402_p2;
        else 
            ap_phi_mux_done_phi_fu_172_p4 <= done_reg_168;
        end if; 
    end process;


    ap_phi_mux_i_op_assign_1_phi_fu_136_p4_assign_proc : process(ap_block_pp0_stage0, done_reg_168, ap_CS_fsm_pp0_stage0, i_op_assign_1_reg_132, p_3_reg_521, ap_enable_reg_pp0_iter1)
    begin
        if (((done_reg_168 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_op_assign_1_phi_fu_136_p4 <= p_3_reg_521;
        else 
            ap_phi_mux_i_op_assign_1_phi_fu_136_p4 <= i_op_assign_1_reg_132;
        end if; 
    end process;


    ap_phi_mux_i_op_assign_2_phi_fu_148_p4_assign_proc : process(ap_block_pp0_stage0, done_reg_168, ap_CS_fsm_pp0_stage0, i_op_assign_2_reg_144, q_2_reg_526, ap_enable_reg_pp0_iter1)
    begin
        if (((done_reg_168 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_op_assign_2_phi_fu_148_p4 <= q_2_reg_526;
        else 
            ap_phi_mux_i_op_assign_2_phi_fu_148_p4 <= i_op_assign_2_reg_144;
        end if; 
    end process;


    ap_phi_mux_i_op_assign_phi_fu_124_p4_assign_proc : process(ap_block_pp0_stage0, done_reg_168, i_op_assign_reg_120, ap_CS_fsm_pp0_stage0, oo_4_fu_395_p3, ap_enable_reg_pp0_iter1)
    begin
        if (((done_reg_168 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_i_op_assign_phi_fu_124_p4 <= oo_4_fu_395_p3;
        else 
            ap_phi_mux_i_op_assign_phi_fu_124_p4 <= i_op_assign_reg_120;
        end if; 
    end process;


    ap_phi_mux_ii_phi_fu_160_p4_assign_proc : process(ap_block_pp0_stage0, done_reg_168, ap_CS_fsm_pp0_stage0, ii_reg_156, ii_1_reg_531, ap_enable_reg_pp0_iter1)
    begin
        if (((done_reg_168 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_ii_phi_fu_160_p4 <= ii_1_reg_531;
        else 
            ap_phi_mux_ii_phi_fu_160_p4 <= ii_reg_156;
        end if; 
    end process;


    ap_phi_mux_tmp_V_phi_fu_183_p4_assign_proc : process(tmp_12_reg_576_pp0_iter27_reg, bus_w_data_V_reg_585, ap_phi_reg_pp0_iter28_tmp_V_reg_180, fifo_w_data_V_1_fu_458_p1, ap_condition_47)
    begin
        if ((ap_const_boolean_1 = ap_condition_47)) then
            if ((tmp_12_reg_576_pp0_iter27_reg = ap_const_lv1_0)) then 
                ap_phi_mux_tmp_V_phi_fu_183_p4 <= fifo_w_data_V_1_fu_458_p1;
            elsif ((tmp_12_reg_576_pp0_iter27_reg = ap_const_lv1_1)) then 
                ap_phi_mux_tmp_V_phi_fu_183_p4 <= bus_w_data_V_reg_585(511 downto 256);
            else 
                ap_phi_mux_tmp_V_phi_fu_183_p4 <= ap_phi_reg_pp0_iter28_tmp_V_reg_180;
            end if;
        else 
            ap_phi_mux_tmp_V_phi_fu_183_p4 <= ap_phi_reg_pp0_iter28_tmp_V_reg_180;
        end if; 
    end process;

    ap_phi_reg_pp0_iter28_tmp_V_reg_180 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    done_4_fu_402_p2 <= (tmp_10_fu_370_p2 and sel_tmp1_reg_510);

    fifo_conv_weight_V_V_blk_n_assign_proc : process(fifo_conv_weight_V_V_full_n, ap_enable_reg_pp0_iter28, ap_block_pp0_stage0, done_reg_168_pp0_iter27_reg)
    begin
        if (((done_reg_168_pp0_iter27_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            fifo_conv_weight_V_V_blk_n <= fifo_conv_weight_V_V_full_n;
        else 
            fifo_conv_weight_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_conv_weight_V_V_din <= ap_phi_mux_tmp_V_phi_fu_183_p4;

    fifo_conv_weight_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter28, done_reg_168_pp0_iter27_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_168_pp0_iter27_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_1))) then 
            fifo_conv_weight_V_V_write <= ap_const_logic_1;
        else 
            fifo_conv_weight_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    fifo_w_data_V_1_fu_458_p1 <= bus_w_data_V_reg_585(256 - 1 downto 0);

    grp_fu_365_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_365_ce <= ap_const_logic_1;
        else 
            grp_fu_365_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_365_p1 <= tmp_1_reg_476(16 - 1 downto 0);

    grp_fu_412_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_412_ce <= ap_const_logic_1;
        else 
            grp_fu_412_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_412_p1 <= tmp_1_reg_476(16 - 1 downto 0);

    grp_fu_421_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_421_ce <= ap_const_logic_1;
        else 
            grp_fu_421_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_421_p1 <= tmp_2_reg_484(16 - 1 downto 0);
    ii_1_fu_357_p3 <= 
        ap_const_lv32_0 when (tmp_4_fu_260_p2(0) = '1') else 
        ii_2_fu_254_p2;
    ii_2_fu_254_p2 <= std_logic_vector(unsigned(ap_phi_mux_ii_phi_fu_160_p4) + unsigned(ap_const_lv32_1));
    local_w_idx_fu_431_p2 <= std_logic_vector(unsigned(tmp_11_fu_425_p2) + unsigned(tmp7_reg_566));
    oo_4_fu_395_p3 <= 
        i_op_assign_reg_120 when (sel_tmp6_reg_516(0) = '1') else 
        sel_tmp4_fu_388_p3;
    oo_fu_287_p2 <= std_logic_vector(signed(ap_phi_mux_i_op_assign_phi_fu_124_p4) + signed(ap_const_lv32_1));
    p_3_fu_333_p3 <= 
        ap_phi_mux_i_op_assign_1_phi_fu_136_p4 when (sel_tmp6_fu_311_p2(0) = '1') else 
        sel_tmp3_fu_325_p3;
    p_fu_276_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_op_assign_1_phi_fu_136_p4) + unsigned(ap_const_lv32_1));
    p_s_fu_374_p3 <= 
        ap_const_lv32_0 when (tmp_10_fu_370_p2(0) = '1') else 
        oo_reg_504;
    q_2_fu_349_p3 <= 
        q_fu_265_p2 when (sel_tmp6_fu_311_p2(0) = '1') else 
        sel_tmp7_fu_341_p3;
    q_fu_265_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_op_assign_2_phi_fu_148_p4) + unsigned(ap_const_lv32_1));
    ret_V_fu_236_p4 <= inst3_V(79 downto 67);
    sel_tmp1_fu_299_p2 <= (tmp_4_fu_260_p2 and tmp1_fu_293_p2);
    sel_tmp2_fu_381_p3 <= 
        p_s_fu_374_p3 when (sel_tmp1_reg_510(0) = '1') else 
        i_op_assign_reg_120;
    sel_tmp3_fu_325_p3 <= 
        sel_tmp_fu_317_p3 when (tmp_4_fu_260_p2(0) = '1') else 
        ap_phi_mux_i_op_assign_1_phi_fu_136_p4;
    sel_tmp4_fu_388_p3 <= 
        sel_tmp2_fu_381_p3 when (tmp_4_reg_499(0) = '1') else 
        i_op_assign_reg_120;
    sel_tmp5_fu_305_p2 <= (tmp_8_fu_271_p2 xor ap_const_lv1_1);
    sel_tmp6_fu_311_p2 <= (tmp_4_fu_260_p2 and sel_tmp5_fu_305_p2);
    sel_tmp7_fu_341_p3 <= 
        ap_const_lv32_0 when (tmp_4_fu_260_p2(0) = '1') else 
        ap_phi_mux_i_op_assign_2_phi_fu_148_p4;
    sel_tmp_fu_317_p3 <= 
        ap_const_lv32_0 when (sel_tmp1_fu_299_p2(0) = '1') else 
        p_fu_276_p2;
    tmp1_fu_293_p2 <= (tmp_8_fu_271_p2 and tmp_3_fu_282_p2);
    tmp4_fu_416_p2 <= std_logic_vector(unsigned(i_op_assign_2_reg_144_pp0_iter15_reg) + unsigned(tmp6_reg_556));
    tmp5_fu_407_p2 <= std_logic_vector(unsigned(tmp_7_reg_546) + unsigned(i_op_assign_1_reg_132_pp0_iter7_reg));
    tmp_10_fu_370_p2 <= "1" when (oo_reg_504 = tmp_6_reg_494) else "0";
    tmp_11_fu_425_p2 <= std_logic_vector(shift_left(unsigned(ii_reg_156_pp0_iter23_reg),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    tmp_1_fu_228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FILTER_S2_V_fu_190_p4),32));
    tmp_2_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_IN_NUM_T_V_fu_200_p4),32));
    tmp_3_fu_282_p2 <= "1" when (p_fu_276_p2 = tmp_1_reg_476) else "0";
    tmp_4_fu_260_p2 <= "1" when (ii_2_fu_254_p2 = tmp_5_reg_489) else "0";
    tmp_5_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_236_p4),32));
    tmp_6_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_OUT_NUM_T_V_fu_210_p4),32));
    tmp_8_fu_271_p2 <= "1" when (q_fu_265_p2 = tmp_1_reg_476) else "0";
    tmp_9_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bus_w_idx_reg_571),64));
    tmp_fu_220_p3 <= inst3_V(2 downto 2);
    weight_burst_buf2_V_address0 <= tmp_9_fu_454_p1(12 - 1 downto 0);

    weight_burst_buf2_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter27 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter26 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1)))) then 
            weight_burst_buf2_V_ce0 <= ap_const_logic_1;
        else 
            weight_burst_buf2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
