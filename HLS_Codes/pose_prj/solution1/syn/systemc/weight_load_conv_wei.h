// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _weight_load_conv_wei_HH_
#define _weight_load_conv_wei_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "top_kernel_mul_32g8j.h"

namespace ap_rtl {

struct weight_load_conv_wei : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<12> > weight_burst_buf2_V_address0;
    sc_out< sc_logic > weight_burst_buf2_V_ce0;
    sc_in< sc_lv<512> > weight_burst_buf2_V_q0;
    sc_out< sc_lv<256> > fifo_conv_weight_V_V_din;
    sc_in< sc_logic > fifo_conv_weight_V_V_full_n;
    sc_out< sc_logic > fifo_conv_weight_V_V_write;
    sc_in< sc_lv<192> > inst2_V;
    sc_in< sc_lv<192> > inst3_V;


    // Module declarations
    weight_load_conv_wei(sc_module_name name);
    SC_HAS_PROCESS(weight_load_conv_wei);

    ~weight_load_conv_wei();

    sc_trace_file* mVcdFile;

    top_kernel_mul_32g8j<1,7,32,16,32>* top_kernel_mul_32g8j_U62;
    top_kernel_mul_32g8j<1,7,32,16,32>* top_kernel_mul_32g8j_U63;
    top_kernel_mul_32g8j<1,7,32,16,32>* top_kernel_mul_32g8j_U64;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > fifo_conv_weight_V_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter28;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > done_reg_168;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter27_reg;
    sc_signal< sc_lv<32> > i_op_assign_reg_120;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter13;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter14;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter15;
    sc_signal< bool > ap_block_state18_pp0_stage0_iter16;
    sc_signal< bool > ap_block_state19_pp0_stage0_iter17;
    sc_signal< bool > ap_block_state20_pp0_stage0_iter18;
    sc_signal< bool > ap_block_state21_pp0_stage0_iter19;
    sc_signal< bool > ap_block_state22_pp0_stage0_iter20;
    sc_signal< bool > ap_block_state23_pp0_stage0_iter21;
    sc_signal< bool > ap_block_state24_pp0_stage0_iter22;
    sc_signal< bool > ap_block_state25_pp0_stage0_iter23;
    sc_signal< bool > ap_block_state26_pp0_stage0_iter24;
    sc_signal< bool > ap_block_state27_pp0_stage0_iter25;
    sc_signal< bool > ap_block_state28_pp0_stage0_iter26;
    sc_signal< bool > ap_block_state29_pp0_stage0_iter27;
    sc_signal< bool > ap_block_state30_pp0_stage0_iter28;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > i_op_assign_1_reg_132;
    sc_signal< sc_lv<32> > i_op_assign_1_reg_132_pp0_iter1_reg;
    sc_signal< sc_lv<32> > i_op_assign_1_reg_132_pp0_iter2_reg;
    sc_signal< sc_lv<32> > i_op_assign_1_reg_132_pp0_iter3_reg;
    sc_signal< sc_lv<32> > i_op_assign_1_reg_132_pp0_iter4_reg;
    sc_signal< sc_lv<32> > i_op_assign_1_reg_132_pp0_iter5_reg;
    sc_signal< sc_lv<32> > i_op_assign_1_reg_132_pp0_iter6_reg;
    sc_signal< sc_lv<32> > i_op_assign_1_reg_132_pp0_iter7_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter1_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter2_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter3_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter4_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter5_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter6_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter7_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter8_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter9_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter10_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter11_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter12_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter13_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter14_reg;
    sc_signal< sc_lv<32> > i_op_assign_2_reg_144_pp0_iter15_reg;
    sc_signal< sc_lv<32> > ii_reg_156;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter1_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter2_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter3_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter4_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter5_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter6_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter7_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter8_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter9_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter10_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter11_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter12_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter13_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter14_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter15_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter16_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter17_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter18_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter19_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter20_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter21_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter22_reg;
    sc_signal< sc_lv<32> > ii_reg_156_pp0_iter23_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter1_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter2_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter3_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter4_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter5_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter6_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter7_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter8_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter9_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter10_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter11_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter12_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter13_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter14_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter15_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter16_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter17_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter18_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter19_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter20_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter21_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter22_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter23_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter24_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter25_reg;
    sc_signal< sc_lv<1> > done_reg_168_pp0_iter26_reg;
    sc_signal< sc_lv<1> > tmp_fu_220_p3;
    sc_signal< sc_lv<32> > tmp_1_fu_228_p1;
    sc_signal< sc_lv<32> > tmp_1_reg_476;
    sc_signal< sc_lv<32> > tmp_2_fu_232_p1;
    sc_signal< sc_lv<32> > tmp_2_reg_484;
    sc_signal< sc_lv<32> > tmp_5_fu_246_p1;
    sc_signal< sc_lv<32> > tmp_5_reg_489;
    sc_signal< sc_lv<32> > tmp_6_fu_250_p1;
    sc_signal< sc_lv<32> > tmp_6_reg_494;
    sc_signal< sc_lv<1> > tmp_4_fu_260_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_499;
    sc_signal< sc_lv<1> > ap_phi_mux_done_phi_fu_172_p4;
    sc_signal< sc_lv<32> > oo_fu_287_p2;
    sc_signal< sc_lv<32> > oo_reg_504;
    sc_signal< sc_lv<1> > sel_tmp1_fu_299_p2;
    sc_signal< sc_lv<1> > sel_tmp1_reg_510;
    sc_signal< sc_lv<1> > sel_tmp6_fu_311_p2;
    sc_signal< sc_lv<1> > sel_tmp6_reg_516;
    sc_signal< sc_lv<32> > p_3_fu_333_p3;
    sc_signal< sc_lv<32> > p_3_reg_521;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > q_2_fu_349_p3;
    sc_signal< sc_lv<32> > q_2_reg_526;
    sc_signal< sc_lv<32> > ii_1_fu_357_p3;
    sc_signal< sc_lv<32> > ii_1_reg_531;
    sc_signal< sc_lv<32> > oo_4_fu_395_p3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > done_4_fu_402_p2;
    sc_signal< sc_lv<32> > grp_fu_365_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_546;
    sc_signal< sc_lv<32> > tmp5_fu_407_p2;
    sc_signal< sc_lv<32> > tmp5_reg_551;
    sc_signal< sc_lv<32> > grp_fu_412_p2;
    sc_signal< sc_lv<32> > tmp6_reg_556;
    sc_signal< sc_lv<32> > tmp4_fu_416_p2;
    sc_signal< sc_lv<32> > tmp4_reg_561;
    sc_signal< sc_lv<32> > grp_fu_421_p2;
    sc_signal< sc_lv<32> > tmp7_reg_566;
    sc_signal< sc_lv<28> > bus_w_idx_reg_571;
    sc_signal< sc_lv<1> > tmp_12_reg_576;
    sc_signal< sc_lv<1> > tmp_12_reg_576_pp0_iter25_reg;
    sc_signal< sc_lv<1> > tmp_12_reg_576_pp0_iter26_reg;
    sc_signal< sc_lv<1> > tmp_12_reg_576_pp0_iter27_reg;
    sc_signal< sc_lv<512> > bus_w_data_V_reg_585;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter14;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter15;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter16;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter17;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter18;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter19;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter20;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter21;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter22;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter23;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter24;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter25;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter26;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter27;
    sc_signal< sc_lv<32> > ap_phi_mux_i_op_assign_phi_fu_124_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_i_op_assign_1_phi_fu_136_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_i_op_assign_2_phi_fu_148_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_ii_phi_fu_160_p4;
    sc_signal< sc_lv<256> > ap_phi_mux_tmp_V_phi_fu_183_p4;
    sc_signal< sc_lv<256> > ap_phi_reg_pp0_iter28_tmp_V_reg_180;
    sc_signal< sc_lv<256> > fifo_w_data_V_1_fu_458_p1;
    sc_signal< sc_lv<64> > tmp_9_fu_454_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<16> > FILTER_S2_V_fu_190_p4;
    sc_signal< sc_lv<16> > LAYER_IN_NUM_T_V_fu_200_p4;
    sc_signal< sc_lv<13> > ret_V_fu_236_p4;
    sc_signal< sc_lv<16> > LAYER_OUT_NUM_T_V_fu_210_p4;
    sc_signal< sc_lv<32> > ii_2_fu_254_p2;
    sc_signal< sc_lv<32> > q_fu_265_p2;
    sc_signal< sc_lv<32> > p_fu_276_p2;
    sc_signal< sc_lv<1> > tmp_8_fu_271_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_282_p2;
    sc_signal< sc_lv<1> > tmp1_fu_293_p2;
    sc_signal< sc_lv<1> > sel_tmp5_fu_305_p2;
    sc_signal< sc_lv<32> > sel_tmp_fu_317_p3;
    sc_signal< sc_lv<32> > sel_tmp3_fu_325_p3;
    sc_signal< sc_lv<32> > sel_tmp7_fu_341_p3;
    sc_signal< sc_lv<16> > grp_fu_365_p1;
    sc_signal< sc_lv<1> > tmp_10_fu_370_p2;
    sc_signal< sc_lv<32> > p_s_fu_374_p3;
    sc_signal< sc_lv<32> > sel_tmp2_fu_381_p3;
    sc_signal< sc_lv<32> > sel_tmp4_fu_388_p3;
    sc_signal< sc_lv<16> > grp_fu_412_p1;
    sc_signal< sc_lv<16> > grp_fu_421_p1;
    sc_signal< sc_lv<32> > tmp_11_fu_425_p2;
    sc_signal< sc_lv<32> > local_w_idx_fu_431_p2;
    sc_signal< sc_logic > grp_fu_365_ce;
    sc_signal< sc_logic > grp_fu_412_ce;
    sc_signal< sc_logic > grp_fu_421_ce;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_47;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state31;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_90;
    static const sc_lv<32> ap_const_lv32_9F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_4F;
    static const sc_lv<32> ap_const_lv32_50;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_43;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_100;
    static const sc_lv<32> ap_const_lv32_1FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_FILTER_S2_V_fu_190_p4();
    void thread_LAYER_IN_NUM_T_V_fu_200_p4();
    void thread_LAYER_OUT_NUM_T_V_fu_210_p4();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state31();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter8();
    void thread_ap_block_state11_pp0_stage0_iter9();
    void thread_ap_block_state12_pp0_stage0_iter10();
    void thread_ap_block_state13_pp0_stage0_iter11();
    void thread_ap_block_state14_pp0_stage0_iter12();
    void thread_ap_block_state15_pp0_stage0_iter13();
    void thread_ap_block_state16_pp0_stage0_iter14();
    void thread_ap_block_state17_pp0_stage0_iter15();
    void thread_ap_block_state18_pp0_stage0_iter16();
    void thread_ap_block_state19_pp0_stage0_iter17();
    void thread_ap_block_state20_pp0_stage0_iter18();
    void thread_ap_block_state21_pp0_stage0_iter19();
    void thread_ap_block_state22_pp0_stage0_iter20();
    void thread_ap_block_state23_pp0_stage0_iter21();
    void thread_ap_block_state24_pp0_stage0_iter22();
    void thread_ap_block_state25_pp0_stage0_iter23();
    void thread_ap_block_state26_pp0_stage0_iter24();
    void thread_ap_block_state27_pp0_stage0_iter25();
    void thread_ap_block_state28_pp0_stage0_iter26();
    void thread_ap_block_state29_pp0_stage0_iter27();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state30_pp0_stage0_iter28();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_block_state8_pp0_stage0_iter6();
    void thread_ap_block_state9_pp0_stage0_iter7();
    void thread_ap_condition_47();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_done_phi_fu_172_p4();
    void thread_ap_phi_mux_i_op_assign_1_phi_fu_136_p4();
    void thread_ap_phi_mux_i_op_assign_2_phi_fu_148_p4();
    void thread_ap_phi_mux_i_op_assign_phi_fu_124_p4();
    void thread_ap_phi_mux_ii_phi_fu_160_p4();
    void thread_ap_phi_mux_tmp_V_phi_fu_183_p4();
    void thread_ap_phi_reg_pp0_iter28_tmp_V_reg_180();
    void thread_ap_ready();
    void thread_done_4_fu_402_p2();
    void thread_fifo_conv_weight_V_V_blk_n();
    void thread_fifo_conv_weight_V_V_din();
    void thread_fifo_conv_weight_V_V_write();
    void thread_fifo_w_data_V_1_fu_458_p1();
    void thread_grp_fu_365_ce();
    void thread_grp_fu_365_p1();
    void thread_grp_fu_412_ce();
    void thread_grp_fu_412_p1();
    void thread_grp_fu_421_ce();
    void thread_grp_fu_421_p1();
    void thread_ii_1_fu_357_p3();
    void thread_ii_2_fu_254_p2();
    void thread_local_w_idx_fu_431_p2();
    void thread_oo_4_fu_395_p3();
    void thread_oo_fu_287_p2();
    void thread_p_3_fu_333_p3();
    void thread_p_fu_276_p2();
    void thread_p_s_fu_374_p3();
    void thread_q_2_fu_349_p3();
    void thread_q_fu_265_p2();
    void thread_ret_V_fu_236_p4();
    void thread_sel_tmp1_fu_299_p2();
    void thread_sel_tmp2_fu_381_p3();
    void thread_sel_tmp3_fu_325_p3();
    void thread_sel_tmp4_fu_388_p3();
    void thread_sel_tmp5_fu_305_p2();
    void thread_sel_tmp6_fu_311_p2();
    void thread_sel_tmp7_fu_341_p3();
    void thread_sel_tmp_fu_317_p3();
    void thread_tmp1_fu_293_p2();
    void thread_tmp4_fu_416_p2();
    void thread_tmp5_fu_407_p2();
    void thread_tmp_10_fu_370_p2();
    void thread_tmp_11_fu_425_p2();
    void thread_tmp_1_fu_228_p1();
    void thread_tmp_2_fu_232_p1();
    void thread_tmp_3_fu_282_p2();
    void thread_tmp_4_fu_260_p2();
    void thread_tmp_5_fu_246_p1();
    void thread_tmp_6_fu_250_p1();
    void thread_tmp_8_fu_271_p2();
    void thread_tmp_9_fu_454_p1();
    void thread_tmp_fu_220_p3();
    void thread_weight_burst_buf2_V_address0();
    void thread_weight_burst_buf2_V_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
