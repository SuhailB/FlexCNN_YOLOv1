// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _engine_HH_
#define _engine_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cin_load13.h"
#include "weight_load.h"
#include "conv.h"
#include "relu.h"
#include "pool.h"
#include "cout_write.h"
#include "fifo_w256_d128_A.h"
#include "fifo_w192_d16_A.h"
#include "fifo_w58_d2_A.h"
#include "fifo_w58_d6_A.h"
#include "fifo_w256_d64_A.h"
#include "fifo_w256_d16_A.h"
#include "start_for_conv_U0.h"
#include "start_for_cout_wrYie.h"
#include "start_for_relu_U0.h"
#include "start_for_pool_U0.h"

namespace ap_rtl {

struct engine : public sc_module {
    // Port declarations 115
    sc_out< sc_logic > m_axi_global_cin_V_AWVALID;
    sc_in< sc_logic > m_axi_global_cin_V_AWREADY;
    sc_out< sc_lv<64> > m_axi_global_cin_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_global_cin_V_AWID;
    sc_out< sc_lv<32> > m_axi_global_cin_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_global_cin_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_global_cin_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_global_cin_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_global_cin_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_global_cin_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_global_cin_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_global_cin_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_global_cin_V_AWUSER;
    sc_out< sc_logic > m_axi_global_cin_V_WVALID;
    sc_in< sc_logic > m_axi_global_cin_V_WREADY;
    sc_out< sc_lv<512> > m_axi_global_cin_V_WDATA;
    sc_out< sc_lv<64> > m_axi_global_cin_V_WSTRB;
    sc_out< sc_logic > m_axi_global_cin_V_WLAST;
    sc_out< sc_lv<1> > m_axi_global_cin_V_WID;
    sc_out< sc_lv<1> > m_axi_global_cin_V_WUSER;
    sc_out< sc_logic > m_axi_global_cin_V_ARVALID;
    sc_in< sc_logic > m_axi_global_cin_V_ARREADY;
    sc_out< sc_lv<64> > m_axi_global_cin_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_global_cin_V_ARID;
    sc_out< sc_lv<32> > m_axi_global_cin_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_global_cin_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_global_cin_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_global_cin_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_global_cin_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_global_cin_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_global_cin_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_global_cin_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_global_cin_V_ARUSER;
    sc_in< sc_logic > m_axi_global_cin_V_RVALID;
    sc_out< sc_logic > m_axi_global_cin_V_RREADY;
    sc_in< sc_lv<512> > m_axi_global_cin_V_RDATA;
    sc_in< sc_logic > m_axi_global_cin_V_RLAST;
    sc_in< sc_lv<1> > m_axi_global_cin_V_RID;
    sc_in< sc_lv<1> > m_axi_global_cin_V_RUSER;
    sc_in< sc_lv<2> > m_axi_global_cin_V_RRESP;
    sc_in< sc_logic > m_axi_global_cin_V_BVALID;
    sc_out< sc_logic > m_axi_global_cin_V_BREADY;
    sc_in< sc_lv<2> > m_axi_global_cin_V_BRESP;
    sc_in< sc_lv<1> > m_axi_global_cin_V_BID;
    sc_in< sc_lv<1> > m_axi_global_cin_V_BUSER;
    sc_in< sc_lv<58> > global_cin_V_offset;
    sc_out< sc_logic > m_axi_global_weight_V_AWVALID;
    sc_in< sc_logic > m_axi_global_weight_V_AWREADY;
    sc_out< sc_lv<64> > m_axi_global_weight_V_AWADDR;
    sc_out< sc_lv<1> > m_axi_global_weight_V_AWID;
    sc_out< sc_lv<32> > m_axi_global_weight_V_AWLEN;
    sc_out< sc_lv<3> > m_axi_global_weight_V_AWSIZE;
    sc_out< sc_lv<2> > m_axi_global_weight_V_AWBURST;
    sc_out< sc_lv<2> > m_axi_global_weight_V_AWLOCK;
    sc_out< sc_lv<4> > m_axi_global_weight_V_AWCACHE;
    sc_out< sc_lv<3> > m_axi_global_weight_V_AWPROT;
    sc_out< sc_lv<4> > m_axi_global_weight_V_AWQOS;
    sc_out< sc_lv<4> > m_axi_global_weight_V_AWREGION;
    sc_out< sc_lv<1> > m_axi_global_weight_V_AWUSER;
    sc_out< sc_logic > m_axi_global_weight_V_WVALID;
    sc_in< sc_logic > m_axi_global_weight_V_WREADY;
    sc_out< sc_lv<512> > m_axi_global_weight_V_WDATA;
    sc_out< sc_lv<64> > m_axi_global_weight_V_WSTRB;
    sc_out< sc_logic > m_axi_global_weight_V_WLAST;
    sc_out< sc_lv<1> > m_axi_global_weight_V_WID;
    sc_out< sc_lv<1> > m_axi_global_weight_V_WUSER;
    sc_out< sc_logic > m_axi_global_weight_V_ARVALID;
    sc_in< sc_logic > m_axi_global_weight_V_ARREADY;
    sc_out< sc_lv<64> > m_axi_global_weight_V_ARADDR;
    sc_out< sc_lv<1> > m_axi_global_weight_V_ARID;
    sc_out< sc_lv<32> > m_axi_global_weight_V_ARLEN;
    sc_out< sc_lv<3> > m_axi_global_weight_V_ARSIZE;
    sc_out< sc_lv<2> > m_axi_global_weight_V_ARBURST;
    sc_out< sc_lv<2> > m_axi_global_weight_V_ARLOCK;
    sc_out< sc_lv<4> > m_axi_global_weight_V_ARCACHE;
    sc_out< sc_lv<3> > m_axi_global_weight_V_ARPROT;
    sc_out< sc_lv<4> > m_axi_global_weight_V_ARQOS;
    sc_out< sc_lv<4> > m_axi_global_weight_V_ARREGION;
    sc_out< sc_lv<1> > m_axi_global_weight_V_ARUSER;
    sc_in< sc_logic > m_axi_global_weight_V_RVALID;
    sc_out< sc_logic > m_axi_global_weight_V_RREADY;
    sc_in< sc_lv<512> > m_axi_global_weight_V_RDATA;
    sc_in< sc_logic > m_axi_global_weight_V_RLAST;
    sc_in< sc_lv<1> > m_axi_global_weight_V_RID;
    sc_in< sc_lv<1> > m_axi_global_weight_V_RUSER;
    sc_in< sc_lv<2> > m_axi_global_weight_V_RRESP;
    sc_in< sc_logic > m_axi_global_weight_V_BVALID;
    sc_out< sc_logic > m_axi_global_weight_V_BREADY;
    sc_in< sc_lv<2> > m_axi_global_weight_V_BRESP;
    sc_in< sc_lv<1> > m_axi_global_weight_V_BID;
    sc_in< sc_lv<1> > m_axi_global_weight_V_BUSER;
    sc_in< sc_lv<58> > global_weight_V_offset;
    sc_in< sc_lv<58> > global_bias_V_offset;
    sc_in< sc_lv<58> > global_cout_V_offset;
    sc_out< sc_lv<5> > config_r_address0;
    sc_out< sc_logic > config_r_ce0;
    sc_out< sc_lv<32> > config_r_d0;
    sc_in< sc_lv<32> > config_r_q0;
    sc_out< sc_logic > config_r_we0;
    sc_out< sc_lv<5> > config_r_address1;
    sc_out< sc_logic > config_r_ce1;
    sc_out< sc_lv<32> > config_r_d1;
    sc_in< sc_lv<32> > config_r_q1;
    sc_out< sc_logic > config_r_we1;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > global_cin_V_offset_ap_vld;
    sc_in< sc_logic > global_weight_V_offset_ap_vld;
    sc_in< sc_logic > global_bias_V_offset_ap_vld;
    sc_in< sc_logic > global_cout_V_offset_ap_vld;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const1;
    sc_signal< sc_lv<1> > ap_var_for_const2;
    sc_signal< sc_lv<512> > ap_var_for_const3;


    // Module declarations
    engine(sc_module_name name);
    SC_HAS_PROCESS(engine);

    ~engine();

    sc_trace_file* mVcdFile;

    cin_load13* cin_load13_U0;
    weight_load* weight_load_U0;
    conv* conv_U0;
    relu* relu_U0;
    pool* pool_U0;
    cout_write* cout_write_U0;
    fifo_w256_d128_A* fifo_cin_load_0_V_V_U;
    fifo_w192_d16_A* config_weight_load_V_U;
    fifo_w58_d2_A* global_weight_V_offs_3_U;
    fifo_w58_d2_A* global_bias_V_offset_5_U;
    fifo_w58_d6_A* global_cout_V_offset_2_U;
    fifo_w256_d64_A* fifo_weight_load_1_V_U;
    fifo_w256_d16_A* fifo_beta_conv_V_V_U;
    fifo_w256_d16_A* fifo_gamma_conv_V_V_U;
    fifo_w192_d16_A* config_conv_V_V_U;
    fifo_w256_d64_A* fifo_conv_0_V_V_U;
    fifo_w192_d16_A* config_relu_V_V_U;
    fifo_w256_d64_A* fifo_relu_0_V_V_U;
    fifo_w192_d16_A* config_pool_V_V_U;
    fifo_w256_d64_A* fifo_pool_0_V_V_U;
    fifo_w192_d16_A* config_data_write_V_s_U;
    start_for_conv_U0* start_for_conv_U0_U;
    start_for_cout_wrYie* start_for_cout_wrYie_U;
    start_for_relu_U0* start_for_relu_U0_U;
    start_for_pool_U0* start_for_pool_U0_U;
    sc_signal< sc_logic > cin_load13_U0_ap_start;
    sc_signal< sc_logic > cin_load13_U0_start_full_n;
    sc_signal< sc_logic > cin_load13_U0_ap_done;
    sc_signal< sc_logic > cin_load13_U0_ap_continue;
    sc_signal< sc_logic > cin_load13_U0_ap_idle;
    sc_signal< sc_logic > cin_load13_U0_ap_ready;
    sc_signal< sc_logic > cin_load13_U0_start_out;
    sc_signal< sc_logic > cin_load13_U0_start_write;
    sc_signal< sc_logic > cin_load13_U0_m_axi_global_cin_V_AWVALID;
    sc_signal< sc_lv<64> > cin_load13_U0_m_axi_global_cin_V_AWADDR;
    sc_signal< sc_lv<1> > cin_load13_U0_m_axi_global_cin_V_AWID;
    sc_signal< sc_lv<32> > cin_load13_U0_m_axi_global_cin_V_AWLEN;
    sc_signal< sc_lv<3> > cin_load13_U0_m_axi_global_cin_V_AWSIZE;
    sc_signal< sc_lv<2> > cin_load13_U0_m_axi_global_cin_V_AWBURST;
    sc_signal< sc_lv<2> > cin_load13_U0_m_axi_global_cin_V_AWLOCK;
    sc_signal< sc_lv<4> > cin_load13_U0_m_axi_global_cin_V_AWCACHE;
    sc_signal< sc_lv<3> > cin_load13_U0_m_axi_global_cin_V_AWPROT;
    sc_signal< sc_lv<4> > cin_load13_U0_m_axi_global_cin_V_AWQOS;
    sc_signal< sc_lv<4> > cin_load13_U0_m_axi_global_cin_V_AWREGION;
    sc_signal< sc_lv<1> > cin_load13_U0_m_axi_global_cin_V_AWUSER;
    sc_signal< sc_logic > cin_load13_U0_m_axi_global_cin_V_WVALID;
    sc_signal< sc_lv<512> > cin_load13_U0_m_axi_global_cin_V_WDATA;
    sc_signal< sc_lv<64> > cin_load13_U0_m_axi_global_cin_V_WSTRB;
    sc_signal< sc_logic > cin_load13_U0_m_axi_global_cin_V_WLAST;
    sc_signal< sc_lv<1> > cin_load13_U0_m_axi_global_cin_V_WID;
    sc_signal< sc_lv<1> > cin_load13_U0_m_axi_global_cin_V_WUSER;
    sc_signal< sc_logic > cin_load13_U0_m_axi_global_cin_V_ARVALID;
    sc_signal< sc_lv<64> > cin_load13_U0_m_axi_global_cin_V_ARADDR;
    sc_signal< sc_lv<1> > cin_load13_U0_m_axi_global_cin_V_ARID;
    sc_signal< sc_lv<32> > cin_load13_U0_m_axi_global_cin_V_ARLEN;
    sc_signal< sc_lv<3> > cin_load13_U0_m_axi_global_cin_V_ARSIZE;
    sc_signal< sc_lv<2> > cin_load13_U0_m_axi_global_cin_V_ARBURST;
    sc_signal< sc_lv<2> > cin_load13_U0_m_axi_global_cin_V_ARLOCK;
    sc_signal< sc_lv<4> > cin_load13_U0_m_axi_global_cin_V_ARCACHE;
    sc_signal< sc_lv<3> > cin_load13_U0_m_axi_global_cin_V_ARPROT;
    sc_signal< sc_lv<4> > cin_load13_U0_m_axi_global_cin_V_ARQOS;
    sc_signal< sc_lv<4> > cin_load13_U0_m_axi_global_cin_V_ARREGION;
    sc_signal< sc_lv<1> > cin_load13_U0_m_axi_global_cin_V_ARUSER;
    sc_signal< sc_logic > cin_load13_U0_m_axi_global_cin_V_RREADY;
    sc_signal< sc_logic > cin_load13_U0_m_axi_global_cin_V_BREADY;
    sc_signal< sc_lv<5> > cin_load13_U0_config_r_address0;
    sc_signal< sc_logic > cin_load13_U0_config_r_ce0;
    sc_signal< sc_lv<5> > cin_load13_U0_config_r_address1;
    sc_signal< sc_logic > cin_load13_U0_config_r_ce1;
    sc_signal< sc_lv<256> > cin_load13_U0_fifo_cin_load_0_V_V_din;
    sc_signal< sc_logic > cin_load13_U0_fifo_cin_load_0_V_V_write;
    sc_signal< sc_lv<192> > cin_load13_U0_config_weight_load_V_din;
    sc_signal< sc_logic > cin_load13_U0_config_weight_load_V_write;
    sc_signal< sc_lv<58> > cin_load13_U0_global_weight_V_offset_out_din;
    sc_signal< sc_logic > cin_load13_U0_global_weight_V_offset_out_write;
    sc_signal< sc_lv<58> > cin_load13_U0_global_bias_V_offset_out_din;
    sc_signal< sc_logic > cin_load13_U0_global_bias_V_offset_out_write;
    sc_signal< sc_lv<58> > cin_load13_U0_global_cout_V_offset_out_din;
    sc_signal< sc_logic > cin_load13_U0_global_cout_V_offset_out_write;
    sc_signal< sc_logic > weight_load_U0_ap_start;
    sc_signal< sc_logic > weight_load_U0_ap_done;
    sc_signal< sc_logic > weight_load_U0_ap_continue;
    sc_signal< sc_logic > weight_load_U0_ap_idle;
    sc_signal< sc_logic > weight_load_U0_ap_ready;
    sc_signal< sc_logic > weight_load_U0_start_out;
    sc_signal< sc_logic > weight_load_U0_start_write;
    sc_signal< sc_logic > weight_load_U0_m_axi_global_weight_V_AWVALID;
    sc_signal< sc_lv<64> > weight_load_U0_m_axi_global_weight_V_AWADDR;
    sc_signal< sc_lv<1> > weight_load_U0_m_axi_global_weight_V_AWID;
    sc_signal< sc_lv<32> > weight_load_U0_m_axi_global_weight_V_AWLEN;
    sc_signal< sc_lv<3> > weight_load_U0_m_axi_global_weight_V_AWSIZE;
    sc_signal< sc_lv<2> > weight_load_U0_m_axi_global_weight_V_AWBURST;
    sc_signal< sc_lv<2> > weight_load_U0_m_axi_global_weight_V_AWLOCK;
    sc_signal< sc_lv<4> > weight_load_U0_m_axi_global_weight_V_AWCACHE;
    sc_signal< sc_lv<3> > weight_load_U0_m_axi_global_weight_V_AWPROT;
    sc_signal< sc_lv<4> > weight_load_U0_m_axi_global_weight_V_AWQOS;
    sc_signal< sc_lv<4> > weight_load_U0_m_axi_global_weight_V_AWREGION;
    sc_signal< sc_lv<1> > weight_load_U0_m_axi_global_weight_V_AWUSER;
    sc_signal< sc_logic > weight_load_U0_m_axi_global_weight_V_WVALID;
    sc_signal< sc_lv<512> > weight_load_U0_m_axi_global_weight_V_WDATA;
    sc_signal< sc_lv<64> > weight_load_U0_m_axi_global_weight_V_WSTRB;
    sc_signal< sc_logic > weight_load_U0_m_axi_global_weight_V_WLAST;
    sc_signal< sc_lv<1> > weight_load_U0_m_axi_global_weight_V_WID;
    sc_signal< sc_lv<1> > weight_load_U0_m_axi_global_weight_V_WUSER;
    sc_signal< sc_logic > weight_load_U0_m_axi_global_weight_V_ARVALID;
    sc_signal< sc_lv<64> > weight_load_U0_m_axi_global_weight_V_ARADDR;
    sc_signal< sc_lv<1> > weight_load_U0_m_axi_global_weight_V_ARID;
    sc_signal< sc_lv<32> > weight_load_U0_m_axi_global_weight_V_ARLEN;
    sc_signal< sc_lv<3> > weight_load_U0_m_axi_global_weight_V_ARSIZE;
    sc_signal< sc_lv<2> > weight_load_U0_m_axi_global_weight_V_ARBURST;
    sc_signal< sc_lv<2> > weight_load_U0_m_axi_global_weight_V_ARLOCK;
    sc_signal< sc_lv<4> > weight_load_U0_m_axi_global_weight_V_ARCACHE;
    sc_signal< sc_lv<3> > weight_load_U0_m_axi_global_weight_V_ARPROT;
    sc_signal< sc_lv<4> > weight_load_U0_m_axi_global_weight_V_ARQOS;
    sc_signal< sc_lv<4> > weight_load_U0_m_axi_global_weight_V_ARREGION;
    sc_signal< sc_lv<1> > weight_load_U0_m_axi_global_weight_V_ARUSER;
    sc_signal< sc_logic > weight_load_U0_m_axi_global_weight_V_RREADY;
    sc_signal< sc_logic > weight_load_U0_m_axi_global_weight_V_BREADY;
    sc_signal< sc_logic > weight_load_U0_global_weight_V_offset_read;
    sc_signal< sc_logic > weight_load_U0_global_bias_V_offset_read;
    sc_signal< sc_logic > weight_load_U0_fifo_config_in_V_V_read;
    sc_signal< sc_lv<256> > weight_load_U0_fifo_conv_weight_V_V_din;
    sc_signal< sc_logic > weight_load_U0_fifo_conv_weight_V_V_write;
    sc_signal< sc_lv<256> > weight_load_U0_fifo_gamma_conv_V_V_din;
    sc_signal< sc_logic > weight_load_U0_fifo_gamma_conv_V_V_write;
    sc_signal< sc_lv<256> > weight_load_U0_fifo_beta_conv_V_V_din;
    sc_signal< sc_logic > weight_load_U0_fifo_beta_conv_V_V_write;
    sc_signal< sc_lv<192> > weight_load_U0_fifo_config_out_V_V_din;
    sc_signal< sc_logic > weight_load_U0_fifo_config_out_V_V_write;
    sc_signal< sc_logic > conv_U0_ap_start;
    sc_signal< sc_logic > conv_U0_ap_done;
    sc_signal< sc_logic > conv_U0_ap_continue;
    sc_signal< sc_logic > conv_U0_ap_idle;
    sc_signal< sc_logic > conv_U0_ap_ready;
    sc_signal< sc_logic > conv_U0_fifo_cin_V_V_read;
    sc_signal< sc_logic > conv_U0_fifo_weight_V_V_read;
    sc_signal< sc_logic > conv_U0_fifo_config_in_V_V_read;
    sc_signal< sc_lv<256> > conv_U0_fifo_cout_V_V_din;
    sc_signal< sc_logic > conv_U0_fifo_cout_V_V_write;
    sc_signal< sc_lv<192> > conv_U0_fifo_config_out_V_V_din;
    sc_signal< sc_logic > conv_U0_fifo_config_out_V_V_write;
    sc_signal< sc_logic > relu_U0_ap_start;
    sc_signal< sc_logic > relu_U0_ap_done;
    sc_signal< sc_logic > relu_U0_ap_continue;
    sc_signal< sc_logic > relu_U0_ap_idle;
    sc_signal< sc_logic > relu_U0_ap_ready;
    sc_signal< sc_logic > relu_U0_start_out;
    sc_signal< sc_logic > relu_U0_start_write;
    sc_signal< sc_logic > relu_U0_fifo_cin_V_V_read;
    sc_signal< sc_logic > relu_U0_fifo_config_in_V_V_read;
    sc_signal< sc_lv<256> > relu_U0_fifo_cout_V_V_din;
    sc_signal< sc_logic > relu_U0_fifo_cout_V_V_write;
    sc_signal< sc_lv<192> > relu_U0_fifo_config_out_V_V_din;
    sc_signal< sc_logic > relu_U0_fifo_config_out_V_V_write;
    sc_signal< sc_logic > relu_U0_fifo_gamma_conv_V_V_read;
    sc_signal< sc_logic > relu_U0_fifo_beta_conv_V_V_read;
    sc_signal< sc_logic > pool_U0_ap_start;
    sc_signal< sc_logic > pool_U0_ap_done;
    sc_signal< sc_logic > pool_U0_ap_continue;
    sc_signal< sc_logic > pool_U0_ap_idle;
    sc_signal< sc_logic > pool_U0_ap_ready;
    sc_signal< sc_logic > pool_U0_fifo_cin_V_V_read;
    sc_signal< sc_logic > pool_U0_fifo_config_in_V_V_read;
    sc_signal< sc_lv<256> > pool_U0_fifo_cout_V_V_din;
    sc_signal< sc_logic > pool_U0_fifo_cout_V_V_write;
    sc_signal< sc_lv<192> > pool_U0_fifo_config_out_V_V_din;
    sc_signal< sc_logic > pool_U0_fifo_config_out_V_V_write;
    sc_signal< sc_logic > cout_write_U0_ap_start;
    sc_signal< sc_logic > cout_write_U0_ap_done;
    sc_signal< sc_logic > cout_write_U0_ap_continue;
    sc_signal< sc_logic > cout_write_U0_ap_idle;
    sc_signal< sc_logic > cout_write_U0_ap_ready;
    sc_signal< sc_logic > cout_write_U0_fifo_cout_V_V_read;
    sc_signal< sc_logic > cout_write_U0_fifo_config_in_V_V_read;
    sc_signal< sc_logic > cout_write_U0_m_axi_global_cout_V_AWVALID;
    sc_signal< sc_lv<64> > cout_write_U0_m_axi_global_cout_V_AWADDR;
    sc_signal< sc_lv<1> > cout_write_U0_m_axi_global_cout_V_AWID;
    sc_signal< sc_lv<32> > cout_write_U0_m_axi_global_cout_V_AWLEN;
    sc_signal< sc_lv<3> > cout_write_U0_m_axi_global_cout_V_AWSIZE;
    sc_signal< sc_lv<2> > cout_write_U0_m_axi_global_cout_V_AWBURST;
    sc_signal< sc_lv<2> > cout_write_U0_m_axi_global_cout_V_AWLOCK;
    sc_signal< sc_lv<4> > cout_write_U0_m_axi_global_cout_V_AWCACHE;
    sc_signal< sc_lv<3> > cout_write_U0_m_axi_global_cout_V_AWPROT;
    sc_signal< sc_lv<4> > cout_write_U0_m_axi_global_cout_V_AWQOS;
    sc_signal< sc_lv<4> > cout_write_U0_m_axi_global_cout_V_AWREGION;
    sc_signal< sc_lv<1> > cout_write_U0_m_axi_global_cout_V_AWUSER;
    sc_signal< sc_logic > cout_write_U0_m_axi_global_cout_V_WVALID;
    sc_signal< sc_lv<512> > cout_write_U0_m_axi_global_cout_V_WDATA;
    sc_signal< sc_lv<64> > cout_write_U0_m_axi_global_cout_V_WSTRB;
    sc_signal< sc_logic > cout_write_U0_m_axi_global_cout_V_WLAST;
    sc_signal< sc_lv<1> > cout_write_U0_m_axi_global_cout_V_WID;
    sc_signal< sc_lv<1> > cout_write_U0_m_axi_global_cout_V_WUSER;
    sc_signal< sc_logic > cout_write_U0_m_axi_global_cout_V_ARVALID;
    sc_signal< sc_lv<64> > cout_write_U0_m_axi_global_cout_V_ARADDR;
    sc_signal< sc_lv<1> > cout_write_U0_m_axi_global_cout_V_ARID;
    sc_signal< sc_lv<32> > cout_write_U0_m_axi_global_cout_V_ARLEN;
    sc_signal< sc_lv<3> > cout_write_U0_m_axi_global_cout_V_ARSIZE;
    sc_signal< sc_lv<2> > cout_write_U0_m_axi_global_cout_V_ARBURST;
    sc_signal< sc_lv<2> > cout_write_U0_m_axi_global_cout_V_ARLOCK;
    sc_signal< sc_lv<4> > cout_write_U0_m_axi_global_cout_V_ARCACHE;
    sc_signal< sc_lv<3> > cout_write_U0_m_axi_global_cout_V_ARPROT;
    sc_signal< sc_lv<4> > cout_write_U0_m_axi_global_cout_V_ARQOS;
    sc_signal< sc_lv<4> > cout_write_U0_m_axi_global_cout_V_ARREGION;
    sc_signal< sc_lv<1> > cout_write_U0_m_axi_global_cout_V_ARUSER;
    sc_signal< sc_logic > cout_write_U0_m_axi_global_cout_V_RREADY;
    sc_signal< sc_logic > cout_write_U0_m_axi_global_cout_V_BREADY;
    sc_signal< sc_logic > cout_write_U0_global_cout_V_offset_read;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > fifo_cin_load_0_V_V_full_n;
    sc_signal< sc_lv<256> > fifo_cin_load_0_V_V_dout;
    sc_signal< sc_logic > fifo_cin_load_0_V_V_empty_n;
    sc_signal< sc_logic > config_weight_load_V_full_n;
    sc_signal< sc_lv<192> > config_weight_load_V_dout;
    sc_signal< sc_logic > config_weight_load_V_empty_n;
    sc_signal< sc_logic > global_weight_V_offs_3_full_n;
    sc_signal< sc_lv<58> > global_weight_V_offs_3_dout;
    sc_signal< sc_logic > global_weight_V_offs_3_empty_n;
    sc_signal< sc_logic > global_bias_V_offset_5_full_n;
    sc_signal< sc_lv<58> > global_bias_V_offset_5_dout;
    sc_signal< sc_logic > global_bias_V_offset_5_empty_n;
    sc_signal< sc_logic > global_cout_V_offset_2_full_n;
    sc_signal< sc_lv<58> > global_cout_V_offset_2_dout;
    sc_signal< sc_logic > global_cout_V_offset_2_empty_n;
    sc_signal< sc_logic > fifo_weight_load_1_V_full_n;
    sc_signal< sc_lv<256> > fifo_weight_load_1_V_dout;
    sc_signal< sc_logic > fifo_weight_load_1_V_empty_n;
    sc_signal< sc_logic > fifo_beta_conv_V_V_full_n;
    sc_signal< sc_lv<256> > fifo_beta_conv_V_V_dout;
    sc_signal< sc_logic > fifo_beta_conv_V_V_empty_n;
    sc_signal< sc_logic > fifo_gamma_conv_V_V_full_n;
    sc_signal< sc_lv<256> > fifo_gamma_conv_V_V_dout;
    sc_signal< sc_logic > fifo_gamma_conv_V_V_empty_n;
    sc_signal< sc_logic > config_conv_V_V_full_n;
    sc_signal< sc_lv<192> > config_conv_V_V_dout;
    sc_signal< sc_logic > config_conv_V_V_empty_n;
    sc_signal< sc_logic > fifo_conv_0_V_V_full_n;
    sc_signal< sc_lv<256> > fifo_conv_0_V_V_dout;
    sc_signal< sc_logic > fifo_conv_0_V_V_empty_n;
    sc_signal< sc_logic > config_relu_V_V_full_n;
    sc_signal< sc_lv<192> > config_relu_V_V_dout;
    sc_signal< sc_logic > config_relu_V_V_empty_n;
    sc_signal< sc_logic > fifo_relu_0_V_V_full_n;
    sc_signal< sc_lv<256> > fifo_relu_0_V_V_dout;
    sc_signal< sc_logic > fifo_relu_0_V_V_empty_n;
    sc_signal< sc_logic > config_pool_V_V_full_n;
    sc_signal< sc_lv<192> > config_pool_V_V_dout;
    sc_signal< sc_logic > config_pool_V_V_empty_n;
    sc_signal< sc_logic > fifo_pool_0_V_V_full_n;
    sc_signal< sc_lv<256> > fifo_pool_0_V_V_dout;
    sc_signal< sc_logic > fifo_pool_0_V_V_empty_n;
    sc_signal< sc_logic > config_data_write_V_s_full_n;
    sc_signal< sc_lv<192> > config_data_write_V_s_dout;
    sc_signal< sc_logic > config_data_write_V_s_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_cin_load13_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_cin_load13_U0_ap_ready;
    sc_signal< sc_lv<2> > cin_load13_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_weight_load_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_weight_load_U0_ap_ready;
    sc_signal< sc_lv<2> > weight_load_U0_ap_ready_count;
    sc_signal< sc_lv<1> > start_for_conv_U0_din;
    sc_signal< sc_logic > start_for_conv_U0_full_n;
    sc_signal< sc_lv<1> > start_for_conv_U0_dout;
    sc_signal< sc_logic > start_for_conv_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_cout_write_U0_din;
    sc_signal< sc_logic > start_for_cout_write_U0_full_n;
    sc_signal< sc_lv<1> > start_for_cout_write_U0_dout;
    sc_signal< sc_logic > start_for_cout_write_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_relu_U0_din;
    sc_signal< sc_logic > start_for_relu_U0_full_n;
    sc_signal< sc_lv<1> > start_for_relu_U0_dout;
    sc_signal< sc_logic > start_for_relu_U0_empty_n;
    sc_signal< sc_logic > conv_U0_start_full_n;
    sc_signal< sc_logic > conv_U0_start_write;
    sc_signal< sc_lv<1> > start_for_pool_U0_din;
    sc_signal< sc_logic > start_for_pool_U0_full_n;
    sc_signal< sc_lv<1> > start_for_pool_U0_dout;
    sc_signal< sc_logic > start_for_pool_U0_empty_n;
    sc_signal< sc_logic > pool_U0_start_full_n;
    sc_signal< sc_logic > pool_U0_start_write;
    sc_signal< sc_logic > cout_write_U0_start_full_n;
    sc_signal< sc_logic > cout_write_U0_start_write;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<512> ap_const_lv512_lc_1;
    static const sc_lv<512> ap_const_lv512_lc_2;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_cin_load13_U0_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_ap_sync_weight_load_U0_ap_ready();
    void thread_cin_load13_U0_ap_continue();
    void thread_cin_load13_U0_ap_start();
    void thread_cin_load13_U0_start_full_n();
    void thread_config_r_address0();
    void thread_config_r_address1();
    void thread_config_r_ce0();
    void thread_config_r_ce1();
    void thread_config_r_d0();
    void thread_config_r_d1();
    void thread_config_r_we0();
    void thread_config_r_we1();
    void thread_conv_U0_ap_continue();
    void thread_conv_U0_ap_start();
    void thread_conv_U0_start_full_n();
    void thread_conv_U0_start_write();
    void thread_cout_write_U0_ap_continue();
    void thread_cout_write_U0_ap_start();
    void thread_cout_write_U0_start_full_n();
    void thread_cout_write_U0_start_write();
    void thread_m_axi_global_cin_V_ARADDR();
    void thread_m_axi_global_cin_V_ARBURST();
    void thread_m_axi_global_cin_V_ARCACHE();
    void thread_m_axi_global_cin_V_ARID();
    void thread_m_axi_global_cin_V_ARLEN();
    void thread_m_axi_global_cin_V_ARLOCK();
    void thread_m_axi_global_cin_V_ARPROT();
    void thread_m_axi_global_cin_V_ARQOS();
    void thread_m_axi_global_cin_V_ARREGION();
    void thread_m_axi_global_cin_V_ARSIZE();
    void thread_m_axi_global_cin_V_ARUSER();
    void thread_m_axi_global_cin_V_ARVALID();
    void thread_m_axi_global_cin_V_AWADDR();
    void thread_m_axi_global_cin_V_AWBURST();
    void thread_m_axi_global_cin_V_AWCACHE();
    void thread_m_axi_global_cin_V_AWID();
    void thread_m_axi_global_cin_V_AWLEN();
    void thread_m_axi_global_cin_V_AWLOCK();
    void thread_m_axi_global_cin_V_AWPROT();
    void thread_m_axi_global_cin_V_AWQOS();
    void thread_m_axi_global_cin_V_AWREGION();
    void thread_m_axi_global_cin_V_AWSIZE();
    void thread_m_axi_global_cin_V_AWUSER();
    void thread_m_axi_global_cin_V_AWVALID();
    void thread_m_axi_global_cin_V_BREADY();
    void thread_m_axi_global_cin_V_RREADY();
    void thread_m_axi_global_cin_V_WDATA();
    void thread_m_axi_global_cin_V_WID();
    void thread_m_axi_global_cin_V_WLAST();
    void thread_m_axi_global_cin_V_WSTRB();
    void thread_m_axi_global_cin_V_WUSER();
    void thread_m_axi_global_cin_V_WVALID();
    void thread_m_axi_global_weight_V_ARADDR();
    void thread_m_axi_global_weight_V_ARBURST();
    void thread_m_axi_global_weight_V_ARCACHE();
    void thread_m_axi_global_weight_V_ARID();
    void thread_m_axi_global_weight_V_ARLEN();
    void thread_m_axi_global_weight_V_ARLOCK();
    void thread_m_axi_global_weight_V_ARPROT();
    void thread_m_axi_global_weight_V_ARQOS();
    void thread_m_axi_global_weight_V_ARREGION();
    void thread_m_axi_global_weight_V_ARSIZE();
    void thread_m_axi_global_weight_V_ARUSER();
    void thread_m_axi_global_weight_V_ARVALID();
    void thread_m_axi_global_weight_V_AWADDR();
    void thread_m_axi_global_weight_V_AWBURST();
    void thread_m_axi_global_weight_V_AWCACHE();
    void thread_m_axi_global_weight_V_AWID();
    void thread_m_axi_global_weight_V_AWLEN();
    void thread_m_axi_global_weight_V_AWLOCK();
    void thread_m_axi_global_weight_V_AWPROT();
    void thread_m_axi_global_weight_V_AWQOS();
    void thread_m_axi_global_weight_V_AWREGION();
    void thread_m_axi_global_weight_V_AWSIZE();
    void thread_m_axi_global_weight_V_AWUSER();
    void thread_m_axi_global_weight_V_AWVALID();
    void thread_m_axi_global_weight_V_BREADY();
    void thread_m_axi_global_weight_V_RREADY();
    void thread_m_axi_global_weight_V_WDATA();
    void thread_m_axi_global_weight_V_WID();
    void thread_m_axi_global_weight_V_WLAST();
    void thread_m_axi_global_weight_V_WSTRB();
    void thread_m_axi_global_weight_V_WUSER();
    void thread_m_axi_global_weight_V_WVALID();
    void thread_pool_U0_ap_continue();
    void thread_pool_U0_ap_start();
    void thread_pool_U0_start_full_n();
    void thread_pool_U0_start_write();
    void thread_relu_U0_ap_continue();
    void thread_relu_U0_ap_start();
    void thread_start_for_conv_U0_din();
    void thread_start_for_cout_write_U0_din();
    void thread_start_for_pool_U0_din();
    void thread_start_for_relu_U0_din();
    void thread_weight_load_U0_ap_continue();
    void thread_weight_load_U0_ap_start();
};

}

using namespace ap_rtl;

#endif
