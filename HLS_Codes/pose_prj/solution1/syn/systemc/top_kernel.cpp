// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "top_kernel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic top_kernel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic top_kernel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> top_kernel::ap_ST_fsm_state1 = "1";
const sc_lv<15> top_kernel::ap_ST_fsm_state2 = "10";
const sc_lv<15> top_kernel::ap_ST_fsm_state3 = "100";
const sc_lv<15> top_kernel::ap_ST_fsm_state4 = "1000";
const sc_lv<15> top_kernel::ap_ST_fsm_state5 = "10000";
const sc_lv<15> top_kernel::ap_ST_fsm_state6 = "100000";
const sc_lv<15> top_kernel::ap_ST_fsm_state7 = "1000000";
const sc_lv<15> top_kernel::ap_ST_fsm_state8 = "10000000";
const sc_lv<15> top_kernel::ap_ST_fsm_state9 = "100000000";
const sc_lv<15> top_kernel::ap_ST_fsm_state10 = "1000000000";
const sc_lv<15> top_kernel::ap_ST_fsm_state11 = "10000000000";
const sc_lv<15> top_kernel::ap_ST_fsm_state12 = "100000000000";
const sc_lv<15> top_kernel::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<15> top_kernel::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<15> top_kernel::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> top_kernel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> top_kernel::ap_const_lv32_2 = "10";
const sc_lv<32> top_kernel::ap_const_lv32_9 = "1001";
const sc_lv<1> top_kernel::ap_const_lv1_0 = "0";
const int top_kernel::C_S_AXI_DATA_WIDTH = "100000";
const int top_kernel::C_M_AXI_GMEM1_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top_kernel::C_M_AXI_GMEM1_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top_kernel::C_M_AXI_GMEM1_CACHE_VALUE = "11";
const int top_kernel::C_M_AXI_DATA_WIDTH = "100000";
const int top_kernel::C_M_AXI_GMEM3_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top_kernel::C_M_AXI_GMEM3_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top_kernel::C_M_AXI_GMEM3_CACHE_VALUE = "11";
const int top_kernel::C_M_AXI_GMEM2_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top_kernel::C_M_AXI_GMEM2_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top_kernel::C_M_AXI_GMEM2_CACHE_VALUE = "11";
const int top_kernel::C_M_AXI_GCONTROL_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top_kernel::C_M_AXI_GCONTROL_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int top_kernel::C_M_AXI_GCONTROL_CACHE_VALUE = "11";
const sc_lv<32> top_kernel::ap_const_lv32_1 = "1";
const sc_lv<32> top_kernel::ap_const_lv32_8 = "1000";
const sc_lv<1> top_kernel::ap_const_lv1_1 = "1";
const sc_lv<32> top_kernel::ap_const_lv32_B = "1011";
const sc_lv<32> top_kernel::ap_const_lv32_C = "1100";
const sc_lv<32> top_kernel::ap_const_lv32_E = "1110";
const bool top_kernel::ap_const_boolean_0 = false;
const sc_lv<3> top_kernel::ap_const_lv3_0 = "000";
const sc_lv<30> top_kernel::ap_const_lv30_0 = "000000000000000000000000000000";
const sc_lv<32> top_kernel::ap_const_lv32_A = "1010";
const sc_lv<32> top_kernel::ap_const_lv32_D = "1101";
const sc_lv<64> top_kernel::ap_const_lv64_19 = "11001";
const sc_lv<2> top_kernel::ap_const_lv2_0 = "00";
const sc_lv<4> top_kernel::ap_const_lv4_0 = "0000";
const sc_lv<32> top_kernel::ap_const_lv32_3F = "111111";
const sc_lv<32> top_kernel::ap_const_lv32_6 = "110";
const sc_lv<3> top_kernel::ap_const_lv3_5 = "101";
const sc_lv<3> top_kernel::ap_const_lv3_1 = "1";
const sc_lv<5> top_kernel::ap_const_lv5_0 = "00000";
const sc_lv<8> top_kernel::ap_const_lv8_5 = "101";
const sc_lv<32> top_kernel::ap_const_lv32_5 = "101";
const sc_lv<30> top_kernel::ap_const_lv30_1 = "1";
const sc_lv<32> top_kernel::ap_const_lv32_FFFFFFF9 = "11111111111111111111111111111001";
const sc_lv<64> top_kernel::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<512> top_kernel::ap_const_lv512_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<8> top_kernel::ap_const_lv8_0 = "00000000";
const bool top_kernel::ap_const_boolean_1 = true;

top_kernel::top_kernel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    top_kernel_control_s_axi_U = new top_kernel_control_s_axi<C_S_AXI_CONTROL_ADDR_WIDTH,C_S_AXI_CONTROL_DATA_WIDTH>("top_kernel_control_s_axi_U");
    top_kernel_control_s_axi_U->AWVALID(s_axi_control_AWVALID);
    top_kernel_control_s_axi_U->AWREADY(s_axi_control_AWREADY);
    top_kernel_control_s_axi_U->AWADDR(s_axi_control_AWADDR);
    top_kernel_control_s_axi_U->WVALID(s_axi_control_WVALID);
    top_kernel_control_s_axi_U->WREADY(s_axi_control_WREADY);
    top_kernel_control_s_axi_U->WDATA(s_axi_control_WDATA);
    top_kernel_control_s_axi_U->WSTRB(s_axi_control_WSTRB);
    top_kernel_control_s_axi_U->ARVALID(s_axi_control_ARVALID);
    top_kernel_control_s_axi_U->ARREADY(s_axi_control_ARREADY);
    top_kernel_control_s_axi_U->ARADDR(s_axi_control_ARADDR);
    top_kernel_control_s_axi_U->RVALID(s_axi_control_RVALID);
    top_kernel_control_s_axi_U->RREADY(s_axi_control_RREADY);
    top_kernel_control_s_axi_U->RDATA(s_axi_control_RDATA);
    top_kernel_control_s_axi_U->RRESP(s_axi_control_RRESP);
    top_kernel_control_s_axi_U->BVALID(s_axi_control_BVALID);
    top_kernel_control_s_axi_U->BREADY(s_axi_control_BREADY);
    top_kernel_control_s_axi_U->BRESP(s_axi_control_BRESP);
    top_kernel_control_s_axi_U->ACLK(ap_clk);
    top_kernel_control_s_axi_U->ARESET(ap_rst_n_inv);
    top_kernel_control_s_axi_U->ACLK_EN(ap_var_for_const0);
    top_kernel_control_s_axi_U->ap_start(ap_start);
    top_kernel_control_s_axi_U->interrupt(interrupt);
    top_kernel_control_s_axi_U->ap_ready(ap_ready);
    top_kernel_control_s_axi_U->ap_done(ap_done);
    top_kernel_control_s_axi_U->ap_idle(ap_idle);
    top_kernel_control_s_axi_U->global_cin_V(global_cin_V);
    top_kernel_control_s_axi_U->global_prev_cin_V(global_prev_cin_V);
    top_kernel_control_s_axi_U->global_cout_V(global_cout_V);
    top_kernel_control_s_axi_U->global_weight_V(global_weight_V);
    top_kernel_control_s_axi_U->global_bias_V(global_bias_V);
    top_kernel_control_s_axi_U->layer_config_V(layer_config_V);
    top_kernel_gmem1_m_axi_U = new top_kernel_gmem1_m_axi<0,512,64,5,16,16,16,16,C_M_AXI_GMEM1_ID_WIDTH,C_M_AXI_GMEM1_ADDR_WIDTH,C_M_AXI_GMEM1_DATA_WIDTH,C_M_AXI_GMEM1_AWUSER_WIDTH,C_M_AXI_GMEM1_ARUSER_WIDTH,C_M_AXI_GMEM1_WUSER_WIDTH,C_M_AXI_GMEM1_RUSER_WIDTH,C_M_AXI_GMEM1_BUSER_WIDTH,C_M_AXI_GMEM1_USER_VALUE,C_M_AXI_GMEM1_PROT_VALUE,C_M_AXI_GMEM1_CACHE_VALUE>("top_kernel_gmem1_m_axi_U");
    top_kernel_gmem1_m_axi_U->AWVALID(m_axi_gmem1_AWVALID);
    top_kernel_gmem1_m_axi_U->AWREADY(m_axi_gmem1_AWREADY);
    top_kernel_gmem1_m_axi_U->AWADDR(m_axi_gmem1_AWADDR);
    top_kernel_gmem1_m_axi_U->AWID(m_axi_gmem1_AWID);
    top_kernel_gmem1_m_axi_U->AWLEN(m_axi_gmem1_AWLEN);
    top_kernel_gmem1_m_axi_U->AWSIZE(m_axi_gmem1_AWSIZE);
    top_kernel_gmem1_m_axi_U->AWBURST(m_axi_gmem1_AWBURST);
    top_kernel_gmem1_m_axi_U->AWLOCK(m_axi_gmem1_AWLOCK);
    top_kernel_gmem1_m_axi_U->AWCACHE(m_axi_gmem1_AWCACHE);
    top_kernel_gmem1_m_axi_U->AWPROT(m_axi_gmem1_AWPROT);
    top_kernel_gmem1_m_axi_U->AWQOS(m_axi_gmem1_AWQOS);
    top_kernel_gmem1_m_axi_U->AWREGION(m_axi_gmem1_AWREGION);
    top_kernel_gmem1_m_axi_U->AWUSER(m_axi_gmem1_AWUSER);
    top_kernel_gmem1_m_axi_U->WVALID(m_axi_gmem1_WVALID);
    top_kernel_gmem1_m_axi_U->WREADY(m_axi_gmem1_WREADY);
    top_kernel_gmem1_m_axi_U->WDATA(m_axi_gmem1_WDATA);
    top_kernel_gmem1_m_axi_U->WSTRB(m_axi_gmem1_WSTRB);
    top_kernel_gmem1_m_axi_U->WLAST(m_axi_gmem1_WLAST);
    top_kernel_gmem1_m_axi_U->WID(m_axi_gmem1_WID);
    top_kernel_gmem1_m_axi_U->WUSER(m_axi_gmem1_WUSER);
    top_kernel_gmem1_m_axi_U->ARVALID(m_axi_gmem1_ARVALID);
    top_kernel_gmem1_m_axi_U->ARREADY(m_axi_gmem1_ARREADY);
    top_kernel_gmem1_m_axi_U->ARADDR(m_axi_gmem1_ARADDR);
    top_kernel_gmem1_m_axi_U->ARID(m_axi_gmem1_ARID);
    top_kernel_gmem1_m_axi_U->ARLEN(m_axi_gmem1_ARLEN);
    top_kernel_gmem1_m_axi_U->ARSIZE(m_axi_gmem1_ARSIZE);
    top_kernel_gmem1_m_axi_U->ARBURST(m_axi_gmem1_ARBURST);
    top_kernel_gmem1_m_axi_U->ARLOCK(m_axi_gmem1_ARLOCK);
    top_kernel_gmem1_m_axi_U->ARCACHE(m_axi_gmem1_ARCACHE);
    top_kernel_gmem1_m_axi_U->ARPROT(m_axi_gmem1_ARPROT);
    top_kernel_gmem1_m_axi_U->ARQOS(m_axi_gmem1_ARQOS);
    top_kernel_gmem1_m_axi_U->ARREGION(m_axi_gmem1_ARREGION);
    top_kernel_gmem1_m_axi_U->ARUSER(m_axi_gmem1_ARUSER);
    top_kernel_gmem1_m_axi_U->RVALID(m_axi_gmem1_RVALID);
    top_kernel_gmem1_m_axi_U->RREADY(m_axi_gmem1_RREADY);
    top_kernel_gmem1_m_axi_U->RDATA(m_axi_gmem1_RDATA);
    top_kernel_gmem1_m_axi_U->RLAST(m_axi_gmem1_RLAST);
    top_kernel_gmem1_m_axi_U->RID(m_axi_gmem1_RID);
    top_kernel_gmem1_m_axi_U->RUSER(m_axi_gmem1_RUSER);
    top_kernel_gmem1_m_axi_U->RRESP(m_axi_gmem1_RRESP);
    top_kernel_gmem1_m_axi_U->BVALID(m_axi_gmem1_BVALID);
    top_kernel_gmem1_m_axi_U->BREADY(m_axi_gmem1_BREADY);
    top_kernel_gmem1_m_axi_U->BRESP(m_axi_gmem1_BRESP);
    top_kernel_gmem1_m_axi_U->BID(m_axi_gmem1_BID);
    top_kernel_gmem1_m_axi_U->BUSER(m_axi_gmem1_BUSER);
    top_kernel_gmem1_m_axi_U->ACLK(ap_clk);
    top_kernel_gmem1_m_axi_U->ARESET(ap_rst_n_inv);
    top_kernel_gmem1_m_axi_U->ACLK_EN(ap_var_for_const0);
    top_kernel_gmem1_m_axi_U->I_ARVALID(gmem1_ARVALID);
    top_kernel_gmem1_m_axi_U->I_ARREADY(gmem1_ARREADY);
    top_kernel_gmem1_m_axi_U->I_ARADDR(grp_engine_fu_228_m_axi_global_cin_V_ARADDR);
    top_kernel_gmem1_m_axi_U->I_ARID(grp_engine_fu_228_m_axi_global_cin_V_ARID);
    top_kernel_gmem1_m_axi_U->I_ARLEN(grp_engine_fu_228_m_axi_global_cin_V_ARLEN);
    top_kernel_gmem1_m_axi_U->I_ARSIZE(grp_engine_fu_228_m_axi_global_cin_V_ARSIZE);
    top_kernel_gmem1_m_axi_U->I_ARLOCK(grp_engine_fu_228_m_axi_global_cin_V_ARLOCK);
    top_kernel_gmem1_m_axi_U->I_ARCACHE(grp_engine_fu_228_m_axi_global_cin_V_ARCACHE);
    top_kernel_gmem1_m_axi_U->I_ARQOS(grp_engine_fu_228_m_axi_global_cin_V_ARQOS);
    top_kernel_gmem1_m_axi_U->I_ARPROT(grp_engine_fu_228_m_axi_global_cin_V_ARPROT);
    top_kernel_gmem1_m_axi_U->I_ARUSER(grp_engine_fu_228_m_axi_global_cin_V_ARUSER);
    top_kernel_gmem1_m_axi_U->I_ARBURST(grp_engine_fu_228_m_axi_global_cin_V_ARBURST);
    top_kernel_gmem1_m_axi_U->I_ARREGION(grp_engine_fu_228_m_axi_global_cin_V_ARREGION);
    top_kernel_gmem1_m_axi_U->I_RVALID(gmem1_RVALID);
    top_kernel_gmem1_m_axi_U->I_RREADY(gmem1_RREADY);
    top_kernel_gmem1_m_axi_U->I_RDATA(gmem1_RDATA);
    top_kernel_gmem1_m_axi_U->I_RID(gmem1_RID);
    top_kernel_gmem1_m_axi_U->I_RUSER(gmem1_RUSER);
    top_kernel_gmem1_m_axi_U->I_RRESP(gmem1_RRESP);
    top_kernel_gmem1_m_axi_U->I_RLAST(gmem1_RLAST);
    top_kernel_gmem1_m_axi_U->I_AWVALID(gmem1_AWVALID);
    top_kernel_gmem1_m_axi_U->I_AWREADY(gmem1_AWREADY);
    top_kernel_gmem1_m_axi_U->I_AWADDR(grp_engine_fu_228_m_axi_global_cin_V_AWADDR);
    top_kernel_gmem1_m_axi_U->I_AWID(grp_engine_fu_228_m_axi_global_cin_V_AWID);
    top_kernel_gmem1_m_axi_U->I_AWLEN(grp_engine_fu_228_m_axi_global_cin_V_AWLEN);
    top_kernel_gmem1_m_axi_U->I_AWSIZE(grp_engine_fu_228_m_axi_global_cin_V_AWSIZE);
    top_kernel_gmem1_m_axi_U->I_AWLOCK(grp_engine_fu_228_m_axi_global_cin_V_AWLOCK);
    top_kernel_gmem1_m_axi_U->I_AWCACHE(grp_engine_fu_228_m_axi_global_cin_V_AWCACHE);
    top_kernel_gmem1_m_axi_U->I_AWQOS(grp_engine_fu_228_m_axi_global_cin_V_AWQOS);
    top_kernel_gmem1_m_axi_U->I_AWPROT(grp_engine_fu_228_m_axi_global_cin_V_AWPROT);
    top_kernel_gmem1_m_axi_U->I_AWUSER(grp_engine_fu_228_m_axi_global_cin_V_AWUSER);
    top_kernel_gmem1_m_axi_U->I_AWBURST(grp_engine_fu_228_m_axi_global_cin_V_AWBURST);
    top_kernel_gmem1_m_axi_U->I_AWREGION(grp_engine_fu_228_m_axi_global_cin_V_AWREGION);
    top_kernel_gmem1_m_axi_U->I_WVALID(gmem1_WVALID);
    top_kernel_gmem1_m_axi_U->I_WREADY(gmem1_WREADY);
    top_kernel_gmem1_m_axi_U->I_WDATA(grp_engine_fu_228_m_axi_global_cin_V_WDATA);
    top_kernel_gmem1_m_axi_U->I_WID(grp_engine_fu_228_m_axi_global_cin_V_WID);
    top_kernel_gmem1_m_axi_U->I_WUSER(grp_engine_fu_228_m_axi_global_cin_V_WUSER);
    top_kernel_gmem1_m_axi_U->I_WLAST(grp_engine_fu_228_m_axi_global_cin_V_WLAST);
    top_kernel_gmem1_m_axi_U->I_WSTRB(grp_engine_fu_228_m_axi_global_cin_V_WSTRB);
    top_kernel_gmem1_m_axi_U->I_BVALID(gmem1_BVALID);
    top_kernel_gmem1_m_axi_U->I_BREADY(gmem1_BREADY);
    top_kernel_gmem1_m_axi_U->I_BRESP(gmem1_BRESP);
    top_kernel_gmem1_m_axi_U->I_BID(gmem1_BID);
    top_kernel_gmem1_m_axi_U->I_BUSER(gmem1_BUSER);
    top_kernel_gmem2_m_axi_U = new top_kernel_gmem2_m_axi<0,512,64,5,16,16,16,16,C_M_AXI_GMEM2_ID_WIDTH,C_M_AXI_GMEM2_ADDR_WIDTH,C_M_AXI_GMEM2_DATA_WIDTH,C_M_AXI_GMEM2_AWUSER_WIDTH,C_M_AXI_GMEM2_ARUSER_WIDTH,C_M_AXI_GMEM2_WUSER_WIDTH,C_M_AXI_GMEM2_RUSER_WIDTH,C_M_AXI_GMEM2_BUSER_WIDTH,C_M_AXI_GMEM2_USER_VALUE,C_M_AXI_GMEM2_PROT_VALUE,C_M_AXI_GMEM2_CACHE_VALUE>("top_kernel_gmem2_m_axi_U");
    top_kernel_gmem2_m_axi_U->AWVALID(m_axi_gmem2_AWVALID);
    top_kernel_gmem2_m_axi_U->AWREADY(m_axi_gmem2_AWREADY);
    top_kernel_gmem2_m_axi_U->AWADDR(m_axi_gmem2_AWADDR);
    top_kernel_gmem2_m_axi_U->AWID(m_axi_gmem2_AWID);
    top_kernel_gmem2_m_axi_U->AWLEN(m_axi_gmem2_AWLEN);
    top_kernel_gmem2_m_axi_U->AWSIZE(m_axi_gmem2_AWSIZE);
    top_kernel_gmem2_m_axi_U->AWBURST(m_axi_gmem2_AWBURST);
    top_kernel_gmem2_m_axi_U->AWLOCK(m_axi_gmem2_AWLOCK);
    top_kernel_gmem2_m_axi_U->AWCACHE(m_axi_gmem2_AWCACHE);
    top_kernel_gmem2_m_axi_U->AWPROT(m_axi_gmem2_AWPROT);
    top_kernel_gmem2_m_axi_U->AWQOS(m_axi_gmem2_AWQOS);
    top_kernel_gmem2_m_axi_U->AWREGION(m_axi_gmem2_AWREGION);
    top_kernel_gmem2_m_axi_U->AWUSER(m_axi_gmem2_AWUSER);
    top_kernel_gmem2_m_axi_U->WVALID(m_axi_gmem2_WVALID);
    top_kernel_gmem2_m_axi_U->WREADY(m_axi_gmem2_WREADY);
    top_kernel_gmem2_m_axi_U->WDATA(m_axi_gmem2_WDATA);
    top_kernel_gmem2_m_axi_U->WSTRB(m_axi_gmem2_WSTRB);
    top_kernel_gmem2_m_axi_U->WLAST(m_axi_gmem2_WLAST);
    top_kernel_gmem2_m_axi_U->WID(m_axi_gmem2_WID);
    top_kernel_gmem2_m_axi_U->WUSER(m_axi_gmem2_WUSER);
    top_kernel_gmem2_m_axi_U->ARVALID(m_axi_gmem2_ARVALID);
    top_kernel_gmem2_m_axi_U->ARREADY(m_axi_gmem2_ARREADY);
    top_kernel_gmem2_m_axi_U->ARADDR(m_axi_gmem2_ARADDR);
    top_kernel_gmem2_m_axi_U->ARID(m_axi_gmem2_ARID);
    top_kernel_gmem2_m_axi_U->ARLEN(m_axi_gmem2_ARLEN);
    top_kernel_gmem2_m_axi_U->ARSIZE(m_axi_gmem2_ARSIZE);
    top_kernel_gmem2_m_axi_U->ARBURST(m_axi_gmem2_ARBURST);
    top_kernel_gmem2_m_axi_U->ARLOCK(m_axi_gmem2_ARLOCK);
    top_kernel_gmem2_m_axi_U->ARCACHE(m_axi_gmem2_ARCACHE);
    top_kernel_gmem2_m_axi_U->ARPROT(m_axi_gmem2_ARPROT);
    top_kernel_gmem2_m_axi_U->ARQOS(m_axi_gmem2_ARQOS);
    top_kernel_gmem2_m_axi_U->ARREGION(m_axi_gmem2_ARREGION);
    top_kernel_gmem2_m_axi_U->ARUSER(m_axi_gmem2_ARUSER);
    top_kernel_gmem2_m_axi_U->RVALID(m_axi_gmem2_RVALID);
    top_kernel_gmem2_m_axi_U->RREADY(m_axi_gmem2_RREADY);
    top_kernel_gmem2_m_axi_U->RDATA(m_axi_gmem2_RDATA);
    top_kernel_gmem2_m_axi_U->RLAST(m_axi_gmem2_RLAST);
    top_kernel_gmem2_m_axi_U->RID(m_axi_gmem2_RID);
    top_kernel_gmem2_m_axi_U->RUSER(m_axi_gmem2_RUSER);
    top_kernel_gmem2_m_axi_U->RRESP(m_axi_gmem2_RRESP);
    top_kernel_gmem2_m_axi_U->BVALID(m_axi_gmem2_BVALID);
    top_kernel_gmem2_m_axi_U->BREADY(m_axi_gmem2_BREADY);
    top_kernel_gmem2_m_axi_U->BRESP(m_axi_gmem2_BRESP);
    top_kernel_gmem2_m_axi_U->BID(m_axi_gmem2_BID);
    top_kernel_gmem2_m_axi_U->BUSER(m_axi_gmem2_BUSER);
    top_kernel_gmem2_m_axi_U->ACLK(ap_clk);
    top_kernel_gmem2_m_axi_U->ARESET(ap_rst_n_inv);
    top_kernel_gmem2_m_axi_U->ACLK_EN(ap_var_for_const0);
    top_kernel_gmem2_m_axi_U->I_ARVALID(gmem2_ARVALID);
    top_kernel_gmem2_m_axi_U->I_ARREADY(gmem2_ARREADY);
    top_kernel_gmem2_m_axi_U->I_ARADDR(grp_engine_fu_228_m_axi_global_weight_V_ARADDR);
    top_kernel_gmem2_m_axi_U->I_ARID(grp_engine_fu_228_m_axi_global_weight_V_ARID);
    top_kernel_gmem2_m_axi_U->I_ARLEN(grp_engine_fu_228_m_axi_global_weight_V_ARLEN);
    top_kernel_gmem2_m_axi_U->I_ARSIZE(grp_engine_fu_228_m_axi_global_weight_V_ARSIZE);
    top_kernel_gmem2_m_axi_U->I_ARLOCK(grp_engine_fu_228_m_axi_global_weight_V_ARLOCK);
    top_kernel_gmem2_m_axi_U->I_ARCACHE(grp_engine_fu_228_m_axi_global_weight_V_ARCACHE);
    top_kernel_gmem2_m_axi_U->I_ARQOS(grp_engine_fu_228_m_axi_global_weight_V_ARQOS);
    top_kernel_gmem2_m_axi_U->I_ARPROT(grp_engine_fu_228_m_axi_global_weight_V_ARPROT);
    top_kernel_gmem2_m_axi_U->I_ARUSER(grp_engine_fu_228_m_axi_global_weight_V_ARUSER);
    top_kernel_gmem2_m_axi_U->I_ARBURST(grp_engine_fu_228_m_axi_global_weight_V_ARBURST);
    top_kernel_gmem2_m_axi_U->I_ARREGION(grp_engine_fu_228_m_axi_global_weight_V_ARREGION);
    top_kernel_gmem2_m_axi_U->I_RVALID(gmem2_RVALID);
    top_kernel_gmem2_m_axi_U->I_RREADY(gmem2_RREADY);
    top_kernel_gmem2_m_axi_U->I_RDATA(gmem2_RDATA);
    top_kernel_gmem2_m_axi_U->I_RID(gmem2_RID);
    top_kernel_gmem2_m_axi_U->I_RUSER(gmem2_RUSER);
    top_kernel_gmem2_m_axi_U->I_RRESP(gmem2_RRESP);
    top_kernel_gmem2_m_axi_U->I_RLAST(gmem2_RLAST);
    top_kernel_gmem2_m_axi_U->I_AWVALID(ap_var_for_const1);
    top_kernel_gmem2_m_axi_U->I_AWREADY(gmem2_AWREADY);
    top_kernel_gmem2_m_axi_U->I_AWADDR(ap_var_for_const2);
    top_kernel_gmem2_m_axi_U->I_AWID(ap_var_for_const3);
    top_kernel_gmem2_m_axi_U->I_AWLEN(ap_var_for_const4);
    top_kernel_gmem2_m_axi_U->I_AWSIZE(ap_var_for_const5);
    top_kernel_gmem2_m_axi_U->I_AWLOCK(ap_var_for_const6);
    top_kernel_gmem2_m_axi_U->I_AWCACHE(ap_var_for_const7);
    top_kernel_gmem2_m_axi_U->I_AWQOS(ap_var_for_const7);
    top_kernel_gmem2_m_axi_U->I_AWPROT(ap_var_for_const5);
    top_kernel_gmem2_m_axi_U->I_AWUSER(ap_var_for_const3);
    top_kernel_gmem2_m_axi_U->I_AWBURST(ap_var_for_const6);
    top_kernel_gmem2_m_axi_U->I_AWREGION(ap_var_for_const7);
    top_kernel_gmem2_m_axi_U->I_WVALID(ap_var_for_const1);
    top_kernel_gmem2_m_axi_U->I_WREADY(gmem2_WREADY);
    top_kernel_gmem2_m_axi_U->I_WDATA(ap_var_for_const8);
    top_kernel_gmem2_m_axi_U->I_WID(ap_var_for_const3);
    top_kernel_gmem2_m_axi_U->I_WUSER(ap_var_for_const3);
    top_kernel_gmem2_m_axi_U->I_WLAST(ap_var_for_const1);
    top_kernel_gmem2_m_axi_U->I_WSTRB(ap_var_for_const2);
    top_kernel_gmem2_m_axi_U->I_BVALID(gmem2_BVALID);
    top_kernel_gmem2_m_axi_U->I_BREADY(ap_var_for_const1);
    top_kernel_gmem2_m_axi_U->I_BRESP(gmem2_BRESP);
    top_kernel_gmem2_m_axi_U->I_BID(gmem2_BID);
    top_kernel_gmem2_m_axi_U->I_BUSER(gmem2_BUSER);
    top_kernel_gcontrol_m_axi_U = new top_kernel_gcontrol_m_axi<0,32,64,5,16,16,16,16,C_M_AXI_GCONTROL_ID_WIDTH,C_M_AXI_GCONTROL_ADDR_WIDTH,C_M_AXI_GCONTROL_DATA_WIDTH,C_M_AXI_GCONTROL_AWUSER_WIDTH,C_M_AXI_GCONTROL_ARUSER_WIDTH,C_M_AXI_GCONTROL_WUSER_WIDTH,C_M_AXI_GCONTROL_RUSER_WIDTH,C_M_AXI_GCONTROL_BUSER_WIDTH,C_M_AXI_GCONTROL_USER_VALUE,C_M_AXI_GCONTROL_PROT_VALUE,C_M_AXI_GCONTROL_CACHE_VALUE>("top_kernel_gcontrol_m_axi_U");
    top_kernel_gcontrol_m_axi_U->AWVALID(m_axi_gcontrol_AWVALID);
    top_kernel_gcontrol_m_axi_U->AWREADY(m_axi_gcontrol_AWREADY);
    top_kernel_gcontrol_m_axi_U->AWADDR(m_axi_gcontrol_AWADDR);
    top_kernel_gcontrol_m_axi_U->AWID(m_axi_gcontrol_AWID);
    top_kernel_gcontrol_m_axi_U->AWLEN(m_axi_gcontrol_AWLEN);
    top_kernel_gcontrol_m_axi_U->AWSIZE(m_axi_gcontrol_AWSIZE);
    top_kernel_gcontrol_m_axi_U->AWBURST(m_axi_gcontrol_AWBURST);
    top_kernel_gcontrol_m_axi_U->AWLOCK(m_axi_gcontrol_AWLOCK);
    top_kernel_gcontrol_m_axi_U->AWCACHE(m_axi_gcontrol_AWCACHE);
    top_kernel_gcontrol_m_axi_U->AWPROT(m_axi_gcontrol_AWPROT);
    top_kernel_gcontrol_m_axi_U->AWQOS(m_axi_gcontrol_AWQOS);
    top_kernel_gcontrol_m_axi_U->AWREGION(m_axi_gcontrol_AWREGION);
    top_kernel_gcontrol_m_axi_U->AWUSER(m_axi_gcontrol_AWUSER);
    top_kernel_gcontrol_m_axi_U->WVALID(m_axi_gcontrol_WVALID);
    top_kernel_gcontrol_m_axi_U->WREADY(m_axi_gcontrol_WREADY);
    top_kernel_gcontrol_m_axi_U->WDATA(m_axi_gcontrol_WDATA);
    top_kernel_gcontrol_m_axi_U->WSTRB(m_axi_gcontrol_WSTRB);
    top_kernel_gcontrol_m_axi_U->WLAST(m_axi_gcontrol_WLAST);
    top_kernel_gcontrol_m_axi_U->WID(m_axi_gcontrol_WID);
    top_kernel_gcontrol_m_axi_U->WUSER(m_axi_gcontrol_WUSER);
    top_kernel_gcontrol_m_axi_U->ARVALID(m_axi_gcontrol_ARVALID);
    top_kernel_gcontrol_m_axi_U->ARREADY(m_axi_gcontrol_ARREADY);
    top_kernel_gcontrol_m_axi_U->ARADDR(m_axi_gcontrol_ARADDR);
    top_kernel_gcontrol_m_axi_U->ARID(m_axi_gcontrol_ARID);
    top_kernel_gcontrol_m_axi_U->ARLEN(m_axi_gcontrol_ARLEN);
    top_kernel_gcontrol_m_axi_U->ARSIZE(m_axi_gcontrol_ARSIZE);
    top_kernel_gcontrol_m_axi_U->ARBURST(m_axi_gcontrol_ARBURST);
    top_kernel_gcontrol_m_axi_U->ARLOCK(m_axi_gcontrol_ARLOCK);
    top_kernel_gcontrol_m_axi_U->ARCACHE(m_axi_gcontrol_ARCACHE);
    top_kernel_gcontrol_m_axi_U->ARPROT(m_axi_gcontrol_ARPROT);
    top_kernel_gcontrol_m_axi_U->ARQOS(m_axi_gcontrol_ARQOS);
    top_kernel_gcontrol_m_axi_U->ARREGION(m_axi_gcontrol_ARREGION);
    top_kernel_gcontrol_m_axi_U->ARUSER(m_axi_gcontrol_ARUSER);
    top_kernel_gcontrol_m_axi_U->RVALID(m_axi_gcontrol_RVALID);
    top_kernel_gcontrol_m_axi_U->RREADY(m_axi_gcontrol_RREADY);
    top_kernel_gcontrol_m_axi_U->RDATA(m_axi_gcontrol_RDATA);
    top_kernel_gcontrol_m_axi_U->RLAST(m_axi_gcontrol_RLAST);
    top_kernel_gcontrol_m_axi_U->RID(m_axi_gcontrol_RID);
    top_kernel_gcontrol_m_axi_U->RUSER(m_axi_gcontrol_RUSER);
    top_kernel_gcontrol_m_axi_U->RRESP(m_axi_gcontrol_RRESP);
    top_kernel_gcontrol_m_axi_U->BVALID(m_axi_gcontrol_BVALID);
    top_kernel_gcontrol_m_axi_U->BREADY(m_axi_gcontrol_BREADY);
    top_kernel_gcontrol_m_axi_U->BRESP(m_axi_gcontrol_BRESP);
    top_kernel_gcontrol_m_axi_U->BID(m_axi_gcontrol_BID);
    top_kernel_gcontrol_m_axi_U->BUSER(m_axi_gcontrol_BUSER);
    top_kernel_gcontrol_m_axi_U->ACLK(ap_clk);
    top_kernel_gcontrol_m_axi_U->ARESET(ap_rst_n_inv);
    top_kernel_gcontrol_m_axi_U->ACLK_EN(ap_var_for_const0);
    top_kernel_gcontrol_m_axi_U->I_ARVALID(gcontrol_ARVALID);
    top_kernel_gcontrol_m_axi_U->I_ARREADY(gcontrol_ARREADY);
    top_kernel_gcontrol_m_axi_U->I_ARADDR(gcontrol_addr_reg_426);
    top_kernel_gcontrol_m_axi_U->I_ARID(ap_var_for_const3);
    top_kernel_gcontrol_m_axi_U->I_ARLEN(gcontrol_ARLEN);
    top_kernel_gcontrol_m_axi_U->I_ARSIZE(ap_var_for_const5);
    top_kernel_gcontrol_m_axi_U->I_ARLOCK(ap_var_for_const6);
    top_kernel_gcontrol_m_axi_U->I_ARCACHE(ap_var_for_const7);
    top_kernel_gcontrol_m_axi_U->I_ARQOS(ap_var_for_const7);
    top_kernel_gcontrol_m_axi_U->I_ARPROT(ap_var_for_const5);
    top_kernel_gcontrol_m_axi_U->I_ARUSER(ap_var_for_const3);
    top_kernel_gcontrol_m_axi_U->I_ARBURST(ap_var_for_const6);
    top_kernel_gcontrol_m_axi_U->I_ARREGION(ap_var_for_const7);
    top_kernel_gcontrol_m_axi_U->I_RVALID(gcontrol_RVALID);
    top_kernel_gcontrol_m_axi_U->I_RREADY(gcontrol_RREADY);
    top_kernel_gcontrol_m_axi_U->I_RDATA(gcontrol_RDATA);
    top_kernel_gcontrol_m_axi_U->I_RID(gcontrol_RID);
    top_kernel_gcontrol_m_axi_U->I_RUSER(gcontrol_RUSER);
    top_kernel_gcontrol_m_axi_U->I_RRESP(gcontrol_RRESP);
    top_kernel_gcontrol_m_axi_U->I_RLAST(gcontrol_RLAST);
    top_kernel_gcontrol_m_axi_U->I_AWVALID(ap_var_for_const1);
    top_kernel_gcontrol_m_axi_U->I_AWREADY(gcontrol_AWREADY);
    top_kernel_gcontrol_m_axi_U->I_AWADDR(ap_var_for_const2);
    top_kernel_gcontrol_m_axi_U->I_AWID(ap_var_for_const3);
    top_kernel_gcontrol_m_axi_U->I_AWLEN(ap_var_for_const4);
    top_kernel_gcontrol_m_axi_U->I_AWSIZE(ap_var_for_const5);
    top_kernel_gcontrol_m_axi_U->I_AWLOCK(ap_var_for_const6);
    top_kernel_gcontrol_m_axi_U->I_AWCACHE(ap_var_for_const7);
    top_kernel_gcontrol_m_axi_U->I_AWQOS(ap_var_for_const7);
    top_kernel_gcontrol_m_axi_U->I_AWPROT(ap_var_for_const5);
    top_kernel_gcontrol_m_axi_U->I_AWUSER(ap_var_for_const3);
    top_kernel_gcontrol_m_axi_U->I_AWBURST(ap_var_for_const6);
    top_kernel_gcontrol_m_axi_U->I_AWREGION(ap_var_for_const7);
    top_kernel_gcontrol_m_axi_U->I_WVALID(ap_var_for_const1);
    top_kernel_gcontrol_m_axi_U->I_WREADY(gcontrol_WREADY);
    top_kernel_gcontrol_m_axi_U->I_WDATA(ap_var_for_const4);
    top_kernel_gcontrol_m_axi_U->I_WID(ap_var_for_const3);
    top_kernel_gcontrol_m_axi_U->I_WUSER(ap_var_for_const3);
    top_kernel_gcontrol_m_axi_U->I_WLAST(ap_var_for_const1);
    top_kernel_gcontrol_m_axi_U->I_WSTRB(ap_var_for_const7);
    top_kernel_gcontrol_m_axi_U->I_BVALID(gcontrol_BVALID);
    top_kernel_gcontrol_m_axi_U->I_BREADY(ap_var_for_const1);
    top_kernel_gcontrol_m_axi_U->I_BRESP(gcontrol_BRESP);
    top_kernel_gcontrol_m_axi_U->I_BID(gcontrol_BID);
    top_kernel_gcontrol_m_axi_U->I_BUSER(gcontrol_BUSER);
    config_U = new top_kernel_config("config_U");
    config_U->clk(ap_clk);
    config_U->reset(ap_rst_n_inv);
    config_U->address0(config_address0);
    config_U->ce0(config_ce0);
    config_U->we0(config_we0);
    config_U->d0(config_d0);
    config_U->q0(config_q0);
    config_U->address1(grp_engine_fu_228_config_r_address1);
    config_U->ce1(config_ce1);
    config_U->q1(config_q1);
    grp_engine_fu_228 = new engine("grp_engine_fu_228");
    grp_engine_fu_228->m_axi_global_cin_V_AWVALID(grp_engine_fu_228_m_axi_global_cin_V_AWVALID);
    grp_engine_fu_228->m_axi_global_cin_V_AWREADY(gmem1_AWREADY);
    grp_engine_fu_228->m_axi_global_cin_V_AWADDR(grp_engine_fu_228_m_axi_global_cin_V_AWADDR);
    grp_engine_fu_228->m_axi_global_cin_V_AWID(grp_engine_fu_228_m_axi_global_cin_V_AWID);
    grp_engine_fu_228->m_axi_global_cin_V_AWLEN(grp_engine_fu_228_m_axi_global_cin_V_AWLEN);
    grp_engine_fu_228->m_axi_global_cin_V_AWSIZE(grp_engine_fu_228_m_axi_global_cin_V_AWSIZE);
    grp_engine_fu_228->m_axi_global_cin_V_AWBURST(grp_engine_fu_228_m_axi_global_cin_V_AWBURST);
    grp_engine_fu_228->m_axi_global_cin_V_AWLOCK(grp_engine_fu_228_m_axi_global_cin_V_AWLOCK);
    grp_engine_fu_228->m_axi_global_cin_V_AWCACHE(grp_engine_fu_228_m_axi_global_cin_V_AWCACHE);
    grp_engine_fu_228->m_axi_global_cin_V_AWPROT(grp_engine_fu_228_m_axi_global_cin_V_AWPROT);
    grp_engine_fu_228->m_axi_global_cin_V_AWQOS(grp_engine_fu_228_m_axi_global_cin_V_AWQOS);
    grp_engine_fu_228->m_axi_global_cin_V_AWREGION(grp_engine_fu_228_m_axi_global_cin_V_AWREGION);
    grp_engine_fu_228->m_axi_global_cin_V_AWUSER(grp_engine_fu_228_m_axi_global_cin_V_AWUSER);
    grp_engine_fu_228->m_axi_global_cin_V_WVALID(grp_engine_fu_228_m_axi_global_cin_V_WVALID);
    grp_engine_fu_228->m_axi_global_cin_V_WREADY(gmem1_WREADY);
    grp_engine_fu_228->m_axi_global_cin_V_WDATA(grp_engine_fu_228_m_axi_global_cin_V_WDATA);
    grp_engine_fu_228->m_axi_global_cin_V_WSTRB(grp_engine_fu_228_m_axi_global_cin_V_WSTRB);
    grp_engine_fu_228->m_axi_global_cin_V_WLAST(grp_engine_fu_228_m_axi_global_cin_V_WLAST);
    grp_engine_fu_228->m_axi_global_cin_V_WID(grp_engine_fu_228_m_axi_global_cin_V_WID);
    grp_engine_fu_228->m_axi_global_cin_V_WUSER(grp_engine_fu_228_m_axi_global_cin_V_WUSER);
    grp_engine_fu_228->m_axi_global_cin_V_ARVALID(grp_engine_fu_228_m_axi_global_cin_V_ARVALID);
    grp_engine_fu_228->m_axi_global_cin_V_ARREADY(gmem1_ARREADY);
    grp_engine_fu_228->m_axi_global_cin_V_ARADDR(grp_engine_fu_228_m_axi_global_cin_V_ARADDR);
    grp_engine_fu_228->m_axi_global_cin_V_ARID(grp_engine_fu_228_m_axi_global_cin_V_ARID);
    grp_engine_fu_228->m_axi_global_cin_V_ARLEN(grp_engine_fu_228_m_axi_global_cin_V_ARLEN);
    grp_engine_fu_228->m_axi_global_cin_V_ARSIZE(grp_engine_fu_228_m_axi_global_cin_V_ARSIZE);
    grp_engine_fu_228->m_axi_global_cin_V_ARBURST(grp_engine_fu_228_m_axi_global_cin_V_ARBURST);
    grp_engine_fu_228->m_axi_global_cin_V_ARLOCK(grp_engine_fu_228_m_axi_global_cin_V_ARLOCK);
    grp_engine_fu_228->m_axi_global_cin_V_ARCACHE(grp_engine_fu_228_m_axi_global_cin_V_ARCACHE);
    grp_engine_fu_228->m_axi_global_cin_V_ARPROT(grp_engine_fu_228_m_axi_global_cin_V_ARPROT);
    grp_engine_fu_228->m_axi_global_cin_V_ARQOS(grp_engine_fu_228_m_axi_global_cin_V_ARQOS);
    grp_engine_fu_228->m_axi_global_cin_V_ARREGION(grp_engine_fu_228_m_axi_global_cin_V_ARREGION);
    grp_engine_fu_228->m_axi_global_cin_V_ARUSER(grp_engine_fu_228_m_axi_global_cin_V_ARUSER);
    grp_engine_fu_228->m_axi_global_cin_V_RVALID(gmem1_RVALID);
    grp_engine_fu_228->m_axi_global_cin_V_RREADY(grp_engine_fu_228_m_axi_global_cin_V_RREADY);
    grp_engine_fu_228->m_axi_global_cin_V_RDATA(gmem1_RDATA);
    grp_engine_fu_228->m_axi_global_cin_V_RLAST(gmem1_RLAST);
    grp_engine_fu_228->m_axi_global_cin_V_RID(gmem1_RID);
    grp_engine_fu_228->m_axi_global_cin_V_RUSER(gmem1_RUSER);
    grp_engine_fu_228->m_axi_global_cin_V_RRESP(gmem1_RRESP);
    grp_engine_fu_228->m_axi_global_cin_V_BVALID(gmem1_BVALID);
    grp_engine_fu_228->m_axi_global_cin_V_BREADY(grp_engine_fu_228_m_axi_global_cin_V_BREADY);
    grp_engine_fu_228->m_axi_global_cin_V_BRESP(gmem1_BRESP);
    grp_engine_fu_228->m_axi_global_cin_V_BID(gmem1_BID);
    grp_engine_fu_228->m_axi_global_cin_V_BUSER(gmem1_BUSER);
    grp_engine_fu_228->global_cin_V_offset(global_cin_V1_reg_408);
    grp_engine_fu_228->m_axi_global_weight_V_AWVALID(grp_engine_fu_228_m_axi_global_weight_V_AWVALID);
    grp_engine_fu_228->m_axi_global_weight_V_AWREADY(ap_var_for_const1);
    grp_engine_fu_228->m_axi_global_weight_V_AWADDR(grp_engine_fu_228_m_axi_global_weight_V_AWADDR);
    grp_engine_fu_228->m_axi_global_weight_V_AWID(grp_engine_fu_228_m_axi_global_weight_V_AWID);
    grp_engine_fu_228->m_axi_global_weight_V_AWLEN(grp_engine_fu_228_m_axi_global_weight_V_AWLEN);
    grp_engine_fu_228->m_axi_global_weight_V_AWSIZE(grp_engine_fu_228_m_axi_global_weight_V_AWSIZE);
    grp_engine_fu_228->m_axi_global_weight_V_AWBURST(grp_engine_fu_228_m_axi_global_weight_V_AWBURST);
    grp_engine_fu_228->m_axi_global_weight_V_AWLOCK(grp_engine_fu_228_m_axi_global_weight_V_AWLOCK);
    grp_engine_fu_228->m_axi_global_weight_V_AWCACHE(grp_engine_fu_228_m_axi_global_weight_V_AWCACHE);
    grp_engine_fu_228->m_axi_global_weight_V_AWPROT(grp_engine_fu_228_m_axi_global_weight_V_AWPROT);
    grp_engine_fu_228->m_axi_global_weight_V_AWQOS(grp_engine_fu_228_m_axi_global_weight_V_AWQOS);
    grp_engine_fu_228->m_axi_global_weight_V_AWREGION(grp_engine_fu_228_m_axi_global_weight_V_AWREGION);
    grp_engine_fu_228->m_axi_global_weight_V_AWUSER(grp_engine_fu_228_m_axi_global_weight_V_AWUSER);
    grp_engine_fu_228->m_axi_global_weight_V_WVALID(grp_engine_fu_228_m_axi_global_weight_V_WVALID);
    grp_engine_fu_228->m_axi_global_weight_V_WREADY(ap_var_for_const1);
    grp_engine_fu_228->m_axi_global_weight_V_WDATA(grp_engine_fu_228_m_axi_global_weight_V_WDATA);
    grp_engine_fu_228->m_axi_global_weight_V_WSTRB(grp_engine_fu_228_m_axi_global_weight_V_WSTRB);
    grp_engine_fu_228->m_axi_global_weight_V_WLAST(grp_engine_fu_228_m_axi_global_weight_V_WLAST);
    grp_engine_fu_228->m_axi_global_weight_V_WID(grp_engine_fu_228_m_axi_global_weight_V_WID);
    grp_engine_fu_228->m_axi_global_weight_V_WUSER(grp_engine_fu_228_m_axi_global_weight_V_WUSER);
    grp_engine_fu_228->m_axi_global_weight_V_ARVALID(grp_engine_fu_228_m_axi_global_weight_V_ARVALID);
    grp_engine_fu_228->m_axi_global_weight_V_ARREADY(gmem2_ARREADY);
    grp_engine_fu_228->m_axi_global_weight_V_ARADDR(grp_engine_fu_228_m_axi_global_weight_V_ARADDR);
    grp_engine_fu_228->m_axi_global_weight_V_ARID(grp_engine_fu_228_m_axi_global_weight_V_ARID);
    grp_engine_fu_228->m_axi_global_weight_V_ARLEN(grp_engine_fu_228_m_axi_global_weight_V_ARLEN);
    grp_engine_fu_228->m_axi_global_weight_V_ARSIZE(grp_engine_fu_228_m_axi_global_weight_V_ARSIZE);
    grp_engine_fu_228->m_axi_global_weight_V_ARBURST(grp_engine_fu_228_m_axi_global_weight_V_ARBURST);
    grp_engine_fu_228->m_axi_global_weight_V_ARLOCK(grp_engine_fu_228_m_axi_global_weight_V_ARLOCK);
    grp_engine_fu_228->m_axi_global_weight_V_ARCACHE(grp_engine_fu_228_m_axi_global_weight_V_ARCACHE);
    grp_engine_fu_228->m_axi_global_weight_V_ARPROT(grp_engine_fu_228_m_axi_global_weight_V_ARPROT);
    grp_engine_fu_228->m_axi_global_weight_V_ARQOS(grp_engine_fu_228_m_axi_global_weight_V_ARQOS);
    grp_engine_fu_228->m_axi_global_weight_V_ARREGION(grp_engine_fu_228_m_axi_global_weight_V_ARREGION);
    grp_engine_fu_228->m_axi_global_weight_V_ARUSER(grp_engine_fu_228_m_axi_global_weight_V_ARUSER);
    grp_engine_fu_228->m_axi_global_weight_V_RVALID(gmem2_RVALID);
    grp_engine_fu_228->m_axi_global_weight_V_RREADY(grp_engine_fu_228_m_axi_global_weight_V_RREADY);
    grp_engine_fu_228->m_axi_global_weight_V_RDATA(gmem2_RDATA);
    grp_engine_fu_228->m_axi_global_weight_V_RLAST(gmem2_RLAST);
    grp_engine_fu_228->m_axi_global_weight_V_RID(gmem2_RID);
    grp_engine_fu_228->m_axi_global_weight_V_RUSER(gmem2_RUSER);
    grp_engine_fu_228->m_axi_global_weight_V_RRESP(gmem2_RRESP);
    grp_engine_fu_228->m_axi_global_weight_V_BVALID(ap_var_for_const1);
    grp_engine_fu_228->m_axi_global_weight_V_BREADY(grp_engine_fu_228_m_axi_global_weight_V_BREADY);
    grp_engine_fu_228->m_axi_global_weight_V_BRESP(ap_var_for_const6);
    grp_engine_fu_228->m_axi_global_weight_V_BID(ap_var_for_const3);
    grp_engine_fu_228->m_axi_global_weight_V_BUSER(ap_var_for_const3);
    grp_engine_fu_228->global_weight_V_offset(global_weight_V7_reg_398);
    grp_engine_fu_228->global_bias_V_offset(global_bias_V9_reg_393);
    grp_engine_fu_228->global_cout_V_offset(global_cout_V5_reg_403);
    grp_engine_fu_228->config_r_address0(grp_engine_fu_228_config_r_address0);
    grp_engine_fu_228->config_r_ce0(grp_engine_fu_228_config_r_ce0);
    grp_engine_fu_228->config_r_d0(grp_engine_fu_228_config_r_d0);
    grp_engine_fu_228->config_r_q0(config_q0);
    grp_engine_fu_228->config_r_we0(grp_engine_fu_228_config_r_we0);
    grp_engine_fu_228->config_r_address1(grp_engine_fu_228_config_r_address1);
    grp_engine_fu_228->config_r_ce1(grp_engine_fu_228_config_r_ce1);
    grp_engine_fu_228->config_r_d1(grp_engine_fu_228_config_r_d1);
    grp_engine_fu_228->config_r_q1(config_q1);
    grp_engine_fu_228->config_r_we1(grp_engine_fu_228_config_r_we1);
    grp_engine_fu_228->ap_clk(ap_clk);
    grp_engine_fu_228->ap_rst(ap_rst_n_inv);
    grp_engine_fu_228->global_cin_V_offset_ap_vld(ap_var_for_const0);
    grp_engine_fu_228->global_weight_V_offset_ap_vld(ap_var_for_const0);
    grp_engine_fu_228->global_bias_V_offset_ap_vld(ap_var_for_const0);
    grp_engine_fu_228->global_cout_V_offset_ap_vld(ap_var_for_const0);
    grp_engine_fu_228->ap_start(grp_engine_fu_228_ap_start);
    grp_engine_fu_228->ap_done(grp_engine_fu_228_ap_done);
    grp_engine_fu_228->ap_ready(grp_engine_fu_228_ap_ready);
    grp_engine_fu_228->ap_idle(grp_engine_fu_228_ap_idle);
    grp_engine_fu_228->ap_continue(grp_engine_fu_228_ap_continue);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state10);
    sensitive << ( exitcond6_fu_363_p2 );
    sensitive << ( gcontrol_RVALID );

    SC_METHOD(thread_ap_block_state15_on_subcall_done);
    sensitive << ( ap_sync_grp_engine_fu_228_ap_ready );
    sensitive << ( ap_sync_grp_engine_fu_228_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_295_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_295_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_gcontrol_ARREADY);
    sensitive << ( gcontrol_ARREADY );
    sensitive << ( ap_reg_ioackin_gcontrol_ARREADY );

    SC_METHOD(thread_ap_sync_grp_engine_fu_228_ap_done);
    sensitive << ( grp_engine_fu_228_ap_done );
    sensitive << ( ap_sync_reg_grp_engine_fu_228_ap_done );

    SC_METHOD(thread_ap_sync_grp_engine_fu_228_ap_ready);
    sensitive << ( grp_engine_fu_228_ap_ready );
    sensitive << ( ap_sync_reg_grp_engine_fu_228_ap_ready );

    SC_METHOD(thread_config_address0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_engine_fu_228_config_r_address0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( indvar1_fu_379_p1 );
    sensitive << ( tmp_17_fu_384_p1 );

    SC_METHOD(thread_config_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_engine_fu_228_config_r_ce0 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_config_ce1);
    sensitive << ( grp_engine_fu_228_config_r_ce1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_config_d0);
    sensitive << ( gcontrol_addr_read_reg_455 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( cur_layer_batch_reg_192 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_config_we0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_exitcond6_fu_363_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond6_fu_363_p2 );
    sensitive << ( gcontrol_RVALID );
    sensitive << ( tmp_cast_reg_432 );
    sensitive << ( indvar_reg_216 );

    SC_METHOD(thread_exitcond_fu_295_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( layer_id_reg_205 );

    SC_METHOD(thread_gcontrol_ARLEN);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_cast_fu_344_p3 );
    sensitive << ( ap_reg_ioackin_gcontrol_ARREADY );

    SC_METHOD(thread_gcontrol_ARVALID);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_reg_ioackin_gcontrol_ARREADY );

    SC_METHOD(thread_gcontrol_RREADY);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond6_fu_363_p2 );
    sensitive << ( gcontrol_RVALID );

    SC_METHOD(thread_gcontrol_blk_n_AR);
    sensitive << ( m_axi_gcontrol_ARREADY );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_gcontrol_blk_n_R);
    sensitive << ( m_axi_gcontrol_RVALID );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond6_fu_363_p2 );

    SC_METHOD(thread_gmem1_ARVALID);
    sensitive << ( grp_engine_fu_228_m_axi_global_cin_V_ARVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_gmem1_AWVALID);
    sensitive << ( grp_engine_fu_228_m_axi_global_cin_V_AWVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_gmem1_BREADY);
    sensitive << ( grp_engine_fu_228_m_axi_global_cin_V_BREADY );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_gmem1_RREADY);
    sensitive << ( grp_engine_fu_228_m_axi_global_cin_V_RREADY );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_gmem1_WVALID);
    sensitive << ( grp_engine_fu_228_m_axi_global_cin_V_WVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_gmem2_ARVALID);
    sensitive << ( grp_engine_fu_228_m_axi_global_weight_V_ARVALID );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_gmem2_RREADY);
    sensitive << ( grp_engine_fu_228_m_axi_global_weight_V_RREADY );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_grp_engine_fu_228_ap_continue);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_block_state15_on_subcall_done );

    SC_METHOD(thread_grp_engine_fu_228_ap_start);
    sensitive << ( grp_engine_fu_228_ap_start_reg );

    SC_METHOD(thread_indvar1_fu_379_p1);
    sensitive << ( indvar_reg_216 );

    SC_METHOD(thread_indvar_next5_fu_368_p2);
    sensitive << ( indvar_reg_216 );

    SC_METHOD(thread_layer_config_V12_sum_1_fu_330_p1);
    sensitive << ( layer_config_V12_sum_fu_325_p2 );

    SC_METHOD(thread_layer_config_V12_sum_fu_325_p2);
    sensitive << ( tmp_71_cast_reg_388 );
    sensitive << ( tmp_60_cast_fu_321_p1 );

    SC_METHOD(thread_layer_id_1_fu_301_p2);
    sensitive << ( layer_id_reg_205 );

    SC_METHOD(thread_m_axi_gmem3_ARADDR);

    SC_METHOD(thread_m_axi_gmem3_ARBURST);

    SC_METHOD(thread_m_axi_gmem3_ARCACHE);

    SC_METHOD(thread_m_axi_gmem3_ARID);

    SC_METHOD(thread_m_axi_gmem3_ARLEN);

    SC_METHOD(thread_m_axi_gmem3_ARLOCK);

    SC_METHOD(thread_m_axi_gmem3_ARPROT);

    SC_METHOD(thread_m_axi_gmem3_ARQOS);

    SC_METHOD(thread_m_axi_gmem3_ARREGION);

    SC_METHOD(thread_m_axi_gmem3_ARSIZE);

    SC_METHOD(thread_m_axi_gmem3_ARUSER);

    SC_METHOD(thread_m_axi_gmem3_ARVALID);

    SC_METHOD(thread_m_axi_gmem3_AWADDR);

    SC_METHOD(thread_m_axi_gmem3_AWBURST);

    SC_METHOD(thread_m_axi_gmem3_AWCACHE);

    SC_METHOD(thread_m_axi_gmem3_AWID);

    SC_METHOD(thread_m_axi_gmem3_AWLEN);

    SC_METHOD(thread_m_axi_gmem3_AWLOCK);

    SC_METHOD(thread_m_axi_gmem3_AWPROT);

    SC_METHOD(thread_m_axi_gmem3_AWQOS);

    SC_METHOD(thread_m_axi_gmem3_AWREGION);

    SC_METHOD(thread_m_axi_gmem3_AWSIZE);

    SC_METHOD(thread_m_axi_gmem3_AWUSER);

    SC_METHOD(thread_m_axi_gmem3_AWVALID);

    SC_METHOD(thread_m_axi_gmem3_BREADY);

    SC_METHOD(thread_m_axi_gmem3_RREADY);

    SC_METHOD(thread_m_axi_gmem3_WDATA);

    SC_METHOD(thread_m_axi_gmem3_WID);

    SC_METHOD(thread_m_axi_gmem3_WLAST);

    SC_METHOD(thread_m_axi_gmem3_WSTRB);

    SC_METHOD(thread_m_axi_gmem3_WUSER);

    SC_METHOD(thread_m_axi_gmem3_WVALID);

    SC_METHOD(thread_tmp_15_fu_315_p2);
    sensitive << ( tmp_s_fu_307_p3 );

    SC_METHOD(thread_tmp_16_fu_374_p2);
    sensitive << ( tmp_27_reg_442 );

    SC_METHOD(thread_tmp_17_fu_384_p1);
    sensitive << ( tmp_16_reg_460 );

    SC_METHOD(thread_tmp_27_fu_357_p2);
    sensitive << ( cur_layer_batch_reg_192 );

    SC_METHOD(thread_tmp_28_fu_340_p1);
    sensitive << ( cur_layer_batch_reg_192 );

    SC_METHOD(thread_tmp_60_cast_fu_321_p1);
    sensitive << ( tmp_15_fu_315_p2 );

    SC_METHOD(thread_tmp_71_cast_fu_251_p1);
    sensitive << ( tmp_fu_241_p4 );

    SC_METHOD(thread_tmp_cast_fu_344_p3);
    sensitive << ( tmp_28_fu_340_p1 );

    SC_METHOD(thread_tmp_fu_241_p4);
    sensitive << ( layer_config_V );

    SC_METHOD(thread_tmp_s_fu_307_p3);
    sensitive << ( layer_id_reg_205 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond6_fu_363_p2 );
    sensitive << ( gcontrol_RVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_295_p2 );
    sensitive << ( ap_sig_ioackin_gcontrol_ARREADY );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_block_state15_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const8);

    ap_CS_fsm = "000000000000001";
    grp_engine_fu_228_ap_start_reg = SC_LOGIC_0;
    ap_sync_reg_grp_engine_fu_228_ap_ready = SC_LOGIC_0;
    ap_sync_reg_grp_engine_fu_228_ap_done = SC_LOGIC_0;
    ap_reg_ioackin_gcontrol_ARREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "top_kernel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem1_AWVALID, "(port)m_axi_gmem1_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem1_AWREADY, "(port)m_axi_gmem1_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem1_AWADDR, "(port)m_axi_gmem1_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem1_AWID, "(port)m_axi_gmem1_AWID");
    sc_trace(mVcdFile, m_axi_gmem1_AWLEN, "(port)m_axi_gmem1_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem1_AWSIZE, "(port)m_axi_gmem1_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_AWBURST, "(port)m_axi_gmem1_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem1_AWLOCK, "(port)m_axi_gmem1_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_AWCACHE, "(port)m_axi_gmem1_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_AWPROT, "(port)m_axi_gmem1_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem1_AWQOS, "(port)m_axi_gmem1_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem1_AWREGION, "(port)m_axi_gmem1_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem1_AWUSER, "(port)m_axi_gmem1_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem1_WVALID, "(port)m_axi_gmem1_WVALID");
    sc_trace(mVcdFile, m_axi_gmem1_WREADY, "(port)m_axi_gmem1_WREADY");
    sc_trace(mVcdFile, m_axi_gmem1_WDATA, "(port)m_axi_gmem1_WDATA");
    sc_trace(mVcdFile, m_axi_gmem1_WSTRB, "(port)m_axi_gmem1_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem1_WLAST, "(port)m_axi_gmem1_WLAST");
    sc_trace(mVcdFile, m_axi_gmem1_WID, "(port)m_axi_gmem1_WID");
    sc_trace(mVcdFile, m_axi_gmem1_WUSER, "(port)m_axi_gmem1_WUSER");
    sc_trace(mVcdFile, m_axi_gmem1_ARVALID, "(port)m_axi_gmem1_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem1_ARREADY, "(port)m_axi_gmem1_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem1_ARADDR, "(port)m_axi_gmem1_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem1_ARID, "(port)m_axi_gmem1_ARID");
    sc_trace(mVcdFile, m_axi_gmem1_ARLEN, "(port)m_axi_gmem1_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem1_ARSIZE, "(port)m_axi_gmem1_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem1_ARBURST, "(port)m_axi_gmem1_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem1_ARLOCK, "(port)m_axi_gmem1_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem1_ARCACHE, "(port)m_axi_gmem1_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem1_ARPROT, "(port)m_axi_gmem1_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem1_ARQOS, "(port)m_axi_gmem1_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem1_ARREGION, "(port)m_axi_gmem1_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem1_ARUSER, "(port)m_axi_gmem1_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RVALID, "(port)m_axi_gmem1_RVALID");
    sc_trace(mVcdFile, m_axi_gmem1_RREADY, "(port)m_axi_gmem1_RREADY");
    sc_trace(mVcdFile, m_axi_gmem1_RDATA, "(port)m_axi_gmem1_RDATA");
    sc_trace(mVcdFile, m_axi_gmem1_RLAST, "(port)m_axi_gmem1_RLAST");
    sc_trace(mVcdFile, m_axi_gmem1_RID, "(port)m_axi_gmem1_RID");
    sc_trace(mVcdFile, m_axi_gmem1_RUSER, "(port)m_axi_gmem1_RUSER");
    sc_trace(mVcdFile, m_axi_gmem1_RRESP, "(port)m_axi_gmem1_RRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BVALID, "(port)m_axi_gmem1_BVALID");
    sc_trace(mVcdFile, m_axi_gmem1_BREADY, "(port)m_axi_gmem1_BREADY");
    sc_trace(mVcdFile, m_axi_gmem1_BRESP, "(port)m_axi_gmem1_BRESP");
    sc_trace(mVcdFile, m_axi_gmem1_BID, "(port)m_axi_gmem1_BID");
    sc_trace(mVcdFile, m_axi_gmem1_BUSER, "(port)m_axi_gmem1_BUSER");
    sc_trace(mVcdFile, m_axi_gmem3_AWVALID, "(port)m_axi_gmem3_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem3_AWREADY, "(port)m_axi_gmem3_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem3_AWADDR, "(port)m_axi_gmem3_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem3_AWID, "(port)m_axi_gmem3_AWID");
    sc_trace(mVcdFile, m_axi_gmem3_AWLEN, "(port)m_axi_gmem3_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem3_AWSIZE, "(port)m_axi_gmem3_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem3_AWBURST, "(port)m_axi_gmem3_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem3_AWLOCK, "(port)m_axi_gmem3_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem3_AWCACHE, "(port)m_axi_gmem3_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem3_AWPROT, "(port)m_axi_gmem3_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem3_AWQOS, "(port)m_axi_gmem3_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem3_AWREGION, "(port)m_axi_gmem3_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem3_AWUSER, "(port)m_axi_gmem3_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem3_WVALID, "(port)m_axi_gmem3_WVALID");
    sc_trace(mVcdFile, m_axi_gmem3_WREADY, "(port)m_axi_gmem3_WREADY");
    sc_trace(mVcdFile, m_axi_gmem3_WDATA, "(port)m_axi_gmem3_WDATA");
    sc_trace(mVcdFile, m_axi_gmem3_WSTRB, "(port)m_axi_gmem3_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem3_WLAST, "(port)m_axi_gmem3_WLAST");
    sc_trace(mVcdFile, m_axi_gmem3_WID, "(port)m_axi_gmem3_WID");
    sc_trace(mVcdFile, m_axi_gmem3_WUSER, "(port)m_axi_gmem3_WUSER");
    sc_trace(mVcdFile, m_axi_gmem3_ARVALID, "(port)m_axi_gmem3_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem3_ARREADY, "(port)m_axi_gmem3_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem3_ARADDR, "(port)m_axi_gmem3_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem3_ARID, "(port)m_axi_gmem3_ARID");
    sc_trace(mVcdFile, m_axi_gmem3_ARLEN, "(port)m_axi_gmem3_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem3_ARSIZE, "(port)m_axi_gmem3_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem3_ARBURST, "(port)m_axi_gmem3_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem3_ARLOCK, "(port)m_axi_gmem3_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem3_ARCACHE, "(port)m_axi_gmem3_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem3_ARPROT, "(port)m_axi_gmem3_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem3_ARQOS, "(port)m_axi_gmem3_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem3_ARREGION, "(port)m_axi_gmem3_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem3_ARUSER, "(port)m_axi_gmem3_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem3_RVALID, "(port)m_axi_gmem3_RVALID");
    sc_trace(mVcdFile, m_axi_gmem3_RREADY, "(port)m_axi_gmem3_RREADY");
    sc_trace(mVcdFile, m_axi_gmem3_RDATA, "(port)m_axi_gmem3_RDATA");
    sc_trace(mVcdFile, m_axi_gmem3_RLAST, "(port)m_axi_gmem3_RLAST");
    sc_trace(mVcdFile, m_axi_gmem3_RID, "(port)m_axi_gmem3_RID");
    sc_trace(mVcdFile, m_axi_gmem3_RUSER, "(port)m_axi_gmem3_RUSER");
    sc_trace(mVcdFile, m_axi_gmem3_RRESP, "(port)m_axi_gmem3_RRESP");
    sc_trace(mVcdFile, m_axi_gmem3_BVALID, "(port)m_axi_gmem3_BVALID");
    sc_trace(mVcdFile, m_axi_gmem3_BREADY, "(port)m_axi_gmem3_BREADY");
    sc_trace(mVcdFile, m_axi_gmem3_BRESP, "(port)m_axi_gmem3_BRESP");
    sc_trace(mVcdFile, m_axi_gmem3_BID, "(port)m_axi_gmem3_BID");
    sc_trace(mVcdFile, m_axi_gmem3_BUSER, "(port)m_axi_gmem3_BUSER");
    sc_trace(mVcdFile, m_axi_gmem2_AWVALID, "(port)m_axi_gmem2_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem2_AWREADY, "(port)m_axi_gmem2_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem2_AWADDR, "(port)m_axi_gmem2_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem2_AWID, "(port)m_axi_gmem2_AWID");
    sc_trace(mVcdFile, m_axi_gmem2_AWLEN, "(port)m_axi_gmem2_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem2_AWSIZE, "(port)m_axi_gmem2_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem2_AWBURST, "(port)m_axi_gmem2_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem2_AWLOCK, "(port)m_axi_gmem2_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem2_AWCACHE, "(port)m_axi_gmem2_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem2_AWPROT, "(port)m_axi_gmem2_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem2_AWQOS, "(port)m_axi_gmem2_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem2_AWREGION, "(port)m_axi_gmem2_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem2_AWUSER, "(port)m_axi_gmem2_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem2_WVALID, "(port)m_axi_gmem2_WVALID");
    sc_trace(mVcdFile, m_axi_gmem2_WREADY, "(port)m_axi_gmem2_WREADY");
    sc_trace(mVcdFile, m_axi_gmem2_WDATA, "(port)m_axi_gmem2_WDATA");
    sc_trace(mVcdFile, m_axi_gmem2_WSTRB, "(port)m_axi_gmem2_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem2_WLAST, "(port)m_axi_gmem2_WLAST");
    sc_trace(mVcdFile, m_axi_gmem2_WID, "(port)m_axi_gmem2_WID");
    sc_trace(mVcdFile, m_axi_gmem2_WUSER, "(port)m_axi_gmem2_WUSER");
    sc_trace(mVcdFile, m_axi_gmem2_ARVALID, "(port)m_axi_gmem2_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem2_ARREADY, "(port)m_axi_gmem2_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem2_ARADDR, "(port)m_axi_gmem2_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem2_ARID, "(port)m_axi_gmem2_ARID");
    sc_trace(mVcdFile, m_axi_gmem2_ARLEN, "(port)m_axi_gmem2_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem2_ARSIZE, "(port)m_axi_gmem2_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem2_ARBURST, "(port)m_axi_gmem2_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem2_ARLOCK, "(port)m_axi_gmem2_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem2_ARCACHE, "(port)m_axi_gmem2_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem2_ARPROT, "(port)m_axi_gmem2_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem2_ARQOS, "(port)m_axi_gmem2_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem2_ARREGION, "(port)m_axi_gmem2_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem2_ARUSER, "(port)m_axi_gmem2_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem2_RVALID, "(port)m_axi_gmem2_RVALID");
    sc_trace(mVcdFile, m_axi_gmem2_RREADY, "(port)m_axi_gmem2_RREADY");
    sc_trace(mVcdFile, m_axi_gmem2_RDATA, "(port)m_axi_gmem2_RDATA");
    sc_trace(mVcdFile, m_axi_gmem2_RLAST, "(port)m_axi_gmem2_RLAST");
    sc_trace(mVcdFile, m_axi_gmem2_RID, "(port)m_axi_gmem2_RID");
    sc_trace(mVcdFile, m_axi_gmem2_RUSER, "(port)m_axi_gmem2_RUSER");
    sc_trace(mVcdFile, m_axi_gmem2_RRESP, "(port)m_axi_gmem2_RRESP");
    sc_trace(mVcdFile, m_axi_gmem2_BVALID, "(port)m_axi_gmem2_BVALID");
    sc_trace(mVcdFile, m_axi_gmem2_BREADY, "(port)m_axi_gmem2_BREADY");
    sc_trace(mVcdFile, m_axi_gmem2_BRESP, "(port)m_axi_gmem2_BRESP");
    sc_trace(mVcdFile, m_axi_gmem2_BID, "(port)m_axi_gmem2_BID");
    sc_trace(mVcdFile, m_axi_gmem2_BUSER, "(port)m_axi_gmem2_BUSER");
    sc_trace(mVcdFile, m_axi_gcontrol_AWVALID, "(port)m_axi_gcontrol_AWVALID");
    sc_trace(mVcdFile, m_axi_gcontrol_AWREADY, "(port)m_axi_gcontrol_AWREADY");
    sc_trace(mVcdFile, m_axi_gcontrol_AWADDR, "(port)m_axi_gcontrol_AWADDR");
    sc_trace(mVcdFile, m_axi_gcontrol_AWID, "(port)m_axi_gcontrol_AWID");
    sc_trace(mVcdFile, m_axi_gcontrol_AWLEN, "(port)m_axi_gcontrol_AWLEN");
    sc_trace(mVcdFile, m_axi_gcontrol_AWSIZE, "(port)m_axi_gcontrol_AWSIZE");
    sc_trace(mVcdFile, m_axi_gcontrol_AWBURST, "(port)m_axi_gcontrol_AWBURST");
    sc_trace(mVcdFile, m_axi_gcontrol_AWLOCK, "(port)m_axi_gcontrol_AWLOCK");
    sc_trace(mVcdFile, m_axi_gcontrol_AWCACHE, "(port)m_axi_gcontrol_AWCACHE");
    sc_trace(mVcdFile, m_axi_gcontrol_AWPROT, "(port)m_axi_gcontrol_AWPROT");
    sc_trace(mVcdFile, m_axi_gcontrol_AWQOS, "(port)m_axi_gcontrol_AWQOS");
    sc_trace(mVcdFile, m_axi_gcontrol_AWREGION, "(port)m_axi_gcontrol_AWREGION");
    sc_trace(mVcdFile, m_axi_gcontrol_AWUSER, "(port)m_axi_gcontrol_AWUSER");
    sc_trace(mVcdFile, m_axi_gcontrol_WVALID, "(port)m_axi_gcontrol_WVALID");
    sc_trace(mVcdFile, m_axi_gcontrol_WREADY, "(port)m_axi_gcontrol_WREADY");
    sc_trace(mVcdFile, m_axi_gcontrol_WDATA, "(port)m_axi_gcontrol_WDATA");
    sc_trace(mVcdFile, m_axi_gcontrol_WSTRB, "(port)m_axi_gcontrol_WSTRB");
    sc_trace(mVcdFile, m_axi_gcontrol_WLAST, "(port)m_axi_gcontrol_WLAST");
    sc_trace(mVcdFile, m_axi_gcontrol_WID, "(port)m_axi_gcontrol_WID");
    sc_trace(mVcdFile, m_axi_gcontrol_WUSER, "(port)m_axi_gcontrol_WUSER");
    sc_trace(mVcdFile, m_axi_gcontrol_ARVALID, "(port)m_axi_gcontrol_ARVALID");
    sc_trace(mVcdFile, m_axi_gcontrol_ARREADY, "(port)m_axi_gcontrol_ARREADY");
    sc_trace(mVcdFile, m_axi_gcontrol_ARADDR, "(port)m_axi_gcontrol_ARADDR");
    sc_trace(mVcdFile, m_axi_gcontrol_ARID, "(port)m_axi_gcontrol_ARID");
    sc_trace(mVcdFile, m_axi_gcontrol_ARLEN, "(port)m_axi_gcontrol_ARLEN");
    sc_trace(mVcdFile, m_axi_gcontrol_ARSIZE, "(port)m_axi_gcontrol_ARSIZE");
    sc_trace(mVcdFile, m_axi_gcontrol_ARBURST, "(port)m_axi_gcontrol_ARBURST");
    sc_trace(mVcdFile, m_axi_gcontrol_ARLOCK, "(port)m_axi_gcontrol_ARLOCK");
    sc_trace(mVcdFile, m_axi_gcontrol_ARCACHE, "(port)m_axi_gcontrol_ARCACHE");
    sc_trace(mVcdFile, m_axi_gcontrol_ARPROT, "(port)m_axi_gcontrol_ARPROT");
    sc_trace(mVcdFile, m_axi_gcontrol_ARQOS, "(port)m_axi_gcontrol_ARQOS");
    sc_trace(mVcdFile, m_axi_gcontrol_ARREGION, "(port)m_axi_gcontrol_ARREGION");
    sc_trace(mVcdFile, m_axi_gcontrol_ARUSER, "(port)m_axi_gcontrol_ARUSER");
    sc_trace(mVcdFile, m_axi_gcontrol_RVALID, "(port)m_axi_gcontrol_RVALID");
    sc_trace(mVcdFile, m_axi_gcontrol_RREADY, "(port)m_axi_gcontrol_RREADY");
    sc_trace(mVcdFile, m_axi_gcontrol_RDATA, "(port)m_axi_gcontrol_RDATA");
    sc_trace(mVcdFile, m_axi_gcontrol_RLAST, "(port)m_axi_gcontrol_RLAST");
    sc_trace(mVcdFile, m_axi_gcontrol_RID, "(port)m_axi_gcontrol_RID");
    sc_trace(mVcdFile, m_axi_gcontrol_RUSER, "(port)m_axi_gcontrol_RUSER");
    sc_trace(mVcdFile, m_axi_gcontrol_RRESP, "(port)m_axi_gcontrol_RRESP");
    sc_trace(mVcdFile, m_axi_gcontrol_BVALID, "(port)m_axi_gcontrol_BVALID");
    sc_trace(mVcdFile, m_axi_gcontrol_BREADY, "(port)m_axi_gcontrol_BREADY");
    sc_trace(mVcdFile, m_axi_gcontrol_BRESP, "(port)m_axi_gcontrol_BRESP");
    sc_trace(mVcdFile, m_axi_gcontrol_BID, "(port)m_axi_gcontrol_BID");
    sc_trace(mVcdFile, m_axi_gcontrol_BUSER, "(port)m_axi_gcontrol_BUSER");
    sc_trace(mVcdFile, s_axi_control_AWVALID, "(port)s_axi_control_AWVALID");
    sc_trace(mVcdFile, s_axi_control_AWREADY, "(port)s_axi_control_AWREADY");
    sc_trace(mVcdFile, s_axi_control_AWADDR, "(port)s_axi_control_AWADDR");
    sc_trace(mVcdFile, s_axi_control_WVALID, "(port)s_axi_control_WVALID");
    sc_trace(mVcdFile, s_axi_control_WREADY, "(port)s_axi_control_WREADY");
    sc_trace(mVcdFile, s_axi_control_WDATA, "(port)s_axi_control_WDATA");
    sc_trace(mVcdFile, s_axi_control_WSTRB, "(port)s_axi_control_WSTRB");
    sc_trace(mVcdFile, s_axi_control_ARVALID, "(port)s_axi_control_ARVALID");
    sc_trace(mVcdFile, s_axi_control_ARREADY, "(port)s_axi_control_ARREADY");
    sc_trace(mVcdFile, s_axi_control_ARADDR, "(port)s_axi_control_ARADDR");
    sc_trace(mVcdFile, s_axi_control_RVALID, "(port)s_axi_control_RVALID");
    sc_trace(mVcdFile, s_axi_control_RREADY, "(port)s_axi_control_RREADY");
    sc_trace(mVcdFile, s_axi_control_RDATA, "(port)s_axi_control_RDATA");
    sc_trace(mVcdFile, s_axi_control_RRESP, "(port)s_axi_control_RRESP");
    sc_trace(mVcdFile, s_axi_control_BVALID, "(port)s_axi_control_BVALID");
    sc_trace(mVcdFile, s_axi_control_BREADY, "(port)s_axi_control_BREADY");
    sc_trace(mVcdFile, s_axi_control_BRESP, "(port)s_axi_control_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, global_cin_V, "global_cin_V");
    sc_trace(mVcdFile, global_prev_cin_V, "global_prev_cin_V");
    sc_trace(mVcdFile, global_cout_V, "global_cout_V");
    sc_trace(mVcdFile, global_weight_V, "global_weight_V");
    sc_trace(mVcdFile, global_bias_V, "global_bias_V");
    sc_trace(mVcdFile, layer_config_V, "layer_config_V");
    sc_trace(mVcdFile, gcontrol_blk_n_AR, "gcontrol_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, gcontrol_blk_n_R, "gcontrol_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, exitcond6_fu_363_p2, "exitcond6_fu_363_p2");
    sc_trace(mVcdFile, gmem1_AWVALID, "gmem1_AWVALID");
    sc_trace(mVcdFile, gmem1_AWREADY, "gmem1_AWREADY");
    sc_trace(mVcdFile, gmem1_WVALID, "gmem1_WVALID");
    sc_trace(mVcdFile, gmem1_WREADY, "gmem1_WREADY");
    sc_trace(mVcdFile, gmem1_ARVALID, "gmem1_ARVALID");
    sc_trace(mVcdFile, gmem1_ARREADY, "gmem1_ARREADY");
    sc_trace(mVcdFile, gmem1_RVALID, "gmem1_RVALID");
    sc_trace(mVcdFile, gmem1_RREADY, "gmem1_RREADY");
    sc_trace(mVcdFile, gmem1_RDATA, "gmem1_RDATA");
    sc_trace(mVcdFile, gmem1_RLAST, "gmem1_RLAST");
    sc_trace(mVcdFile, gmem1_RID, "gmem1_RID");
    sc_trace(mVcdFile, gmem1_RUSER, "gmem1_RUSER");
    sc_trace(mVcdFile, gmem1_RRESP, "gmem1_RRESP");
    sc_trace(mVcdFile, gmem1_BVALID, "gmem1_BVALID");
    sc_trace(mVcdFile, gmem1_BREADY, "gmem1_BREADY");
    sc_trace(mVcdFile, gmem1_BRESP, "gmem1_BRESP");
    sc_trace(mVcdFile, gmem1_BID, "gmem1_BID");
    sc_trace(mVcdFile, gmem1_BUSER, "gmem1_BUSER");
    sc_trace(mVcdFile, gmem2_AWREADY, "gmem2_AWREADY");
    sc_trace(mVcdFile, gmem2_WREADY, "gmem2_WREADY");
    sc_trace(mVcdFile, gmem2_ARVALID, "gmem2_ARVALID");
    sc_trace(mVcdFile, gmem2_ARREADY, "gmem2_ARREADY");
    sc_trace(mVcdFile, gmem2_RVALID, "gmem2_RVALID");
    sc_trace(mVcdFile, gmem2_RREADY, "gmem2_RREADY");
    sc_trace(mVcdFile, gmem2_RDATA, "gmem2_RDATA");
    sc_trace(mVcdFile, gmem2_RLAST, "gmem2_RLAST");
    sc_trace(mVcdFile, gmem2_RID, "gmem2_RID");
    sc_trace(mVcdFile, gmem2_RUSER, "gmem2_RUSER");
    sc_trace(mVcdFile, gmem2_RRESP, "gmem2_RRESP");
    sc_trace(mVcdFile, gmem2_BVALID, "gmem2_BVALID");
    sc_trace(mVcdFile, gmem2_BRESP, "gmem2_BRESP");
    sc_trace(mVcdFile, gmem2_BID, "gmem2_BID");
    sc_trace(mVcdFile, gmem2_BUSER, "gmem2_BUSER");
    sc_trace(mVcdFile, gcontrol_AWREADY, "gcontrol_AWREADY");
    sc_trace(mVcdFile, gcontrol_WREADY, "gcontrol_WREADY");
    sc_trace(mVcdFile, gcontrol_ARVALID, "gcontrol_ARVALID");
    sc_trace(mVcdFile, gcontrol_ARREADY, "gcontrol_ARREADY");
    sc_trace(mVcdFile, gcontrol_ARLEN, "gcontrol_ARLEN");
    sc_trace(mVcdFile, gcontrol_RVALID, "gcontrol_RVALID");
    sc_trace(mVcdFile, gcontrol_RREADY, "gcontrol_RREADY");
    sc_trace(mVcdFile, gcontrol_RDATA, "gcontrol_RDATA");
    sc_trace(mVcdFile, gcontrol_RLAST, "gcontrol_RLAST");
    sc_trace(mVcdFile, gcontrol_RID, "gcontrol_RID");
    sc_trace(mVcdFile, gcontrol_RUSER, "gcontrol_RUSER");
    sc_trace(mVcdFile, gcontrol_RRESP, "gcontrol_RRESP");
    sc_trace(mVcdFile, gcontrol_BVALID, "gcontrol_BVALID");
    sc_trace(mVcdFile, gcontrol_BRESP, "gcontrol_BRESP");
    sc_trace(mVcdFile, gcontrol_BID, "gcontrol_BID");
    sc_trace(mVcdFile, gcontrol_BUSER, "gcontrol_BUSER");
    sc_trace(mVcdFile, tmp_71_cast_fu_251_p1, "tmp_71_cast_fu_251_p1");
    sc_trace(mVcdFile, tmp_71_cast_reg_388, "tmp_71_cast_reg_388");
    sc_trace(mVcdFile, global_bias_V9_reg_393, "global_bias_V9_reg_393");
    sc_trace(mVcdFile, global_weight_V7_reg_398, "global_weight_V7_reg_398");
    sc_trace(mVcdFile, global_cout_V5_reg_403, "global_cout_V5_reg_403");
    sc_trace(mVcdFile, global_cin_V1_reg_408, "global_cin_V1_reg_408");
    sc_trace(mVcdFile, layer_id_1_fu_301_p2, "layer_id_1_fu_301_p2");
    sc_trace(mVcdFile, layer_id_1_reg_421, "layer_id_1_reg_421");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, gcontrol_addr_reg_426, "gcontrol_addr_reg_426");
    sc_trace(mVcdFile, exitcond_fu_295_p2, "exitcond_fu_295_p2");
    sc_trace(mVcdFile, tmp_cast_fu_344_p3, "tmp_cast_fu_344_p3");
    sc_trace(mVcdFile, tmp_cast_reg_432, "tmp_cast_reg_432");
    sc_trace(mVcdFile, ap_sig_ioackin_gcontrol_ARREADY, "ap_sig_ioackin_gcontrol_ARREADY");
    sc_trace(mVcdFile, tmp_27_fu_357_p2, "tmp_27_fu_357_p2");
    sc_trace(mVcdFile, tmp_27_reg_442, "tmp_27_reg_442");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, indvar_next5_fu_368_p2, "indvar_next5_fu_368_p2");
    sc_trace(mVcdFile, indvar_next5_reg_450, "indvar_next5_reg_450");
    sc_trace(mVcdFile, ap_block_state10, "ap_block_state10");
    sc_trace(mVcdFile, gcontrol_addr_read_reg_455, "gcontrol_addr_read_reg_455");
    sc_trace(mVcdFile, tmp_16_fu_374_p2, "tmp_16_fu_374_p2");
    sc_trace(mVcdFile, tmp_16_reg_460, "tmp_16_reg_460");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, config_q0, "config_q0");
    sc_trace(mVcdFile, nxt_layer_batch_reg_470, "nxt_layer_batch_reg_470");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, config_address0, "config_address0");
    sc_trace(mVcdFile, config_ce0, "config_ce0");
    sc_trace(mVcdFile, config_we0, "config_we0");
    sc_trace(mVcdFile, config_d0, "config_d0");
    sc_trace(mVcdFile, config_ce1, "config_ce1");
    sc_trace(mVcdFile, config_q1, "config_q1");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWVALID, "grp_engine_fu_228_m_axi_global_cin_V_AWVALID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWADDR, "grp_engine_fu_228_m_axi_global_cin_V_AWADDR");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWID, "grp_engine_fu_228_m_axi_global_cin_V_AWID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWLEN, "grp_engine_fu_228_m_axi_global_cin_V_AWLEN");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWSIZE, "grp_engine_fu_228_m_axi_global_cin_V_AWSIZE");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWBURST, "grp_engine_fu_228_m_axi_global_cin_V_AWBURST");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWLOCK, "grp_engine_fu_228_m_axi_global_cin_V_AWLOCK");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWCACHE, "grp_engine_fu_228_m_axi_global_cin_V_AWCACHE");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWPROT, "grp_engine_fu_228_m_axi_global_cin_V_AWPROT");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWQOS, "grp_engine_fu_228_m_axi_global_cin_V_AWQOS");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWREGION, "grp_engine_fu_228_m_axi_global_cin_V_AWREGION");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_AWUSER, "grp_engine_fu_228_m_axi_global_cin_V_AWUSER");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_WVALID, "grp_engine_fu_228_m_axi_global_cin_V_WVALID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_WDATA, "grp_engine_fu_228_m_axi_global_cin_V_WDATA");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_WSTRB, "grp_engine_fu_228_m_axi_global_cin_V_WSTRB");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_WLAST, "grp_engine_fu_228_m_axi_global_cin_V_WLAST");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_WID, "grp_engine_fu_228_m_axi_global_cin_V_WID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_WUSER, "grp_engine_fu_228_m_axi_global_cin_V_WUSER");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARVALID, "grp_engine_fu_228_m_axi_global_cin_V_ARVALID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARADDR, "grp_engine_fu_228_m_axi_global_cin_V_ARADDR");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARID, "grp_engine_fu_228_m_axi_global_cin_V_ARID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARLEN, "grp_engine_fu_228_m_axi_global_cin_V_ARLEN");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARSIZE, "grp_engine_fu_228_m_axi_global_cin_V_ARSIZE");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARBURST, "grp_engine_fu_228_m_axi_global_cin_V_ARBURST");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARLOCK, "grp_engine_fu_228_m_axi_global_cin_V_ARLOCK");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARCACHE, "grp_engine_fu_228_m_axi_global_cin_V_ARCACHE");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARPROT, "grp_engine_fu_228_m_axi_global_cin_V_ARPROT");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARQOS, "grp_engine_fu_228_m_axi_global_cin_V_ARQOS");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARREGION, "grp_engine_fu_228_m_axi_global_cin_V_ARREGION");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_ARUSER, "grp_engine_fu_228_m_axi_global_cin_V_ARUSER");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_RREADY, "grp_engine_fu_228_m_axi_global_cin_V_RREADY");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_cin_V_BREADY, "grp_engine_fu_228_m_axi_global_cin_V_BREADY");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWVALID, "grp_engine_fu_228_m_axi_global_weight_V_AWVALID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWADDR, "grp_engine_fu_228_m_axi_global_weight_V_AWADDR");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWID, "grp_engine_fu_228_m_axi_global_weight_V_AWID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWLEN, "grp_engine_fu_228_m_axi_global_weight_V_AWLEN");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWSIZE, "grp_engine_fu_228_m_axi_global_weight_V_AWSIZE");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWBURST, "grp_engine_fu_228_m_axi_global_weight_V_AWBURST");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWLOCK, "grp_engine_fu_228_m_axi_global_weight_V_AWLOCK");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWCACHE, "grp_engine_fu_228_m_axi_global_weight_V_AWCACHE");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWPROT, "grp_engine_fu_228_m_axi_global_weight_V_AWPROT");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWQOS, "grp_engine_fu_228_m_axi_global_weight_V_AWQOS");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWREGION, "grp_engine_fu_228_m_axi_global_weight_V_AWREGION");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_AWUSER, "grp_engine_fu_228_m_axi_global_weight_V_AWUSER");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_WVALID, "grp_engine_fu_228_m_axi_global_weight_V_WVALID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_WDATA, "grp_engine_fu_228_m_axi_global_weight_V_WDATA");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_WSTRB, "grp_engine_fu_228_m_axi_global_weight_V_WSTRB");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_WLAST, "grp_engine_fu_228_m_axi_global_weight_V_WLAST");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_WID, "grp_engine_fu_228_m_axi_global_weight_V_WID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_WUSER, "grp_engine_fu_228_m_axi_global_weight_V_WUSER");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARVALID, "grp_engine_fu_228_m_axi_global_weight_V_ARVALID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARADDR, "grp_engine_fu_228_m_axi_global_weight_V_ARADDR");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARID, "grp_engine_fu_228_m_axi_global_weight_V_ARID");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARLEN, "grp_engine_fu_228_m_axi_global_weight_V_ARLEN");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARSIZE, "grp_engine_fu_228_m_axi_global_weight_V_ARSIZE");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARBURST, "grp_engine_fu_228_m_axi_global_weight_V_ARBURST");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARLOCK, "grp_engine_fu_228_m_axi_global_weight_V_ARLOCK");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARCACHE, "grp_engine_fu_228_m_axi_global_weight_V_ARCACHE");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARPROT, "grp_engine_fu_228_m_axi_global_weight_V_ARPROT");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARQOS, "grp_engine_fu_228_m_axi_global_weight_V_ARQOS");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARREGION, "grp_engine_fu_228_m_axi_global_weight_V_ARREGION");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_ARUSER, "grp_engine_fu_228_m_axi_global_weight_V_ARUSER");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_RREADY, "grp_engine_fu_228_m_axi_global_weight_V_RREADY");
    sc_trace(mVcdFile, grp_engine_fu_228_m_axi_global_weight_V_BREADY, "grp_engine_fu_228_m_axi_global_weight_V_BREADY");
    sc_trace(mVcdFile, grp_engine_fu_228_config_r_address0, "grp_engine_fu_228_config_r_address0");
    sc_trace(mVcdFile, grp_engine_fu_228_config_r_ce0, "grp_engine_fu_228_config_r_ce0");
    sc_trace(mVcdFile, grp_engine_fu_228_config_r_d0, "grp_engine_fu_228_config_r_d0");
    sc_trace(mVcdFile, grp_engine_fu_228_config_r_we0, "grp_engine_fu_228_config_r_we0");
    sc_trace(mVcdFile, grp_engine_fu_228_config_r_address1, "grp_engine_fu_228_config_r_address1");
    sc_trace(mVcdFile, grp_engine_fu_228_config_r_ce1, "grp_engine_fu_228_config_r_ce1");
    sc_trace(mVcdFile, grp_engine_fu_228_config_r_d1, "grp_engine_fu_228_config_r_d1");
    sc_trace(mVcdFile, grp_engine_fu_228_config_r_we1, "grp_engine_fu_228_config_r_we1");
    sc_trace(mVcdFile, grp_engine_fu_228_ap_start, "grp_engine_fu_228_ap_start");
    sc_trace(mVcdFile, grp_engine_fu_228_ap_done, "grp_engine_fu_228_ap_done");
    sc_trace(mVcdFile, grp_engine_fu_228_ap_ready, "grp_engine_fu_228_ap_ready");
    sc_trace(mVcdFile, grp_engine_fu_228_ap_idle, "grp_engine_fu_228_ap_idle");
    sc_trace(mVcdFile, grp_engine_fu_228_ap_continue, "grp_engine_fu_228_ap_continue");
    sc_trace(mVcdFile, cur_layer_batch_reg_192, "cur_layer_batch_reg_192");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_sync_grp_engine_fu_228_ap_ready, "ap_sync_grp_engine_fu_228_ap_ready");
    sc_trace(mVcdFile, ap_sync_grp_engine_fu_228_ap_done, "ap_sync_grp_engine_fu_228_ap_done");
    sc_trace(mVcdFile, ap_block_state15_on_subcall_done, "ap_block_state15_on_subcall_done");
    sc_trace(mVcdFile, layer_id_reg_205, "layer_id_reg_205");
    sc_trace(mVcdFile, indvar_reg_216, "indvar_reg_216");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_engine_fu_228_ap_start_reg, "grp_engine_fu_228_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_sync_reg_grp_engine_fu_228_ap_ready, "ap_sync_reg_grp_engine_fu_228_ap_ready");
    sc_trace(mVcdFile, ap_sync_reg_grp_engine_fu_228_ap_done, "ap_sync_reg_grp_engine_fu_228_ap_done");
    sc_trace(mVcdFile, indvar1_fu_379_p1, "indvar1_fu_379_p1");
    sc_trace(mVcdFile, tmp_17_fu_384_p1, "tmp_17_fu_384_p1");
    sc_trace(mVcdFile, layer_config_V12_sum_1_fu_330_p1, "layer_config_V12_sum_1_fu_330_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_gcontrol_ARREADY, "ap_reg_ioackin_gcontrol_ARREADY");
    sc_trace(mVcdFile, tmp_fu_241_p4, "tmp_fu_241_p4");
    sc_trace(mVcdFile, tmp_s_fu_307_p3, "tmp_s_fu_307_p3");
    sc_trace(mVcdFile, tmp_15_fu_315_p2, "tmp_15_fu_315_p2");
    sc_trace(mVcdFile, tmp_60_cast_fu_321_p1, "tmp_60_cast_fu_321_p1");
    sc_trace(mVcdFile, layer_config_V12_sum_fu_325_p2, "layer_config_V12_sum_fu_325_p2");
    sc_trace(mVcdFile, tmp_28_fu_340_p1, "tmp_28_fu_340_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("top_kernel.hdltvin.dat");
    mHdltvoutHandle.open("top_kernel.hdltvout.dat");
}

top_kernel::~top_kernel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete top_kernel_control_s_axi_U;
    delete top_kernel_gmem1_m_axi_U;
    delete top_kernel_gmem2_m_axi_U;
    delete top_kernel_gcontrol_m_axi_U;
    delete config_U;
    delete grp_engine_fu_228;
}

void top_kernel::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void top_kernel::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_0;
}

void top_kernel::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_0;
}

void top_kernel::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv1_0;
}

void top_kernel::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv3_0;
}

void top_kernel::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv2_0;
}

void top_kernel::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_0;
}

void top_kernel::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv64_0;
}

void top_kernel::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv512_lc_1;
}

void top_kernel::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gcontrol_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gcontrol_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gcontrol_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gcontrol_ARREADY.read())) {
                ap_reg_ioackin_gcontrol_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_grp_engine_fu_228_ap_done = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
             esl_seteq<1,1,1>(ap_block_state15_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_sync_reg_grp_engine_fu_228_ap_done = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_engine_fu_228_ap_done.read())) {
            ap_sync_reg_grp_engine_fu_228_ap_done = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_grp_engine_fu_228_ap_ready = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
             esl_seteq<1,1,1>(ap_block_state15_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_sync_reg_grp_engine_fu_228_ap_ready = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_engine_fu_228_ap_ready.read())) {
            ap_sync_reg_grp_engine_fu_228_ap_ready = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_block_state15_on_subcall_done.read(), ap_const_boolean_0))) {
        cur_layer_batch_reg_192 = nxt_layer_batch_reg_470.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        cur_layer_batch_reg_192 = ap_const_lv32_1;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_engine_fu_228_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_grp_engine_fu_228_ap_ready.read())))) {
            grp_engine_fu_228_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_engine_fu_228_ap_ready.read())) {
            grp_engine_fu_228_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        indvar_reg_216 = indvar_next5_reg_450.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        indvar_reg_216 = ap_const_lv30_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_block_state15_on_subcall_done.read(), ap_const_boolean_0))) {
        layer_id_reg_205 = layer_id_1_reg_421.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        layer_id_reg_205 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gcontrol_RVALID.read())))) {
        gcontrol_addr_read_reg_455 = gcontrol_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_295_p2.read()))) {
        gcontrol_addr_reg_426 = layer_config_V12_sum_1_fu_330_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        global_bias_V9_reg_393 = global_bias_V.read().range(63, 6);
        global_cin_V1_reg_408 = global_cin_V.read().range(63, 6);
        global_cout_V5_reg_403 = global_cout_V.read().range(63, 6);
        global_weight_V7_reg_398 = global_weight_V.read().range(63, 6);
        tmp_71_cast_reg_388 = tmp_71_cast_fu_251_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gcontrol_RVALID.read())))) {
        indvar_next5_reg_450 = indvar_next5_fu_368_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        layer_id_1_reg_421 = layer_id_1_fu_301_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        nxt_layer_batch_reg_470 = config_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gcontrol_RVALID.read())) && esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_1))) {
        tmp_16_reg_460 = tmp_16_fu_374_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_27_reg_442 = tmp_27_fu_357_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gcontrol_ARREADY.read(), ap_const_logic_1))) {
        tmp_cast_reg_432 = tmp_cast_fu_344_p3.read();
    }
}

void top_kernel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void top_kernel::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void top_kernel::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void top_kernel::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void top_kernel::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void top_kernel::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void top_kernel::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void top_kernel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void top_kernel::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void top_kernel::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void top_kernel::thread_ap_block_state10() {
    ap_block_state10 = (esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gcontrol_RVALID.read()));
}

void top_kernel::thread_ap_block_state15_on_subcall_done() {
    ap_block_state15_on_subcall_done = esl_seteq<1,1,1>(ap_const_logic_0, (ap_sync_grp_engine_fu_228_ap_ready.read() & ap_sync_grp_engine_fu_228_ap_done.read()));
}

void top_kernel::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_295_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void top_kernel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void top_kernel::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_295_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void top_kernel::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void top_kernel::thread_ap_sig_ioackin_gcontrol_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gcontrol_ARREADY.read())) {
        ap_sig_ioackin_gcontrol_ARREADY = gcontrol_ARREADY.read();
    } else {
        ap_sig_ioackin_gcontrol_ARREADY = ap_const_logic_1;
    }
}

void top_kernel::thread_ap_sync_grp_engine_fu_228_ap_done() {
    ap_sync_grp_engine_fu_228_ap_done = (grp_engine_fu_228_ap_done.read() | ap_sync_reg_grp_engine_fu_228_ap_done.read());
}

void top_kernel::thread_ap_sync_grp_engine_fu_228_ap_ready() {
    ap_sync_grp_engine_fu_228_ap_ready = (grp_engine_fu_228_ap_ready.read() | ap_sync_reg_grp_engine_fu_228_ap_ready.read());
}

void top_kernel::thread_config_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        config_address0 =  (sc_lv<5>) (ap_const_lv64_19);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        config_address0 =  (sc_lv<5>) (tmp_17_fu_384_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        config_address0 =  (sc_lv<5>) (indvar1_fu_379_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        config_address0 = grp_engine_fu_228_config_r_address0.read();
    } else {
        config_address0 = "XXXXX";
    }
}

void top_kernel::thread_config_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        config_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        config_ce0 = grp_engine_fu_228_config_r_ce0.read();
    } else {
        config_ce0 = ap_const_logic_0;
    }
}

void top_kernel::thread_config_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        config_ce1 = grp_engine_fu_228_config_r_ce1.read();
    } else {
        config_ce1 = ap_const_logic_0;
    }
}

void top_kernel::thread_config_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        config_d0 = cur_layer_batch_reg_192.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        config_d0 = gcontrol_addr_read_reg_455.read();
    } else {
        config_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void top_kernel::thread_config_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        config_we0 = ap_const_logic_1;
    } else {
        config_we0 = ap_const_logic_0;
    }
}

void top_kernel::thread_exitcond6_fu_363_p2() {
    exitcond6_fu_363_p2 = (!indvar_reg_216.read().is_01() || !tmp_cast_reg_432.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_reg_216.read() == tmp_cast_reg_432.read());
}

void top_kernel::thread_exitcond_fu_295_p2() {
    exitcond_fu_295_p2 = (!layer_id_reg_205.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(layer_id_reg_205.read() == ap_const_lv3_5);
}

void top_kernel::thread_gcontrol_ARLEN() {
    gcontrol_ARLEN = esl_zext<32,30>(tmp_cast_fu_344_p3.read());
}

void top_kernel::thread_gcontrol_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gcontrol_ARREADY.read()))) {
        gcontrol_ARVALID = ap_const_logic_1;
    } else {
        gcontrol_ARVALID = ap_const_logic_0;
    }
}

void top_kernel::thread_gcontrol_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gcontrol_RVALID.read())))) {
        gcontrol_RREADY = ap_const_logic_1;
    } else {
        gcontrol_RREADY = ap_const_logic_0;
    }
}

void top_kernel::thread_gcontrol_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        gcontrol_blk_n_AR = m_axi_gcontrol_ARREADY.read();
    } else {
        gcontrol_blk_n_AR = ap_const_logic_1;
    }
}

void top_kernel::thread_gcontrol_blk_n_R() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0))) {
        gcontrol_blk_n_R = m_axi_gcontrol_RVALID.read();
    } else {
        gcontrol_blk_n_R = ap_const_logic_1;
    }
}

void top_kernel::thread_gmem1_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        gmem1_ARVALID = grp_engine_fu_228_m_axi_global_cin_V_ARVALID.read();
    } else {
        gmem1_ARVALID = ap_const_logic_0;
    }
}

void top_kernel::thread_gmem1_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        gmem1_AWVALID = grp_engine_fu_228_m_axi_global_cin_V_AWVALID.read();
    } else {
        gmem1_AWVALID = ap_const_logic_0;
    }
}

void top_kernel::thread_gmem1_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        gmem1_BREADY = grp_engine_fu_228_m_axi_global_cin_V_BREADY.read();
    } else {
        gmem1_BREADY = ap_const_logic_0;
    }
}

void top_kernel::thread_gmem1_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        gmem1_RREADY = grp_engine_fu_228_m_axi_global_cin_V_RREADY.read();
    } else {
        gmem1_RREADY = ap_const_logic_0;
    }
}

void top_kernel::thread_gmem1_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        gmem1_WVALID = grp_engine_fu_228_m_axi_global_cin_V_WVALID.read();
    } else {
        gmem1_WVALID = ap_const_logic_0;
    }
}

void top_kernel::thread_gmem2_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        gmem2_ARVALID = grp_engine_fu_228_m_axi_global_weight_V_ARVALID.read();
    } else {
        gmem2_ARVALID = ap_const_logic_0;
    }
}

void top_kernel::thread_gmem2_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        gmem2_RREADY = grp_engine_fu_228_m_axi_global_weight_V_RREADY.read();
    } else {
        gmem2_RREADY = ap_const_logic_0;
    }
}

void top_kernel::thread_grp_engine_fu_228_ap_continue() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_block_state15_on_subcall_done.read(), ap_const_boolean_0))) {
        grp_engine_fu_228_ap_continue = ap_const_logic_1;
    } else {
        grp_engine_fu_228_ap_continue = ap_const_logic_0;
    }
}

void top_kernel::thread_grp_engine_fu_228_ap_start() {
    grp_engine_fu_228_ap_start = grp_engine_fu_228_ap_start_reg.read();
}

void top_kernel::thread_indvar1_fu_379_p1() {
    indvar1_fu_379_p1 = esl_zext<64,30>(indvar_reg_216.read());
}

void top_kernel::thread_indvar_next5_fu_368_p2() {
    indvar_next5_fu_368_p2 = (!indvar_reg_216.read().is_01() || !ap_const_lv30_1.is_01())? sc_lv<30>(): (sc_biguint<30>(indvar_reg_216.read()) + sc_biguint<30>(ap_const_lv30_1));
}

void top_kernel::thread_layer_config_V12_sum_1_fu_330_p1() {
    layer_config_V12_sum_1_fu_330_p1 = esl_zext<64,63>(layer_config_V12_sum_fu_325_p2.read());
}

void top_kernel::thread_layer_config_V12_sum_fu_325_p2() {
    layer_config_V12_sum_fu_325_p2 = (!tmp_71_cast_reg_388.read().is_01() || !tmp_60_cast_fu_321_p1.read().is_01())? sc_lv<63>(): (sc_biguint<63>(tmp_71_cast_reg_388.read()) + sc_biguint<63>(tmp_60_cast_fu_321_p1.read()));
}

void top_kernel::thread_layer_id_1_fu_301_p2() {
    layer_id_1_fu_301_p2 = (!layer_id_reg_205.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(layer_id_reg_205.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void top_kernel::thread_m_axi_gmem3_ARADDR() {
    m_axi_gmem3_ARADDR = ap_const_lv64_0;
}

void top_kernel::thread_m_axi_gmem3_ARBURST() {
    m_axi_gmem3_ARBURST = ap_const_lv2_0;
}

void top_kernel::thread_m_axi_gmem3_ARCACHE() {
    m_axi_gmem3_ARCACHE = ap_const_lv4_0;
}

void top_kernel::thread_m_axi_gmem3_ARID() {
    m_axi_gmem3_ARID = ap_const_lv1_0;
}

void top_kernel::thread_m_axi_gmem3_ARLEN() {
    m_axi_gmem3_ARLEN = ap_const_lv8_0;
}

void top_kernel::thread_m_axi_gmem3_ARLOCK() {
    m_axi_gmem3_ARLOCK = ap_const_lv2_0;
}

void top_kernel::thread_m_axi_gmem3_ARPROT() {
    m_axi_gmem3_ARPROT = ap_const_lv3_0;
}

void top_kernel::thread_m_axi_gmem3_ARQOS() {
    m_axi_gmem3_ARQOS = ap_const_lv4_0;
}

void top_kernel::thread_m_axi_gmem3_ARREGION() {
    m_axi_gmem3_ARREGION = ap_const_lv4_0;
}

void top_kernel::thread_m_axi_gmem3_ARSIZE() {
    m_axi_gmem3_ARSIZE = ap_const_lv3_0;
}

void top_kernel::thread_m_axi_gmem3_ARUSER() {
    m_axi_gmem3_ARUSER = ap_const_lv1_0;
}

void top_kernel::thread_m_axi_gmem3_ARVALID() {
    m_axi_gmem3_ARVALID = ap_const_logic_0;
}

void top_kernel::thread_m_axi_gmem3_AWADDR() {
    m_axi_gmem3_AWADDR = ap_const_lv64_0;
}

void top_kernel::thread_m_axi_gmem3_AWBURST() {
    m_axi_gmem3_AWBURST = ap_const_lv2_0;
}

void top_kernel::thread_m_axi_gmem3_AWCACHE() {
    m_axi_gmem3_AWCACHE = ap_const_lv4_0;
}

void top_kernel::thread_m_axi_gmem3_AWID() {
    m_axi_gmem3_AWID = ap_const_lv1_0;
}

void top_kernel::thread_m_axi_gmem3_AWLEN() {
    m_axi_gmem3_AWLEN = ap_const_lv8_0;
}

void top_kernel::thread_m_axi_gmem3_AWLOCK() {
    m_axi_gmem3_AWLOCK = ap_const_lv2_0;
}

void top_kernel::thread_m_axi_gmem3_AWPROT() {
    m_axi_gmem3_AWPROT = ap_const_lv3_0;
}

void top_kernel::thread_m_axi_gmem3_AWQOS() {
    m_axi_gmem3_AWQOS = ap_const_lv4_0;
}

void top_kernel::thread_m_axi_gmem3_AWREGION() {
    m_axi_gmem3_AWREGION = ap_const_lv4_0;
}

void top_kernel::thread_m_axi_gmem3_AWSIZE() {
    m_axi_gmem3_AWSIZE = ap_const_lv3_0;
}

void top_kernel::thread_m_axi_gmem3_AWUSER() {
    m_axi_gmem3_AWUSER = ap_const_lv1_0;
}

void top_kernel::thread_m_axi_gmem3_AWVALID() {
    m_axi_gmem3_AWVALID = ap_const_logic_0;
}

void top_kernel::thread_m_axi_gmem3_BREADY() {
    m_axi_gmem3_BREADY = ap_const_logic_0;
}

void top_kernel::thread_m_axi_gmem3_RREADY() {
    m_axi_gmem3_RREADY = ap_const_logic_0;
}

void top_kernel::thread_m_axi_gmem3_WDATA() {
    m_axi_gmem3_WDATA = ap_const_lv512_lc_1;
}

void top_kernel::thread_m_axi_gmem3_WID() {
    m_axi_gmem3_WID = ap_const_lv1_0;
}

void top_kernel::thread_m_axi_gmem3_WLAST() {
    m_axi_gmem3_WLAST = ap_const_logic_0;
}

void top_kernel::thread_m_axi_gmem3_WSTRB() {
    m_axi_gmem3_WSTRB = ap_const_lv64_0;
}

void top_kernel::thread_m_axi_gmem3_WUSER() {
    m_axi_gmem3_WUSER = ap_const_lv1_0;
}

void top_kernel::thread_m_axi_gmem3_WVALID() {
    m_axi_gmem3_WVALID = ap_const_logic_0;
}

void top_kernel::thread_tmp_15_fu_315_p2() {
    tmp_15_fu_315_p2 = (tmp_s_fu_307_p3.read() | ap_const_lv8_5);
}

void top_kernel::thread_tmp_16_fu_374_p2() {
    tmp_16_fu_374_p2 = (!tmp_27_reg_442.read().is_01() || !ap_const_lv32_FFFFFFF9.is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_27_reg_442.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFF9));
}

void top_kernel::thread_tmp_17_fu_384_p1() {
    tmp_17_fu_384_p1 = esl_sext<64,32>(tmp_16_reg_460.read());
}

void top_kernel::thread_tmp_27_fu_357_p2() {
    tmp_27_fu_357_p2 = (!ap_const_lv32_5.is_01())? sc_lv<32>(): cur_layer_batch_reg_192.read() << (unsigned short)ap_const_lv32_5.to_uint();
}

void top_kernel::thread_tmp_28_fu_340_p1() {
    tmp_28_fu_340_p1 = cur_layer_batch_reg_192.read().range(25-1, 0);
}

void top_kernel::thread_tmp_60_cast_fu_321_p1() {
    tmp_60_cast_fu_321_p1 = esl_zext<63,8>(tmp_15_fu_315_p2.read());
}

void top_kernel::thread_tmp_71_cast_fu_251_p1() {
    tmp_71_cast_fu_251_p1 = esl_zext<63,62>(tmp_fu_241_p4.read());
}

void top_kernel::thread_tmp_cast_fu_344_p3() {
    tmp_cast_fu_344_p3 = esl_concat<25,5>(tmp_28_fu_340_p1.read(), ap_const_lv5_0);
}

void top_kernel::thread_tmp_fu_241_p4() {
    tmp_fu_241_p4 = layer_config_V.read().range(63, 2);
}

void top_kernel::thread_tmp_s_fu_307_p3() {
    tmp_s_fu_307_p3 = esl_concat<3,5>(layer_id_reg_205.read(), ap_const_lv5_0);
}

void top_kernel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_295_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gcontrol_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gcontrol_RVALID.read())) && esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond6_fu_363_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, gcontrol_RVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_block_state15_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

void top_kernel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem1_AWVALID\" :  \"" << m_axi_gmem1_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_AWREADY\" :  \"" << m_axi_gmem1_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWADDR\" :  \"" << m_axi_gmem1_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWID\" :  \"" << m_axi_gmem1_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLEN\" :  \"" << m_axi_gmem1_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWSIZE\" :  \"" << m_axi_gmem1_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWBURST\" :  \"" << m_axi_gmem1_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWLOCK\" :  \"" << m_axi_gmem1_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWCACHE\" :  \"" << m_axi_gmem1_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWPROT\" :  \"" << m_axi_gmem1_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWQOS\" :  \"" << m_axi_gmem1_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWREGION\" :  \"" << m_axi_gmem1_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_AWUSER\" :  \"" << m_axi_gmem1_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WVALID\" :  \"" << m_axi_gmem1_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_WREADY\" :  \"" << m_axi_gmem1_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WDATA\" :  \"" << m_axi_gmem1_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WSTRB\" :  \"" << m_axi_gmem1_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WLAST\" :  \"" << m_axi_gmem1_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WID\" :  \"" << m_axi_gmem1_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_WUSER\" :  \"" << m_axi_gmem1_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARVALID\" :  \"" << m_axi_gmem1_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_ARREADY\" :  \"" << m_axi_gmem1_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARADDR\" :  \"" << m_axi_gmem1_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARID\" :  \"" << m_axi_gmem1_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLEN\" :  \"" << m_axi_gmem1_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARSIZE\" :  \"" << m_axi_gmem1_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARBURST\" :  \"" << m_axi_gmem1_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARLOCK\" :  \"" << m_axi_gmem1_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARCACHE\" :  \"" << m_axi_gmem1_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARPROT\" :  \"" << m_axi_gmem1_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARQOS\" :  \"" << m_axi_gmem1_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARREGION\" :  \"" << m_axi_gmem1_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_ARUSER\" :  \"" << m_axi_gmem1_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RVALID\" :  \"" << m_axi_gmem1_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_RREADY\" :  \"" << m_axi_gmem1_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RDATA\" :  \"" << m_axi_gmem1_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RLAST\" :  \"" << m_axi_gmem1_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RID\" :  \"" << m_axi_gmem1_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RUSER\" :  \"" << m_axi_gmem1_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_RRESP\" :  \"" << m_axi_gmem1_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BVALID\" :  \"" << m_axi_gmem1_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem1_BREADY\" :  \"" << m_axi_gmem1_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BRESP\" :  \"" << m_axi_gmem1_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BID\" :  \"" << m_axi_gmem1_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem1_BUSER\" :  \"" << m_axi_gmem1_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWVALID\" :  \"" << m_axi_gmem3_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_AWREADY\" :  \"" << m_axi_gmem3_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWADDR\" :  \"" << m_axi_gmem3_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWID\" :  \"" << m_axi_gmem3_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWLEN\" :  \"" << m_axi_gmem3_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWSIZE\" :  \"" << m_axi_gmem3_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWBURST\" :  \"" << m_axi_gmem3_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWLOCK\" :  \"" << m_axi_gmem3_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWCACHE\" :  \"" << m_axi_gmem3_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWPROT\" :  \"" << m_axi_gmem3_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWQOS\" :  \"" << m_axi_gmem3_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWREGION\" :  \"" << m_axi_gmem3_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_AWUSER\" :  \"" << m_axi_gmem3_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WVALID\" :  \"" << m_axi_gmem3_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_WREADY\" :  \"" << m_axi_gmem3_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WDATA\" :  \"" << m_axi_gmem3_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WSTRB\" :  \"" << m_axi_gmem3_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WLAST\" :  \"" << m_axi_gmem3_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WID\" :  \"" << m_axi_gmem3_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_WUSER\" :  \"" << m_axi_gmem3_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARVALID\" :  \"" << m_axi_gmem3_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_ARREADY\" :  \"" << m_axi_gmem3_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARADDR\" :  \"" << m_axi_gmem3_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARID\" :  \"" << m_axi_gmem3_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARLEN\" :  \"" << m_axi_gmem3_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARSIZE\" :  \"" << m_axi_gmem3_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARBURST\" :  \"" << m_axi_gmem3_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARLOCK\" :  \"" << m_axi_gmem3_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARCACHE\" :  \"" << m_axi_gmem3_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARPROT\" :  \"" << m_axi_gmem3_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARQOS\" :  \"" << m_axi_gmem3_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARREGION\" :  \"" << m_axi_gmem3_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_ARUSER\" :  \"" << m_axi_gmem3_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RVALID\" :  \"" << m_axi_gmem3_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_RREADY\" :  \"" << m_axi_gmem3_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RDATA\" :  \"" << m_axi_gmem3_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RLAST\" :  \"" << m_axi_gmem3_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RID\" :  \"" << m_axi_gmem3_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RUSER\" :  \"" << m_axi_gmem3_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_RRESP\" :  \"" << m_axi_gmem3_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_BVALID\" :  \"" << m_axi_gmem3_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem3_BREADY\" :  \"" << m_axi_gmem3_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_BRESP\" :  \"" << m_axi_gmem3_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_BID\" :  \"" << m_axi_gmem3_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem3_BUSER\" :  \"" << m_axi_gmem3_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWVALID\" :  \"" << m_axi_gmem2_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_AWREADY\" :  \"" << m_axi_gmem2_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWADDR\" :  \"" << m_axi_gmem2_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWID\" :  \"" << m_axi_gmem2_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWLEN\" :  \"" << m_axi_gmem2_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWSIZE\" :  \"" << m_axi_gmem2_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWBURST\" :  \"" << m_axi_gmem2_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWLOCK\" :  \"" << m_axi_gmem2_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWCACHE\" :  \"" << m_axi_gmem2_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWPROT\" :  \"" << m_axi_gmem2_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWQOS\" :  \"" << m_axi_gmem2_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWREGION\" :  \"" << m_axi_gmem2_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_AWUSER\" :  \"" << m_axi_gmem2_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WVALID\" :  \"" << m_axi_gmem2_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_WREADY\" :  \"" << m_axi_gmem2_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WDATA\" :  \"" << m_axi_gmem2_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WSTRB\" :  \"" << m_axi_gmem2_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WLAST\" :  \"" << m_axi_gmem2_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WID\" :  \"" << m_axi_gmem2_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_WUSER\" :  \"" << m_axi_gmem2_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARVALID\" :  \"" << m_axi_gmem2_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_ARREADY\" :  \"" << m_axi_gmem2_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARADDR\" :  \"" << m_axi_gmem2_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARID\" :  \"" << m_axi_gmem2_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARLEN\" :  \"" << m_axi_gmem2_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARSIZE\" :  \"" << m_axi_gmem2_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARBURST\" :  \"" << m_axi_gmem2_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARLOCK\" :  \"" << m_axi_gmem2_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARCACHE\" :  \"" << m_axi_gmem2_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARPROT\" :  \"" << m_axi_gmem2_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARQOS\" :  \"" << m_axi_gmem2_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARREGION\" :  \"" << m_axi_gmem2_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_ARUSER\" :  \"" << m_axi_gmem2_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RVALID\" :  \"" << m_axi_gmem2_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_RREADY\" :  \"" << m_axi_gmem2_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RDATA\" :  \"" << m_axi_gmem2_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RLAST\" :  \"" << m_axi_gmem2_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RID\" :  \"" << m_axi_gmem2_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RUSER\" :  \"" << m_axi_gmem2_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_RRESP\" :  \"" << m_axi_gmem2_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BVALID\" :  \"" << m_axi_gmem2_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem2_BREADY\" :  \"" << m_axi_gmem2_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BRESP\" :  \"" << m_axi_gmem2_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BID\" :  \"" << m_axi_gmem2_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem2_BUSER\" :  \"" << m_axi_gmem2_BUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWVALID\" :  \"" << m_axi_gcontrol_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_AWREADY\" :  \"" << m_axi_gcontrol_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWADDR\" :  \"" << m_axi_gcontrol_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWID\" :  \"" << m_axi_gcontrol_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWLEN\" :  \"" << m_axi_gcontrol_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWSIZE\" :  \"" << m_axi_gcontrol_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWBURST\" :  \"" << m_axi_gcontrol_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWLOCK\" :  \"" << m_axi_gcontrol_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWCACHE\" :  \"" << m_axi_gcontrol_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWPROT\" :  \"" << m_axi_gcontrol_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWQOS\" :  \"" << m_axi_gcontrol_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWREGION\" :  \"" << m_axi_gcontrol_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_AWUSER\" :  \"" << m_axi_gcontrol_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_WVALID\" :  \"" << m_axi_gcontrol_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_WREADY\" :  \"" << m_axi_gcontrol_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_WDATA\" :  \"" << m_axi_gcontrol_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_WSTRB\" :  \"" << m_axi_gcontrol_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_WLAST\" :  \"" << m_axi_gcontrol_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_WID\" :  \"" << m_axi_gcontrol_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_WUSER\" :  \"" << m_axi_gcontrol_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARVALID\" :  \"" << m_axi_gcontrol_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_ARREADY\" :  \"" << m_axi_gcontrol_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARADDR\" :  \"" << m_axi_gcontrol_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARID\" :  \"" << m_axi_gcontrol_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARLEN\" :  \"" << m_axi_gcontrol_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARSIZE\" :  \"" << m_axi_gcontrol_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARBURST\" :  \"" << m_axi_gcontrol_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARLOCK\" :  \"" << m_axi_gcontrol_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARCACHE\" :  \"" << m_axi_gcontrol_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARPROT\" :  \"" << m_axi_gcontrol_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARQOS\" :  \"" << m_axi_gcontrol_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARREGION\" :  \"" << m_axi_gcontrol_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_ARUSER\" :  \"" << m_axi_gcontrol_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_RVALID\" :  \"" << m_axi_gcontrol_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_RREADY\" :  \"" << m_axi_gcontrol_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_RDATA\" :  \"" << m_axi_gcontrol_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_RLAST\" :  \"" << m_axi_gcontrol_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_RID\" :  \"" << m_axi_gcontrol_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_RUSER\" :  \"" << m_axi_gcontrol_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_RRESP\" :  \"" << m_axi_gcontrol_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_BVALID\" :  \"" << m_axi_gcontrol_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gcontrol_BREADY\" :  \"" << m_axi_gcontrol_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_BRESP\" :  \"" << m_axi_gcontrol_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_BID\" :  \"" << m_axi_gcontrol_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gcontrol_BUSER\" :  \"" << m_axi_gcontrol_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWVALID\" :  \"" << s_axi_control_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_AWREADY\" :  \"" << s_axi_control_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_AWADDR\" :  \"" << s_axi_control_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WVALID\" :  \"" << s_axi_control_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_WREADY\" :  \"" << s_axi_control_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WDATA\" :  \"" << s_axi_control_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_WSTRB\" :  \"" << s_axi_control_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARVALID\" :  \"" << s_axi_control_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_ARREADY\" :  \"" << s_axi_control_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_ARADDR\" :  \"" << s_axi_control_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RVALID\" :  \"" << s_axi_control_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_RREADY\" :  \"" << s_axi_control_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RDATA\" :  \"" << s_axi_control_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_RRESP\" :  \"" << s_axi_control_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BVALID\" :  \"" << s_axi_control_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_control_BREADY\" :  \"" << s_axi_control_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_control_BRESP\" :  \"" << s_axi_control_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

