// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module weight_load_conv_wei (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weight_burst_buf2_V_address0,
        weight_burst_buf2_V_ce0,
        weight_burst_buf2_V_q0,
        fifo_conv_weight_V_V_din,
        fifo_conv_weight_V_V_full_n,
        fifo_conv_weight_V_V_write,
        inst2_V,
        inst3_V
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state31 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] weight_burst_buf2_V_address0;
output   weight_burst_buf2_V_ce0;
input  [511:0] weight_burst_buf2_V_q0;
output  [255:0] fifo_conv_weight_V_V_din;
input   fifo_conv_weight_V_V_full_n;
output   fifo_conv_weight_V_V_write;
input  [191:0] inst2_V;
input  [191:0] inst3_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg weight_burst_buf2_V_ce0;
reg fifo_conv_weight_V_V_write;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_conv_weight_V_V_blk_n;
reg    ap_enable_reg_pp0_iter28;
wire    ap_block_pp0_stage0;
reg   [0:0] done_reg_168;
reg   [0:0] done_reg_168_pp0_iter27_reg;
reg  signed [31:0] i_op_assign_reg_120;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
wire    ap_block_state15_pp0_stage0_iter13;
wire    ap_block_state16_pp0_stage0_iter14;
wire    ap_block_state17_pp0_stage0_iter15;
wire    ap_block_state18_pp0_stage0_iter16;
wire    ap_block_state19_pp0_stage0_iter17;
wire    ap_block_state20_pp0_stage0_iter18;
wire    ap_block_state21_pp0_stage0_iter19;
wire    ap_block_state22_pp0_stage0_iter20;
wire    ap_block_state23_pp0_stage0_iter21;
wire    ap_block_state24_pp0_stage0_iter22;
wire    ap_block_state25_pp0_stage0_iter23;
wire    ap_block_state26_pp0_stage0_iter24;
wire    ap_block_state27_pp0_stage0_iter25;
wire    ap_block_state28_pp0_stage0_iter26;
wire    ap_block_state29_pp0_stage0_iter27;
reg    ap_block_state30_pp0_stage0_iter28;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] i_op_assign_1_reg_132;
reg   [31:0] i_op_assign_1_reg_132_pp0_iter1_reg;
reg   [31:0] i_op_assign_1_reg_132_pp0_iter2_reg;
reg   [31:0] i_op_assign_1_reg_132_pp0_iter3_reg;
reg   [31:0] i_op_assign_1_reg_132_pp0_iter4_reg;
reg   [31:0] i_op_assign_1_reg_132_pp0_iter5_reg;
reg   [31:0] i_op_assign_1_reg_132_pp0_iter6_reg;
reg   [31:0] i_op_assign_1_reg_132_pp0_iter7_reg;
reg   [31:0] i_op_assign_2_reg_144;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter1_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter2_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter3_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter4_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter5_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter6_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter7_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter8_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter9_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter10_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter11_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter12_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter13_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter14_reg;
reg   [31:0] i_op_assign_2_reg_144_pp0_iter15_reg;
reg   [31:0] ii_reg_156;
reg   [31:0] ii_reg_156_pp0_iter1_reg;
reg   [31:0] ii_reg_156_pp0_iter2_reg;
reg   [31:0] ii_reg_156_pp0_iter3_reg;
reg   [31:0] ii_reg_156_pp0_iter4_reg;
reg   [31:0] ii_reg_156_pp0_iter5_reg;
reg   [31:0] ii_reg_156_pp0_iter6_reg;
reg   [31:0] ii_reg_156_pp0_iter7_reg;
reg   [31:0] ii_reg_156_pp0_iter8_reg;
reg   [31:0] ii_reg_156_pp0_iter9_reg;
reg   [31:0] ii_reg_156_pp0_iter10_reg;
reg   [31:0] ii_reg_156_pp0_iter11_reg;
reg   [31:0] ii_reg_156_pp0_iter12_reg;
reg   [31:0] ii_reg_156_pp0_iter13_reg;
reg   [31:0] ii_reg_156_pp0_iter14_reg;
reg   [31:0] ii_reg_156_pp0_iter15_reg;
reg   [31:0] ii_reg_156_pp0_iter16_reg;
reg   [31:0] ii_reg_156_pp0_iter17_reg;
reg   [31:0] ii_reg_156_pp0_iter18_reg;
reg   [31:0] ii_reg_156_pp0_iter19_reg;
reg   [31:0] ii_reg_156_pp0_iter20_reg;
reg   [31:0] ii_reg_156_pp0_iter21_reg;
reg   [31:0] ii_reg_156_pp0_iter22_reg;
reg   [31:0] ii_reg_156_pp0_iter23_reg;
reg   [0:0] done_reg_168_pp0_iter1_reg;
reg   [0:0] done_reg_168_pp0_iter2_reg;
reg   [0:0] done_reg_168_pp0_iter3_reg;
reg   [0:0] done_reg_168_pp0_iter4_reg;
reg   [0:0] done_reg_168_pp0_iter5_reg;
reg   [0:0] done_reg_168_pp0_iter6_reg;
reg   [0:0] done_reg_168_pp0_iter7_reg;
reg   [0:0] done_reg_168_pp0_iter8_reg;
reg   [0:0] done_reg_168_pp0_iter9_reg;
reg   [0:0] done_reg_168_pp0_iter10_reg;
reg   [0:0] done_reg_168_pp0_iter11_reg;
reg   [0:0] done_reg_168_pp0_iter12_reg;
reg   [0:0] done_reg_168_pp0_iter13_reg;
reg   [0:0] done_reg_168_pp0_iter14_reg;
reg   [0:0] done_reg_168_pp0_iter15_reg;
reg   [0:0] done_reg_168_pp0_iter16_reg;
reg   [0:0] done_reg_168_pp0_iter17_reg;
reg   [0:0] done_reg_168_pp0_iter18_reg;
reg   [0:0] done_reg_168_pp0_iter19_reg;
reg   [0:0] done_reg_168_pp0_iter20_reg;
reg   [0:0] done_reg_168_pp0_iter21_reg;
reg   [0:0] done_reg_168_pp0_iter22_reg;
reg   [0:0] done_reg_168_pp0_iter23_reg;
reg   [0:0] done_reg_168_pp0_iter24_reg;
reg   [0:0] done_reg_168_pp0_iter25_reg;
reg   [0:0] done_reg_168_pp0_iter26_reg;
wire   [0:0] tmp_fu_220_p3;
wire   [31:0] tmp_1_fu_228_p1;
reg   [31:0] tmp_1_reg_476;
wire   [31:0] tmp_2_fu_232_p1;
reg   [31:0] tmp_2_reg_484;
wire   [31:0] tmp_5_fu_246_p1;
reg   [31:0] tmp_5_reg_489;
wire   [31:0] tmp_6_fu_250_p1;
reg   [31:0] tmp_6_reg_494;
wire   [0:0] tmp_4_fu_260_p2;
reg   [0:0] tmp_4_reg_499;
reg   [0:0] ap_phi_mux_done_phi_fu_172_p4;
wire   [31:0] oo_fu_287_p2;
reg   [31:0] oo_reg_504;
wire   [0:0] sel_tmp1_fu_299_p2;
reg   [0:0] sel_tmp1_reg_510;
wire   [0:0] sel_tmp6_fu_311_p2;
reg   [0:0] sel_tmp6_reg_516;
wire   [31:0] p_3_fu_333_p3;
reg   [31:0] p_3_reg_521;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] q_2_fu_349_p3;
reg   [31:0] q_2_reg_526;
wire   [31:0] ii_1_fu_357_p3;
reg   [31:0] ii_1_reg_531;
wire   [31:0] oo_4_fu_395_p3;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] done_4_fu_402_p2;
wire   [31:0] grp_fu_365_p2;
reg   [31:0] tmp_7_reg_546;
wire  signed [31:0] tmp5_fu_407_p2;
reg  signed [31:0] tmp5_reg_551;
wire   [31:0] grp_fu_412_p2;
reg   [31:0] tmp6_reg_556;
wire  signed [31:0] tmp4_fu_416_p2;
reg  signed [31:0] tmp4_reg_561;
wire   [31:0] grp_fu_421_p2;
reg   [31:0] tmp7_reg_566;
reg   [27:0] bus_w_idx_reg_571;
reg   [0:0] tmp_12_reg_576;
reg   [0:0] tmp_12_reg_576_pp0_iter25_reg;
reg   [0:0] tmp_12_reg_576_pp0_iter26_reg;
reg   [0:0] tmp_12_reg_576_pp0_iter27_reg;
reg   [511:0] bus_w_data_V_reg_585;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg  signed [31:0] ap_phi_mux_i_op_assign_phi_fu_124_p4;
reg   [31:0] ap_phi_mux_i_op_assign_1_phi_fu_136_p4;
reg   [31:0] ap_phi_mux_i_op_assign_2_phi_fu_148_p4;
reg   [31:0] ap_phi_mux_ii_phi_fu_160_p4;
reg   [255:0] ap_phi_mux_tmp_V_phi_fu_183_p4;
wire   [255:0] ap_phi_reg_pp0_iter28_tmp_V_reg_180;
wire   [255:0] fifo_w_data_V_1_fu_458_p1;
wire   [63:0] tmp_9_fu_454_p1;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] FILTER_S2_V_fu_190_p4;
wire   [15:0] LAYER_IN_NUM_T_V_fu_200_p4;
wire   [12:0] ret_V_fu_236_p4;
wire   [15:0] LAYER_OUT_NUM_T_V_fu_210_p4;
wire   [31:0] ii_2_fu_254_p2;
wire   [31:0] q_fu_265_p2;
wire   [31:0] p_fu_276_p2;
wire   [0:0] tmp_8_fu_271_p2;
wire   [0:0] tmp_3_fu_282_p2;
wire   [0:0] tmp1_fu_293_p2;
wire   [0:0] sel_tmp5_fu_305_p2;
wire   [31:0] sel_tmp_fu_317_p3;
wire   [31:0] sel_tmp3_fu_325_p3;
wire   [31:0] sel_tmp7_fu_341_p3;
wire   [15:0] grp_fu_365_p1;
wire   [0:0] tmp_10_fu_370_p2;
wire   [31:0] p_s_fu_374_p3;
wire   [31:0] sel_tmp2_fu_381_p3;
wire   [31:0] sel_tmp4_fu_388_p3;
wire   [15:0] grp_fu_412_p1;
wire   [15:0] grp_fu_421_p1;
wire   [31:0] tmp_11_fu_425_p2;
wire   [31:0] local_w_idx_fu_431_p2;
reg    grp_fu_365_ce;
reg    grp_fu_412_ce;
reg    grp_fu_421_ce;
wire    ap_CS_fsm_state31;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_47;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
end

top_kernel_mul_32g8j #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_32g8j_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_op_assign_reg_120),
    .din1(grp_fu_365_p1),
    .ce(grp_fu_365_ce),
    .dout(grp_fu_365_p2)
);

top_kernel_mul_32g8j #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_32g8j_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp5_reg_551),
    .din1(grp_fu_412_p1),
    .ce(grp_fu_412_ce),
    .dout(grp_fu_412_p2)
);

top_kernel_mul_32g8j #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_32g8j_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp4_reg_561),
    .din1(grp_fu_421_p1),
    .ce(grp_fu_421_ce),
    .dout(grp_fu_421_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_220_p3 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_220_p3 == 1'd1))) begin
            ap_enable_reg_pp0_iter28 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_220_p3 == 1'd1))) begin
        done_reg_168 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        done_reg_168 <= done_4_fu_402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_220_p3 == 1'd1))) begin
        i_op_assign_1_reg_132 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_op_assign_1_reg_132 <= p_3_reg_521;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_220_p3 == 1'd1))) begin
        i_op_assign_2_reg_144 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_op_assign_2_reg_144 <= q_2_reg_526;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_220_p3 == 1'd1))) begin
        i_op_assign_reg_120 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i_op_assign_reg_120 <= oo_4_fu_395_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_220_p3 == 1'd1))) begin
        ii_reg_156 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ii_reg_156 <= ii_1_reg_531;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168_pp0_iter26_reg == 1'd0))) begin
        bus_w_data_V_reg_585 <= weight_burst_buf2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168_pp0_iter23_reg == 1'd0))) begin
        bus_w_idx_reg_571 <= {{local_w_idx_fu_431_p2[31:4]}};
        tmp_12_reg_576 <= local_w_idx_fu_431_p2[32'd3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        done_reg_168_pp0_iter10_reg <= done_reg_168_pp0_iter9_reg;
        done_reg_168_pp0_iter11_reg <= done_reg_168_pp0_iter10_reg;
        done_reg_168_pp0_iter12_reg <= done_reg_168_pp0_iter11_reg;
        done_reg_168_pp0_iter13_reg <= done_reg_168_pp0_iter12_reg;
        done_reg_168_pp0_iter14_reg <= done_reg_168_pp0_iter13_reg;
        done_reg_168_pp0_iter15_reg <= done_reg_168_pp0_iter14_reg;
        done_reg_168_pp0_iter16_reg <= done_reg_168_pp0_iter15_reg;
        done_reg_168_pp0_iter17_reg <= done_reg_168_pp0_iter16_reg;
        done_reg_168_pp0_iter18_reg <= done_reg_168_pp0_iter17_reg;
        done_reg_168_pp0_iter19_reg <= done_reg_168_pp0_iter18_reg;
        done_reg_168_pp0_iter20_reg <= done_reg_168_pp0_iter19_reg;
        done_reg_168_pp0_iter21_reg <= done_reg_168_pp0_iter20_reg;
        done_reg_168_pp0_iter22_reg <= done_reg_168_pp0_iter21_reg;
        done_reg_168_pp0_iter23_reg <= done_reg_168_pp0_iter22_reg;
        done_reg_168_pp0_iter24_reg <= done_reg_168_pp0_iter23_reg;
        done_reg_168_pp0_iter25_reg <= done_reg_168_pp0_iter24_reg;
        done_reg_168_pp0_iter26_reg <= done_reg_168_pp0_iter25_reg;
        done_reg_168_pp0_iter27_reg <= done_reg_168_pp0_iter26_reg;
        done_reg_168_pp0_iter2_reg <= done_reg_168_pp0_iter1_reg;
        done_reg_168_pp0_iter3_reg <= done_reg_168_pp0_iter2_reg;
        done_reg_168_pp0_iter4_reg <= done_reg_168_pp0_iter3_reg;
        done_reg_168_pp0_iter5_reg <= done_reg_168_pp0_iter4_reg;
        done_reg_168_pp0_iter6_reg <= done_reg_168_pp0_iter5_reg;
        done_reg_168_pp0_iter7_reg <= done_reg_168_pp0_iter6_reg;
        done_reg_168_pp0_iter8_reg <= done_reg_168_pp0_iter7_reg;
        done_reg_168_pp0_iter9_reg <= done_reg_168_pp0_iter8_reg;
        i_op_assign_1_reg_132_pp0_iter2_reg <= i_op_assign_1_reg_132_pp0_iter1_reg;
        i_op_assign_1_reg_132_pp0_iter3_reg <= i_op_assign_1_reg_132_pp0_iter2_reg;
        i_op_assign_1_reg_132_pp0_iter4_reg <= i_op_assign_1_reg_132_pp0_iter3_reg;
        i_op_assign_1_reg_132_pp0_iter5_reg <= i_op_assign_1_reg_132_pp0_iter4_reg;
        i_op_assign_1_reg_132_pp0_iter6_reg <= i_op_assign_1_reg_132_pp0_iter5_reg;
        i_op_assign_1_reg_132_pp0_iter7_reg <= i_op_assign_1_reg_132_pp0_iter6_reg;
        i_op_assign_2_reg_144_pp0_iter10_reg <= i_op_assign_2_reg_144_pp0_iter9_reg;
        i_op_assign_2_reg_144_pp0_iter11_reg <= i_op_assign_2_reg_144_pp0_iter10_reg;
        i_op_assign_2_reg_144_pp0_iter12_reg <= i_op_assign_2_reg_144_pp0_iter11_reg;
        i_op_assign_2_reg_144_pp0_iter13_reg <= i_op_assign_2_reg_144_pp0_iter12_reg;
        i_op_assign_2_reg_144_pp0_iter14_reg <= i_op_assign_2_reg_144_pp0_iter13_reg;
        i_op_assign_2_reg_144_pp0_iter15_reg <= i_op_assign_2_reg_144_pp0_iter14_reg;
        i_op_assign_2_reg_144_pp0_iter2_reg <= i_op_assign_2_reg_144_pp0_iter1_reg;
        i_op_assign_2_reg_144_pp0_iter3_reg <= i_op_assign_2_reg_144_pp0_iter2_reg;
        i_op_assign_2_reg_144_pp0_iter4_reg <= i_op_assign_2_reg_144_pp0_iter3_reg;
        i_op_assign_2_reg_144_pp0_iter5_reg <= i_op_assign_2_reg_144_pp0_iter4_reg;
        i_op_assign_2_reg_144_pp0_iter6_reg <= i_op_assign_2_reg_144_pp0_iter5_reg;
        i_op_assign_2_reg_144_pp0_iter7_reg <= i_op_assign_2_reg_144_pp0_iter6_reg;
        i_op_assign_2_reg_144_pp0_iter8_reg <= i_op_assign_2_reg_144_pp0_iter7_reg;
        i_op_assign_2_reg_144_pp0_iter9_reg <= i_op_assign_2_reg_144_pp0_iter8_reg;
        ii_reg_156_pp0_iter10_reg <= ii_reg_156_pp0_iter9_reg;
        ii_reg_156_pp0_iter11_reg <= ii_reg_156_pp0_iter10_reg;
        ii_reg_156_pp0_iter12_reg <= ii_reg_156_pp0_iter11_reg;
        ii_reg_156_pp0_iter13_reg <= ii_reg_156_pp0_iter12_reg;
        ii_reg_156_pp0_iter14_reg <= ii_reg_156_pp0_iter13_reg;
        ii_reg_156_pp0_iter15_reg <= ii_reg_156_pp0_iter14_reg;
        ii_reg_156_pp0_iter16_reg <= ii_reg_156_pp0_iter15_reg;
        ii_reg_156_pp0_iter17_reg <= ii_reg_156_pp0_iter16_reg;
        ii_reg_156_pp0_iter18_reg <= ii_reg_156_pp0_iter17_reg;
        ii_reg_156_pp0_iter19_reg <= ii_reg_156_pp0_iter18_reg;
        ii_reg_156_pp0_iter20_reg <= ii_reg_156_pp0_iter19_reg;
        ii_reg_156_pp0_iter21_reg <= ii_reg_156_pp0_iter20_reg;
        ii_reg_156_pp0_iter22_reg <= ii_reg_156_pp0_iter21_reg;
        ii_reg_156_pp0_iter23_reg <= ii_reg_156_pp0_iter22_reg;
        ii_reg_156_pp0_iter2_reg <= ii_reg_156_pp0_iter1_reg;
        ii_reg_156_pp0_iter3_reg <= ii_reg_156_pp0_iter2_reg;
        ii_reg_156_pp0_iter4_reg <= ii_reg_156_pp0_iter3_reg;
        ii_reg_156_pp0_iter5_reg <= ii_reg_156_pp0_iter4_reg;
        ii_reg_156_pp0_iter6_reg <= ii_reg_156_pp0_iter5_reg;
        ii_reg_156_pp0_iter7_reg <= ii_reg_156_pp0_iter6_reg;
        ii_reg_156_pp0_iter8_reg <= ii_reg_156_pp0_iter7_reg;
        ii_reg_156_pp0_iter9_reg <= ii_reg_156_pp0_iter8_reg;
        tmp_12_reg_576_pp0_iter25_reg <= tmp_12_reg_576;
        tmp_12_reg_576_pp0_iter26_reg <= tmp_12_reg_576_pp0_iter25_reg;
        tmp_12_reg_576_pp0_iter27_reg <= tmp_12_reg_576_pp0_iter26_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        done_reg_168_pp0_iter1_reg <= done_reg_168;
        i_op_assign_1_reg_132_pp0_iter1_reg <= i_op_assign_1_reg_132;
        i_op_assign_2_reg_144_pp0_iter1_reg <= i_op_assign_2_reg_144;
        ii_reg_156_pp0_iter1_reg <= ii_reg_156;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_done_phi_fu_172_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ii_1_reg_531 <= ii_1_fu_357_p3;
        p_3_reg_521 <= p_3_fu_333_p3;
        q_2_reg_526 <= q_2_fu_349_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_done_phi_fu_172_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        oo_reg_504 <= oo_fu_287_p2;
        sel_tmp1_reg_510 <= sel_tmp1_fu_299_p2;
        sel_tmp6_reg_516 <= sel_tmp6_fu_311_p2;
        tmp_4_reg_499 <= tmp_4_fu_260_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168_pp0_iter15_reg == 1'd0))) begin
        tmp4_reg_561 <= tmp4_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168_pp0_iter7_reg == 1'd0))) begin
        tmp5_reg_551 <= tmp5_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168_pp0_iter14_reg == 1'd0))) begin
        tmp6_reg_556 <= grp_fu_412_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168_pp0_iter22_reg == 1'd0))) begin
        tmp7_reg_566 <= grp_fu_421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_220_p3 == 1'd1))) begin
        tmp_1_reg_476[15 : 0] <= tmp_1_fu_228_p1[15 : 0];
        tmp_2_reg_484[15 : 0] <= tmp_2_fu_232_p1[15 : 0];
        tmp_5_reg_489[12 : 0] <= tmp_5_fu_246_p1[12 : 0];
        tmp_6_reg_494[15 : 0] <= tmp_6_fu_250_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168_pp0_iter6_reg == 1'd0))) begin
        tmp_7_reg_546 <= grp_fu_365_p2;
    end
end

always @ (*) begin
    if ((ap_phi_mux_done_phi_fu_172_p4 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((done_reg_168 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_done_phi_fu_172_p4 = done_4_fu_402_p2;
    end else begin
        ap_phi_mux_done_phi_fu_172_p4 = done_reg_168;
    end
end

always @ (*) begin
    if (((done_reg_168 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_op_assign_1_phi_fu_136_p4 = p_3_reg_521;
    end else begin
        ap_phi_mux_i_op_assign_1_phi_fu_136_p4 = i_op_assign_1_reg_132;
    end
end

always @ (*) begin
    if (((done_reg_168 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_op_assign_2_phi_fu_148_p4 = q_2_reg_526;
    end else begin
        ap_phi_mux_i_op_assign_2_phi_fu_148_p4 = i_op_assign_2_reg_144;
    end
end

always @ (*) begin
    if (((done_reg_168 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_i_op_assign_phi_fu_124_p4 = oo_4_fu_395_p3;
    end else begin
        ap_phi_mux_i_op_assign_phi_fu_124_p4 = i_op_assign_reg_120;
    end
end

always @ (*) begin
    if (((done_reg_168 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_ii_phi_fu_160_p4 = ii_1_reg_531;
    end else begin
        ap_phi_mux_ii_phi_fu_160_p4 = ii_reg_156;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_47)) begin
        if ((tmp_12_reg_576_pp0_iter27_reg == 1'd0)) begin
            ap_phi_mux_tmp_V_phi_fu_183_p4 = fifo_w_data_V_1_fu_458_p1;
        end else if ((tmp_12_reg_576_pp0_iter27_reg == 1'd1)) begin
            ap_phi_mux_tmp_V_phi_fu_183_p4 = {{bus_w_data_V_reg_585[511:256]}};
        end else begin
            ap_phi_mux_tmp_V_phi_fu_183_p4 = ap_phi_reg_pp0_iter28_tmp_V_reg_180;
        end
    end else begin
        ap_phi_mux_tmp_V_phi_fu_183_p4 = ap_phi_reg_pp0_iter28_tmp_V_reg_180;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((done_reg_168_pp0_iter27_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        fifo_conv_weight_V_V_blk_n = fifo_conv_weight_V_V_full_n;
    end else begin
        fifo_conv_weight_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_168_pp0_iter27_reg == 1'd0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        fifo_conv_weight_V_V_write = 1'b1;
    end else begin
        fifo_conv_weight_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_365_ce = 1'b1;
    end else begin
        grp_fu_365_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_412_ce = 1'b1;
    end else begin
        grp_fu_412_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_421_ce = 1'b1;
    end else begin
        grp_fu_421_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter26 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter25 == 1'b1)))) begin
        weight_burst_buf2_V_ce0 = 1'b1;
    end else begin
        weight_burst_buf2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (tmp_fu_220_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_start == 1'b1) & (tmp_fu_220_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_phi_mux_done_phi_fu_172_p4 == 1'd1)) & ~((ap_enable_reg_pp0_iter27 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter28 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter27 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter28 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_phi_mux_done_phi_fu_172_p4 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign FILTER_S2_V_fu_190_p4 = {{inst2_V[159:144]}};

assign LAYER_IN_NUM_T_V_fu_200_p4 = {{inst3_V[79:64]}};

assign LAYER_OUT_NUM_T_V_fu_210_p4 = {{inst3_V[95:80]}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((done_reg_168_pp0_iter27_reg == 1'd0) & (fifo_conv_weight_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((done_reg_168_pp0_iter27_reg == 1'd0) & (fifo_conv_weight_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((done_reg_168_pp0_iter27_reg == 1'd0) & (fifo_conv_weight_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage0_iter28 = ((done_reg_168_pp0_iter27_reg == 1'd0) & (fifo_conv_weight_V_V_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_47 = ((done_reg_168_pp0_iter27_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter28_tmp_V_reg_180 = 'bx;

assign done_4_fu_402_p2 = (tmp_10_fu_370_p2 & sel_tmp1_reg_510);

assign fifo_conv_weight_V_V_din = ap_phi_mux_tmp_V_phi_fu_183_p4;

assign fifo_w_data_V_1_fu_458_p1 = bus_w_data_V_reg_585[255:0];

assign grp_fu_365_p1 = tmp_1_reg_476;

assign grp_fu_412_p1 = tmp_1_reg_476;

assign grp_fu_421_p1 = tmp_2_reg_484;

assign ii_1_fu_357_p3 = ((tmp_4_fu_260_p2[0:0] === 1'b1) ? 32'd0 : ii_2_fu_254_p2);

assign ii_2_fu_254_p2 = (ap_phi_mux_ii_phi_fu_160_p4 + 32'd1);

assign local_w_idx_fu_431_p2 = (tmp_11_fu_425_p2 + tmp7_reg_566);

assign oo_4_fu_395_p3 = ((sel_tmp6_reg_516[0:0] === 1'b1) ? i_op_assign_reg_120 : sel_tmp4_fu_388_p3);

assign oo_fu_287_p2 = ($signed(ap_phi_mux_i_op_assign_phi_fu_124_p4) + $signed(32'd1));

assign p_3_fu_333_p3 = ((sel_tmp6_fu_311_p2[0:0] === 1'b1) ? ap_phi_mux_i_op_assign_1_phi_fu_136_p4 : sel_tmp3_fu_325_p3);

assign p_fu_276_p2 = (ap_phi_mux_i_op_assign_1_phi_fu_136_p4 + 32'd1);

assign p_s_fu_374_p3 = ((tmp_10_fu_370_p2[0:0] === 1'b1) ? 32'd0 : oo_reg_504);

assign q_2_fu_349_p3 = ((sel_tmp6_fu_311_p2[0:0] === 1'b1) ? q_fu_265_p2 : sel_tmp7_fu_341_p3);

assign q_fu_265_p2 = (ap_phi_mux_i_op_assign_2_phi_fu_148_p4 + 32'd1);

assign ret_V_fu_236_p4 = {{inst3_V[79:67]}};

assign sel_tmp1_fu_299_p2 = (tmp_4_fu_260_p2 & tmp1_fu_293_p2);

assign sel_tmp2_fu_381_p3 = ((sel_tmp1_reg_510[0:0] === 1'b1) ? p_s_fu_374_p3 : i_op_assign_reg_120);

assign sel_tmp3_fu_325_p3 = ((tmp_4_fu_260_p2[0:0] === 1'b1) ? sel_tmp_fu_317_p3 : ap_phi_mux_i_op_assign_1_phi_fu_136_p4);

assign sel_tmp4_fu_388_p3 = ((tmp_4_reg_499[0:0] === 1'b1) ? sel_tmp2_fu_381_p3 : i_op_assign_reg_120);

assign sel_tmp5_fu_305_p2 = (tmp_8_fu_271_p2 ^ 1'd1);

assign sel_tmp6_fu_311_p2 = (tmp_4_fu_260_p2 & sel_tmp5_fu_305_p2);

assign sel_tmp7_fu_341_p3 = ((tmp_4_fu_260_p2[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_i_op_assign_2_phi_fu_148_p4);

assign sel_tmp_fu_317_p3 = ((sel_tmp1_fu_299_p2[0:0] === 1'b1) ? 32'd0 : p_fu_276_p2);

assign tmp1_fu_293_p2 = (tmp_8_fu_271_p2 & tmp_3_fu_282_p2);

assign tmp4_fu_416_p2 = (i_op_assign_2_reg_144_pp0_iter15_reg + tmp6_reg_556);

assign tmp5_fu_407_p2 = (tmp_7_reg_546 + i_op_assign_1_reg_132_pp0_iter7_reg);

assign tmp_10_fu_370_p2 = ((oo_reg_504 == tmp_6_reg_494) ? 1'b1 : 1'b0);

assign tmp_11_fu_425_p2 = ii_reg_156_pp0_iter23_reg << 32'd3;

assign tmp_1_fu_228_p1 = FILTER_S2_V_fu_190_p4;

assign tmp_2_fu_232_p1 = LAYER_IN_NUM_T_V_fu_200_p4;

assign tmp_3_fu_282_p2 = ((p_fu_276_p2 == tmp_1_reg_476) ? 1'b1 : 1'b0);

assign tmp_4_fu_260_p2 = ((ii_2_fu_254_p2 == tmp_5_reg_489) ? 1'b1 : 1'b0);

assign tmp_5_fu_246_p1 = ret_V_fu_236_p4;

assign tmp_6_fu_250_p1 = LAYER_OUT_NUM_T_V_fu_210_p4;

assign tmp_8_fu_271_p2 = ((q_fu_265_p2 == tmp_1_reg_476) ? 1'b1 : 1'b0);

assign tmp_9_fu_454_p1 = bus_w_idx_reg_571;

assign tmp_fu_220_p3 = inst3_V[32'd2];

assign weight_burst_buf2_V_address0 = tmp_9_fu_454_p1;

always @ (posedge ap_clk) begin
    tmp_1_reg_476[31:16] <= 16'b0000000000000000;
    tmp_2_reg_484[31:16] <= 16'b0000000000000000;
    tmp_5_reg_489[31:13] <= 19'b0000000000000000000;
    tmp_6_reg_494[31:16] <= 16'b0000000000000000;
end

endmodule //weight_load_conv_wei
