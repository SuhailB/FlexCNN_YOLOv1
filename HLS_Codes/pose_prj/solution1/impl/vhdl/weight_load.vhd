-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity weight_load is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    m_axi_global_weight_V_AWVALID : OUT STD_LOGIC;
    m_axi_global_weight_V_AWREADY : IN STD_LOGIC;
    m_axi_global_weight_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_global_weight_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_weight_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_global_weight_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_global_weight_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_weight_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_weight_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_weight_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_global_weight_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_weight_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_weight_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_weight_V_WVALID : OUT STD_LOGIC;
    m_axi_global_weight_V_WREADY : IN STD_LOGIC;
    m_axi_global_weight_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_global_weight_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_global_weight_V_WLAST : OUT STD_LOGIC;
    m_axi_global_weight_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_weight_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_weight_V_ARVALID : OUT STD_LOGIC;
    m_axi_global_weight_V_ARREADY : IN STD_LOGIC;
    m_axi_global_weight_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_global_weight_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_weight_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_global_weight_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_global_weight_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_weight_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_weight_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_weight_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_global_weight_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_weight_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_weight_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_weight_V_RVALID : IN STD_LOGIC;
    m_axi_global_weight_V_RREADY : OUT STD_LOGIC;
    m_axi_global_weight_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_global_weight_V_RLAST : IN STD_LOGIC;
    m_axi_global_weight_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_weight_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_weight_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_weight_V_BVALID : IN STD_LOGIC;
    m_axi_global_weight_V_BREADY : OUT STD_LOGIC;
    m_axi_global_weight_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_weight_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_weight_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    global_weight_V_offset_dout : IN STD_LOGIC_VECTOR (57 downto 0);
    global_weight_V_offset_empty_n : IN STD_LOGIC;
    global_weight_V_offset_read : OUT STD_LOGIC;
    global_bias_V_offset_dout : IN STD_LOGIC_VECTOR (57 downto 0);
    global_bias_V_offset_empty_n : IN STD_LOGIC;
    global_bias_V_offset_read : OUT STD_LOGIC;
    fifo_config_in_V_V_dout : IN STD_LOGIC_VECTOR (191 downto 0);
    fifo_config_in_V_V_empty_n : IN STD_LOGIC;
    fifo_config_in_V_V_read : OUT STD_LOGIC;
    fifo_conv_weight_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_conv_weight_V_V_full_n : IN STD_LOGIC;
    fifo_conv_weight_V_V_write : OUT STD_LOGIC;
    fifo_gamma_conv_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_gamma_conv_V_V_full_n : IN STD_LOGIC;
    fifo_gamma_conv_V_V_write : OUT STD_LOGIC;
    fifo_beta_conv_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_beta_conv_V_V_full_n : IN STD_LOGIC;
    fifo_beta_conv_V_V_write : OUT STD_LOGIC;
    fifo_config_out_V_V_din : OUT STD_LOGIC_VECTOR (191 downto 0);
    fifo_config_out_V_V_full_n : IN STD_LOGIC;
    fifo_config_out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of weight_load is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (100 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (100 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (100 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (100 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (100 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (100 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (100 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (100 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (100 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (100 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (100 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (100 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_5E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011110";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv19_3F : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000111111";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv26_1 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (100 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal global_weight_V_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal global_weight_V_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal exitcond2_i_i_reg_2018 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond1_i_i_reg_1929 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond3_i_i_reg_1959 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state97 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state97 : signal is "none";
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal exitcond4_i_i_reg_2153 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal exitcond5_i_i_reg_2112 : STD_LOGIC_VECTOR (0 downto 0);
    signal global_weight_V_offset_blk_n : STD_LOGIC;
    signal global_bias_V_offset_blk_n : STD_LOGIC;
    signal fifo_config_in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_phi_mux_done_i_i_phi_fu_431_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_layer_start_i_i_phi_fu_419_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal layer_start_i_i_reg_415 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_config_out_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal indvar1_i_i_reg_451 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar1_i_i_reg_451_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state36_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal indvar4_i_i_reg_463 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar4_i_i_reg_463_pp1_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state48_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state49_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state50_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal indvar_i_i_reg_486 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_i_i_reg_486_pp3_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state62_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state63_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state64_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal indvar8_i_i_reg_498 : STD_LOGIC_VECTOR (25 downto 0);
    signal indvar8_i_i_reg_498_pp4_iter1_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_block_state90_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state91_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state92_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal indvar6_i_i_reg_510 : STD_LOGIC_VECTOR (25 downto 0);
    signal indvar6_i_i_reg_510_pp5_iter1_reg : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_block_state104_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state105_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_state106_pp5_stage0_iter2 : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal global_weight_V_offs_reg_1660 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal global_bias_V_offset_1_reg_1666 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_V_4_reg_1672 : STD_LOGIC_VECTOR (191 downto 0);
    signal tmp_V_5_reg_1677 : STD_LOGIC_VECTOR (191 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal tmp_V_6_reg_1682 : STD_LOGIC_VECTOR (191 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal tmp_V_9_reg_1687 : STD_LOGIC_VECTOR (191 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal LAYER_BATCH_V_reg_1692 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_8_reg_1697 : STD_LOGIC_VECTOR (191 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal p_Val2_3_reg_1702 : STD_LOGIC_VECTOR (191 downto 0);
    signal ap_block_state15 : BOOLEAN;
    signal LAYER_IN_NUM_T_V_reg_1709 : STD_LOGIC_VECTOR (15 downto 0);
    signal LAYER_OUT_NUM_T_V_reg_1719 : STD_LOGIC_VECTOR (15 downto 0);
    signal LAYER_IN_H_T_V_reg_1728 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_W_T_V_reg_1733 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1738 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_reg_1744 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_1749 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_reg_1755 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1760 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_2_reg_1765 : STD_LOGIC_VECTOR (191 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal weight_offset2_2_reg_1770 : STD_LOGIC_VECTOR (31 downto 0);
    signal beta_depth_offset_reg_1776 : STD_LOGIC_VECTOR (31 downto 0);
    signal FILTER_S2_V_reg_1784 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_i_i_fu_718_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1609_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_i_i_reg_1797 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal LAYER_IN_NUM_HW_V_fu_725_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_NUM_HW_V_reg_1802 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal LAYER_OUT_NUM_HW_V_reg_1808 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_739_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_21_reg_1814 : STD_LOGIC_VECTOR (30 downto 0);
    signal beta_conv_offset_fu_755_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal beta_conv_offset_reg_1819 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_fu_743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_i_i_reg_1825 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_reg_1830 : STD_LOGIC_VECTOR (191 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal LAYER_IN_NUM_V_fu_763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_NUM_V_reg_1836 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_OUT_NUM_V_reg_1843 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_H_V_reg_1848 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_W_V_reg_1853 : STD_LOGIC_VECTOR (31 downto 0);
    signal bias_en_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bias_en_reg_1858 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_conv_en_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_conv_en_reg_1862 : STD_LOGIC_VECTOR (0 downto 0);
    signal beta_conv_offset_1_i_fu_832_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal beta_conv_offset_1_i_reg_1866 : STD_LOGIC_VECTOR (31 downto 0);
    signal gamma_conv_offset_1_s_fu_839_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal gamma_conv_offset_1_s_reg_1871 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_offset2_1_fu_851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_offset2_1_reg_1876 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_1_fu_864_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_1_reg_1881 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_fu_877_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_reg_1886 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_25_i_i_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal tmp_22_reg_1895 : STD_LOGIC_VECTOR (27 downto 0);
    signal global_bias_V_offset_3_fu_909_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal global_bias_V_offset_3_reg_1900 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal sum1_i_i_fu_912_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal sum1_i_i_reg_1905 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_34_add_i32_shr_i_reg_1910 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_sig_ioackin_m_axi_global_weight_V_ARREADY : STD_LOGIC;
    signal tmp_34_add_i32_shr_c_fu_955_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_add_i32_shr_c_reg_1923 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond1_i_i_fu_959_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_i_reg_1929_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next1_i_i_fu_964_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next1_i_i_reg_1933 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal global_bias_V_addr_r_reg_1938 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_24_reg_1943 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal sum3_i_i_fu_993_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal sum3_i_i_reg_1948 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal exitcond3_i_i_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_i_i_reg_1959_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next2_i_i_fu_1013_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next2_i_i_reg_1963 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal global_bias_V_addr_2_2_reg_1968 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_38_i_i_fu_1029_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_i_i_reg_1973 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal tmp_23_i_i_fu_1041_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal global_bias_offset_fu_1046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_bias_offset_reg_1983 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_fu_1057_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal sum9_i_i_fu_1084_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal sum9_i_i_reg_1996 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal tmp_40_add_i32_shr_i_reg_2001 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_40_add_i32_shr_c_fu_1127_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond2_i_i_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_i_reg_2018_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next_i_i_fu_1136_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_next_i_i_reg_2022 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal global_bias_V_addr_1_2_reg_2027 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_36_i_i_fu_1147_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal grp_fu_1024_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_i_i_reg_2038 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal grp_fu_1032_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_i_i_reg_2043 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_fu_1150_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_reg_2048 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal grp_fu_1615_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_i_i_reg_2053 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1154_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_i_i_reg_2058 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal global_weight_offset_fu_1158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal global_weight_offset_reg_2063 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal tmp_40_i_i_fu_1162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_i_i_fu_1167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum4_i_i_fu_1207_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal sum4_i_i_reg_2086 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal grp_fu_1621_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_add_i_i_reg_2091 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_add_i32_shr_i_fu_1223_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_59_add_i32_shr_i_reg_2102 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_69_i_i_fu_1232_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond5_i_i_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5_i_i_reg_2112_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next4_i_i_fu_1242_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal indvar_next4_i_i_reg_2116 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal global_bias_V_addr_4_1_reg_2121 : STD_LOGIC_VECTOR (511 downto 0);
    signal sum_i_i_fu_1260_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal sum_i_i_reg_2126 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_CS_fsm_state95 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state95 : signal is "none";
    signal grp_fu_1630_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_44_i_i_reg_2131 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_52_add_i32_shr_i_reg_2136 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state96 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state96 : signal is "none";
    signal tmp_64_i_i_fu_1299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4_i_i_fu_1303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_i_i_reg_2153_pp5_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_next3_i_i_fu_1308_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal indvar_next3_i_i_reg_2157 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal global_bias_V_addr_3_1_reg_2162 : STD_LOGIC_VECTOR (511 downto 0);
    signal in_num_iter_fu_1322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_num_iter_reg_2167 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state109 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state109 : signal is "none";
    signal grp_weight_load_bias_wri_fu_531_ap_ready : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_531_ap_done : STD_LOGIC;
    signal ap_predicate_op483_call_state109 : BOOLEAN;
    signal grp_weight_load_bias_wri_fu_542_ap_ready : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_542_ap_done : STD_LOGIC;
    signal ap_predicate_op484_call_state109 : BOOLEAN;
    signal ap_block_state109_on_subcall_done : BOOLEAN;
    signal in_h_iter_fu_1328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_h_iter_reg_2173 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_w_iter_fu_1333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_w_iter_reg_2179 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_num_iter_fu_1341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_num_iter_reg_2185 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_i_i_fu_1347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_i_i_reg_2191 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state110 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state110 : signal is "none";
    signal tmp_54_i_i_fu_1351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_i_i_reg_2198 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_i_i_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_i_i_reg_2204 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i_i_fu_1359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_i_i_reg_2210 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer_iter_fu_1363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer_iter_reg_2216 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_demorgan_i_s_fu_1369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_i_s_reg_2222 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_demorgan_i_fu_1375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_demorgan_i_reg_2228 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel1_i_i_fu_1445_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state111 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state111 : signal is "none";
    signal newSel4_i_i_fu_1468_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel7_i_i_fu_1491_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel10_i_i_fu_1514_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel12_i_i_fu_1529_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer_start_be_i_i_fu_1575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_be_i_i_fu_1603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state36 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state48 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state62 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state90 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state103 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state103 : signal is "none";
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state104 : STD_LOGIC;
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal weight_burst_buf2_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal weight_burst_buf2_V_ce0 : STD_LOGIC;
    signal weight_burst_buf2_V_we0 : STD_LOGIC;
    signal weight_burst_buf2_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal weight_burst_buf2_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal beta_conv_burst_buf_s_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal beta_conv_burst_buf_s_ce0 : STD_LOGIC;
    signal beta_conv_burst_buf_s_we0 : STD_LOGIC;
    signal beta_conv_burst_buf_s_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal beta_conv_burst_buf_s_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal gamma_conv_burst_buf_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal gamma_conv_burst_buf_ce0 : STD_LOGIC;
    signal gamma_conv_burst_buf_we0 : STD_LOGIC;
    signal gamma_conv_burst_buf_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal gamma_conv_burst_buf_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_weight_load_conv_wei_fu_522_ap_start : STD_LOGIC;
    signal grp_weight_load_conv_wei_fu_522_ap_done : STD_LOGIC;
    signal grp_weight_load_conv_wei_fu_522_ap_idle : STD_LOGIC;
    signal grp_weight_load_conv_wei_fu_522_ap_ready : STD_LOGIC;
    signal grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_ce0 : STD_LOGIC;
    signal grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_write : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_531_ap_start : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_531_ap_idle : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_ce0 : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_write : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_542_ap_start : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_542_ap_idle : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_ce0 : STD_LOGIC;
    signal grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_write : STD_LOGIC;
    signal op_assign_i_i_reg_355 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_i_i_reg_367 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_h_iter_i_i_reg_379 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_w_iter_i_i_reg_391 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer_iter_i_i_reg_403 : STD_LOGIC_VECTOR (31 downto 0);
    signal done_i_i_reg_427 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer_start_1_i_i_reg_438 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op170_read_state11 : BOOLEAN;
    signal ap_predicate_op171_write_state11 : BOOLEAN;
    signal ap_block_state11 : BOOLEAN;
    signal ap_phi_mux_indvar1_i_i_phi_fu_455_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_indvar4_i_i_phi_fu_467_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_i_i_reg_475 : STD_LOGIC_VECTOR (2 downto 0);
    signal exitcond_i_i_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_indvar_i_i_phi_fu_490_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_indvar8_i_i_phi_fu_502_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_phi_mux_indvar6_i_i_phi_fu_514_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_weight_load_conv_wei_fu_522_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state107 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state107 : signal is "none";
    signal ap_CS_fsm_state108 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state108 : signal is "none";
    signal grp_weight_load_bias_wri_fu_531_ap_start_reg : STD_LOGIC := '0';
    signal grp_weight_load_bias_wri_fu_542_ap_start_reg : STD_LOGIC := '0';
    signal indvar2_i_i_fu_970_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar5_i_i_fu_1019_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_i_i_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar3_i_i_fu_1142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar9_i_i_fu_1248_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar7_i_i_fu_1314_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum1_cast_i_i_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum3_cast_i_i_fu_998_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum9_cast_i_i_fu_1117_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum4_cast_i_i_fu_1213_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_cast_i_i_fu_1289_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_global_weight_V_ARREADY : STD_LOGIC := '0';
    signal ap_block_state12 : BOOLEAN;
    signal ap_block_state13 : BOOLEAN;
    signal ap_block_state14 : BOOLEAN;
    signal tmp_V_fu_188 : STD_LOGIC_VECTOR (191 downto 0);
    signal tmp_V_1_fu_192 : STD_LOGIC_VECTOR (191 downto 0);
    signal tmp_V_2_fu_196 : STD_LOGIC_VECTOR (191 downto 0);
    signal tmp_V_3_fu_200 : STD_LOGIC_VECTOR (191 downto 0);
    signal FILTER_S1_V_fu_698_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_743_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal factor_i_i_fu_748_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal gamma_conv_offset_1_fu_813_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal norm_depth_en_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0575_0_i_i_fu_817_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal gamma_conv_offset_fu_809_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_i_fu_824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_offset2_fu_847_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_1_fu_857_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal rhs_V_1_fu_861_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_fu_870_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal rhs_V_fu_874_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_24_i_i_fu_883_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal global_bias_offset_1_fu_891_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_cast_i_i_fu_906_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_29_i_i_fu_918_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_34_cast_i_i_fu_925_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_34_add_i_i_i_fu_929_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal global_bias_offset_2_fu_975_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_cast_i_i_fu_990_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal grp_fu_1032_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_i_i_fu_1038_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_23_fu_1068_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal global_bias_V_offset_2_fu_1081_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_31_cast_i_i_fu_1077_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_32_i_i_fu_1090_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_40_cast_i_i_fu_1097_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_40_add_i_i_fu_1101_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal p_shl_i_i_fu_1172_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl1_i_i_fu_1183_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_573_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal global_weight_V_offs_2_fu_1204_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_49_cast_i_i_fu_1200_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal global_weight_V_offs_1_fu_1257_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_42_cast_i_i_fu_1253_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_46_i_i_fu_1266_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_add_i_i_fu_1273_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_i_i_fu_1319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_i_i_fu_1338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_i_i_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_i_i_fu_1395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_i_fu_1405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_i_i_fu_1410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_i_i_fu_1400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_i_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_i_i_fu_1426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_i_i_fu_1421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond2_i_i_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_i_i_fu_1432_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel2_i_i_fu_1453_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel3_i_i_fu_1460_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel5_i_i_fu_1476_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel6_i_i_fu_1483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel8_i_i_fu_1499_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel9_i_i_fu_1506_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_i_i_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel11_i_i_fu_1522_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_not_i_i_fu_1543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_not_i_i_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp_i_i_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp1_i_i_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_i_i_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_i_i_fu_1537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_i_i_fu_1569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_not_i_i_fu_1581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp2_i_i_fu_1586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp9_i_i_fu_1597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp7_i_i_fu_1591_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1609_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1609_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1615_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1615_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1621_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1621_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1621_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1621_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1630_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1630_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (100 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal grp_fu_1032_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1621_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1621_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1630_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_1630_p10 : STD_LOGIC_VECTOR (29 downto 0);

    component weight_load_conv_wei IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        weight_burst_buf2_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        weight_burst_buf2_V_ce0 : OUT STD_LOGIC;
        weight_burst_buf2_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        fifo_conv_weight_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_conv_weight_V_V_full_n : IN STD_LOGIC;
        fifo_conv_weight_V_V_write : OUT STD_LOGIC;
        inst2_V : IN STD_LOGIC_VECTOR (191 downto 0);
        inst3_V : IN STD_LOGIC_VECTOR (191 downto 0) );
    end component;


    component weight_load_bias_wri IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bias_burst_buf_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        bias_burst_buf_V_ce0 : OUT STD_LOGIC;
        bias_burst_buf_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        fifo_bias_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_bias_V_V_full_n : IN STD_LOGIC;
        fifo_bias_V_V_write : OUT STD_LOGIC;
        inst1_V : IN STD_LOGIC_VECTOR (191 downto 0);
        inst3_V : IN STD_LOGIC_VECTOR (191 downto 0);
        in_num_iter : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_kernel_mul_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_kernel_mul_32g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_kernel_mul_muocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_kernel_ama_adpcA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_kernel_mul_muqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component weight_load_weighlbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (511 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component weight_load_beta_mb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (511 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;



begin
    weight_burst_buf2_V_U : component weight_load_weighlbW
    generic map (
        DataWidth => 512,
        AddressRange => 2304,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_burst_buf2_V_address0,
        ce0 => weight_burst_buf2_V_ce0,
        we0 => weight_burst_buf2_V_we0,
        d0 => weight_burst_buf2_V_d0,
        q0 => weight_burst_buf2_V_q0);

    beta_conv_burst_buf_s_U : component weight_load_beta_mb6
    generic map (
        DataWidth => 512,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => beta_conv_burst_buf_s_address0,
        ce0 => beta_conv_burst_buf_s_ce0,
        we0 => beta_conv_burst_buf_s_we0,
        d0 => beta_conv_burst_buf_s_d0,
        q0 => beta_conv_burst_buf_s_q0);

    gamma_conv_burst_buf_U : component weight_load_beta_mb6
    generic map (
        DataWidth => 512,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gamma_conv_burst_buf_address0,
        ce0 => gamma_conv_burst_buf_ce0,
        we0 => gamma_conv_burst_buf_we0,
        d0 => gamma_conv_burst_buf_d0,
        q0 => gamma_conv_burst_buf_q0);

    grp_weight_load_conv_wei_fu_522 : component weight_load_conv_wei
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_weight_load_conv_wei_fu_522_ap_start,
        ap_done => grp_weight_load_conv_wei_fu_522_ap_done,
        ap_idle => grp_weight_load_conv_wei_fu_522_ap_idle,
        ap_ready => grp_weight_load_conv_wei_fu_522_ap_ready,
        weight_burst_buf2_V_address0 => grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_address0,
        weight_burst_buf2_V_ce0 => grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_ce0,
        weight_burst_buf2_V_q0 => weight_burst_buf2_V_q0,
        fifo_conv_weight_V_V_din => grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_din,
        fifo_conv_weight_V_V_full_n => fifo_conv_weight_V_V_full_n,
        fifo_conv_weight_V_V_write => grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_write,
        inst2_V => p_Val2_2_reg_1765,
        inst3_V => p_Val2_3_reg_1702);

    grp_weight_load_bias_wri_fu_531 : component weight_load_bias_wri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_weight_load_bias_wri_fu_531_ap_start,
        ap_done => grp_weight_load_bias_wri_fu_531_ap_done,
        ap_idle => grp_weight_load_bias_wri_fu_531_ap_idle,
        ap_ready => grp_weight_load_bias_wri_fu_531_ap_ready,
        bias_burst_buf_V_address0 => grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_address0,
        bias_burst_buf_V_ce0 => grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_ce0,
        bias_burst_buf_V_q0 => beta_conv_burst_buf_s_q0,
        fifo_bias_V_V_din => grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_din,
        fifo_bias_V_V_full_n => fifo_beta_conv_V_V_full_n,
        fifo_bias_V_V_write => grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_write,
        inst1_V => p_Val2_1_reg_1830,
        inst3_V => p_Val2_3_reg_1702,
        in_num_iter => op_assign_i_i_reg_355);

    grp_weight_load_bias_wri_fu_542 : component weight_load_bias_wri
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_weight_load_bias_wri_fu_542_ap_start,
        ap_done => grp_weight_load_bias_wri_fu_542_ap_done,
        ap_idle => grp_weight_load_bias_wri_fu_542_ap_idle,
        ap_ready => grp_weight_load_bias_wri_fu_542_ap_ready,
        bias_burst_buf_V_address0 => grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_address0,
        bias_burst_buf_V_ce0 => grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_ce0,
        bias_burst_buf_V_q0 => gamma_conv_burst_buf_q0,
        fifo_bias_V_V_din => grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_din,
        fifo_bias_V_V_full_n => fifo_gamma_conv_V_V_full_n,
        fifo_bias_V_V_write => grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_write,
        inst1_V => p_Val2_1_reg_1830,
        inst3_V => p_Val2_3_reg_1702,
        in_num_iter => op_assign_i_i_reg_355);

    top_kernel_mul_32bkb_U74 : component top_kernel_mul_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_743_p0,
        din1 => tmp3_i_i_reg_1797,
        ce => ap_const_logic_1,
        dout => grp_fu_743_p2);

    top_kernel_mul_32bkb_U75 : component top_kernel_mul_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => i_op_assign_i_i_reg_367,
        din1 => LAYER_IN_NUM_HW_V_reg_1802,
        ce => ap_const_logic_1,
        dout => grp_fu_1024_p2);

    top_kernel_mul_32g8j_U76 : component top_kernel_mul_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => op_assign_i_i_reg_355,
        din1 => grp_fu_1032_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1032_p2);

    top_kernel_mul_32bkb_U77 : component top_kernel_mul_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp4_i_i_reg_2053,
        din1 => tmp_i_i_reg_2048,
        ce => ap_const_logic_1,
        dout => grp_fu_1154_p2);

    top_kernel_mul_muocq_U78 : component top_kernel_mul_muocq
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1609_p0,
        din1 => grp_fu_1609_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1609_p2);

    top_kernel_mul_muocq_U79 : component top_kernel_mul_muocq
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1615_p0,
        din1 => grp_fu_1615_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1615_p2);

    top_kernel_ama_adpcA_U80 : component top_kernel_ama_adpcA
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 18,
        din1_WIDTH => 21,
        din2_WIDTH => 16,
        din3_WIDTH => 7,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1621_p0,
        din1 => grp_fu_1621_p1,
        din2 => grp_fu_1621_p2,
        din3 => grp_fu_1621_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_1621_p4);

    top_kernel_mul_muqcK_U81 : component top_kernel_mul_muqcK
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1630_p0,
        din1 => grp_fu_1630_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1630_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (ap_phi_mux_done_i_i_phi_fu_431_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state36) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state36)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state36);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state48) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state48)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state48);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state62) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state62)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state62);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state90) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state90)) then 
                        ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state90);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                    ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state104) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state104)) then 
                        ap_enable_reg_pp5_iter1 <= (ap_const_logic_1 xor ap_condition_pp5_exit_iter0_state104);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
                    ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_global_weight_V_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_global_weight_V_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state83)) or ((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state97)) or ((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41)) or ((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55)))) then 
                    ap_reg_ioackin_m_axi_global_weight_V_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state83) and (m_axi_global_weight_V_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state97) and (m_axi_global_weight_V_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state41) and (m_axi_global_weight_V_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state29) and (m_axi_global_weight_V_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state55) and (m_axi_global_weight_V_ARREADY = ap_const_logic_1)))) then 
                    ap_reg_ioackin_m_axi_global_weight_V_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_weight_load_bias_wri_fu_531_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_weight_load_bias_wri_fu_531_ap_start_reg <= ap_const_logic_0;
            else
                if ((((bias_en_reg_1858 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state108) and (grp_weight_load_conv_wei_fu_522_ap_done = ap_const_logic_1)) or ((norm_conv_en_reg_1862 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state108) and (bias_en_reg_1858 = ap_const_lv1_0) and (grp_weight_load_conv_wei_fu_522_ap_done = ap_const_logic_1)))) then 
                    grp_weight_load_bias_wri_fu_531_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_weight_load_bias_wri_fu_531_ap_ready = ap_const_logic_1)) then 
                    grp_weight_load_bias_wri_fu_531_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_weight_load_bias_wri_fu_542_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_weight_load_bias_wri_fu_542_ap_start_reg <= ap_const_logic_0;
            else
                if ((((bias_en_reg_1858 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state108) and (grp_weight_load_conv_wei_fu_522_ap_done = ap_const_logic_1)) or ((norm_conv_en_reg_1862 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state108) and (bias_en_reg_1858 = ap_const_lv1_0) and (grp_weight_load_conv_wei_fu_522_ap_done = ap_const_logic_1)))) then 
                    grp_weight_load_bias_wri_fu_542_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_weight_load_bias_wri_fu_542_ap_ready = ap_const_logic_1)) then 
                    grp_weight_load_bias_wri_fu_542_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_weight_load_conv_wei_fu_522_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_weight_load_conv_wei_fu_522_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state107)) then 
                    grp_weight_load_conv_wei_fu_522_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_weight_load_conv_wei_fu_522_ap_ready = ap_const_logic_1)) then 
                    grp_weight_load_conv_wei_fu_522_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    done_i_i_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
                done_i_i_reg_427 <= done_be_i_i_fu_1603_p2;
            elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                done_i_i_reg_427 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    i_i_i_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) and (exitcond_i_i_fu_1051_p2 = ap_const_lv1_0))) then 
                i_i_i_reg_475 <= i_fu_1057_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (tmp_23_i_i_fu_1041_p2 = ap_const_lv1_0))) then 
                i_i_i_reg_475 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_op_assign_i_i_reg_367_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
                i_op_assign_i_i_reg_367 <= newSel4_i_i_fu_1468_p3;
            elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_op_assign_i_i_reg_367 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    in_h_iter_i_i_reg_379_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
                in_h_iter_i_i_reg_379 <= newSel7_i_i_fu_1491_p3;
            elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                in_h_iter_i_i_reg_379 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    in_w_iter_i_i_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
                in_w_iter_i_i_reg_391 <= newSel10_i_i_fu_1514_p3;
            elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                in_w_iter_i_i_reg_391 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar1_i_i_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_i_i_reg_1929 = ap_const_lv1_0))) then 
                indvar1_i_i_reg_451 <= indvar_next1_i_i_reg_1933;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                indvar1_i_i_reg_451 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    indvar4_i_i_reg_463_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond3_i_i_reg_1959 = ap_const_lv1_0))) then 
                indvar4_i_i_reg_463 <= indvar_next2_i_i_reg_1963;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                indvar4_i_i_reg_463 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    indvar6_i_i_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond4_i_i_reg_2153 = ap_const_lv1_0))) then 
                indvar6_i_i_reg_510 <= indvar_next3_i_i_reg_2157;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state103)) then 
                indvar6_i_i_reg_510 <= ap_const_lv26_0;
            end if; 
        end if;
    end process;

    indvar8_i_i_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_i_i_reg_2112 = ap_const_lv1_0))) then 
                indvar8_i_i_reg_498 <= indvar_next4_i_i_reg_2116;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state89)) then 
                indvar8_i_i_reg_498 <= ap_const_lv26_0;
            end if; 
        end if;
    end process;

    indvar_i_i_reg_486_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond2_i_i_reg_2018 = ap_const_lv1_0))) then 
                indvar_i_i_reg_486 <= indvar_next_i_i_reg_2022;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
                indvar_i_i_reg_486 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    layer_iter_i_i_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
                layer_iter_i_i_reg_403 <= newSel12_i_i_fu_1529_p3;
            elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                layer_iter_i_i_reg_403 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    layer_start_1_i_i_reg_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state11) and (ap_phi_mux_layer_start_i_i_phi_fu_419_p4 = ap_const_lv1_0) and (done_i_i_reg_427 = ap_const_lv1_0))) then 
                layer_start_1_i_i_reg_438 <= layer_start_i_i_reg_415;
            elsif ((not((((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_out_V_V_full_n = ap_const_logic_0)) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_in_V_V_empty_n = ap_const_logic_0)))) and (layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                layer_start_1_i_i_reg_438 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    layer_start_i_i_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
                layer_start_i_i_reg_415 <= layer_start_be_i_i_fu_1575_p2;
            elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                layer_start_i_i_reg_415 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    op_assign_i_i_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state111)) then 
                op_assign_i_i_reg_355 <= newSel1_i_i_fu_1445_p3;
            elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                op_assign_i_i_reg_355 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                FILTER_S2_V_reg_1784 <= tmp_V_1_fu_192(159 downto 144);
                beta_depth_offset_reg_1776 <= tmp_V_1_fu_192(95 downto 64);
                p_Val2_2_reg_1765 <= tmp_V_1_fu_192;
                weight_offset2_2_reg_1770 <= tmp_V_1_fu_192(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                LAYER_BATCH_V_reg_1692 <= fifo_config_in_V_V_dout(191 downto 160);
                tmp_V_9_reg_1687 <= fifo_config_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_out_V_V_full_n = ap_const_logic_0)) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_in_V_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                LAYER_IN_H_T_V_reg_1728 <= tmp_V_fu_188(127 downto 96);
                LAYER_IN_NUM_T_V_reg_1709 <= tmp_V_fu_188(79 downto 64);
                LAYER_IN_W_T_V_reg_1733 <= tmp_V_fu_188(159 downto 128);
                LAYER_OUT_NUM_T_V_reg_1719 <= tmp_V_fu_188(95 downto 80);
                p_Val2_3_reg_1702 <= tmp_V_fu_188;
                tmp_17_reg_1744 <= tmp_V_fu_188(7 downto 7);
                tmp_18_reg_1749 <= tmp_V_fu_188(1 downto 1);
                tmp_19_reg_1755 <= tmp_V_fu_188(12 downto 12);
                tmp_20_reg_1760 <= tmp_V_fu_188(10 downto 10);
                tmp_reg_1738 <= tmp_V_fu_188(2 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                LAYER_IN_H_V_reg_1848 <= tmp_V_2_fu_196(95 downto 64);
                LAYER_IN_NUM_V_reg_1836 <= LAYER_IN_NUM_V_fu_763_p1;
                LAYER_IN_W_V_reg_1853 <= tmp_V_2_fu_196(127 downto 96);
                LAYER_OUT_NUM_V_reg_1843 <= tmp_V_2_fu_196(63 downto 32);
                beta_conv_offset_1_i_reg_1866 <= beta_conv_offset_1_i_fu_832_p3;
                bias_en_reg_1858 <= bias_en_fu_797_p2;
                gamma_conv_offset_1_s_reg_1871 <= gamma_conv_offset_1_s_fu_839_p3;
                norm_conv_en_reg_1862 <= norm_conv_en_fu_805_p2;
                p_Val2_1_reg_1830 <= tmp_V_2_fu_196;
                weight_offset2_1_reg_1876 <= weight_offset2_1_fu_851_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                LAYER_IN_NUM_HW_V_reg_1802 <= LAYER_IN_NUM_HW_V_fu_725_p1;
                LAYER_OUT_NUM_HW_V_reg_1808 <= tmp_V_3_fu_200(63 downto 32);
                tmp_21_reg_1814 <= tmp_21_fu_739_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                beta_conv_offset_reg_1819 <= beta_conv_offset_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond1_i_i_reg_1929 <= exitcond1_i_i_fu_959_p2;
                exitcond1_i_i_reg_1929_pp0_iter1_reg <= exitcond1_i_i_reg_1929;
                indvar1_i_i_reg_451_pp0_iter1_reg <= indvar1_i_i_reg_451;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                exitcond2_i_i_reg_2018 <= exitcond2_i_i_fu_1131_p2;
                exitcond2_i_i_reg_2018_pp3_iter1_reg <= exitcond2_i_i_reg_2018;
                indvar_i_i_reg_486_pp3_iter1_reg <= indvar_i_i_reg_486;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond3_i_i_reg_1959 <= exitcond3_i_i_fu_1008_p2;
                exitcond3_i_i_reg_1959_pp1_iter1_reg <= exitcond3_i_i_reg_1959;
                indvar4_i_i_reg_463_pp1_iter1_reg <= indvar4_i_i_reg_463;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                exitcond4_i_i_reg_2153 <= exitcond4_i_i_fu_1303_p2;
                exitcond4_i_i_reg_2153_pp5_iter1_reg <= exitcond4_i_i_reg_2153;
                indvar6_i_i_reg_510_pp5_iter1_reg <= indvar6_i_i_reg_510;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                exitcond5_i_i_reg_2112 <= exitcond5_i_i_fu_1237_p2;
                exitcond5_i_i_reg_2112_pp4_iter1_reg <= exitcond5_i_i_reg_2112;
                indvar8_i_i_reg_498_pp4_iter1_reg <= indvar8_i_i_reg_498;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond2_i_i_reg_2018 = ap_const_lv1_0))) then
                global_bias_V_addr_1_2_reg_2027 <= m_axi_global_weight_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond3_i_i_reg_1959 = ap_const_lv1_0))) then
                global_bias_V_addr_2_2_reg_1968 <= m_axi_global_weight_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond4_i_i_reg_2153 = ap_const_lv1_0))) then
                global_bias_V_addr_3_1_reg_2162 <= m_axi_global_weight_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_i_i_reg_2112 = ap_const_lv1_0))) then
                global_bias_V_addr_4_1_reg_2121 <= m_axi_global_weight_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_i_i_reg_1929 = ap_const_lv1_0))) then
                global_bias_V_addr_r_reg_1938 <= m_axi_global_weight_V_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0) or (global_bias_V_offset_empty_n = ap_const_logic_0) or (global_weight_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                global_bias_V_offset_1_reg_1666 <= global_bias_V_offset_dout;
                global_weight_V_offs_reg_1660 <= global_weight_V_offset_dout;
                tmp_V_4_reg_1672 <= fifo_config_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                    global_bias_V_offset_3_reg_1900(57 downto 0) <= global_bias_V_offset_3_fu_909_p1(57 downto 0);
                sum1_i_i_reg_1905 <= sum1_i_i_fu_912_p2;
                tmp_34_add_i32_shr_i_reg_1910 <= tmp_34_add_i_i_i_fu_929_p2(18 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (tmp_23_i_i_fu_1041_p2 = ap_const_lv1_0))) then
                global_bias_offset_reg_1983 <= global_bias_offset_fu_1046_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                global_weight_offset_reg_2063 <= global_weight_offset_fu_1158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state109_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state109))) then
                in_h_iter_reg_2173 <= in_h_iter_fu_1328_p2;
                in_num_iter_reg_2167 <= in_num_iter_fu_1322_p2;
                in_w_iter_reg_2179 <= in_w_iter_fu_1333_p2;
                out_num_iter_reg_2185 <= out_num_iter_fu_1341_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                indvar_next1_i_i_reg_1933 <= indvar_next1_i_i_fu_964_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                indvar_next2_i_i_reg_1963 <= indvar_next2_i_i_fu_1013_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                indvar_next3_i_i_reg_2157 <= indvar_next3_i_i_fu_1308_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                indvar_next4_i_i_reg_2116 <= indvar_next4_i_i_fu_1242_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                indvar_next_i_i_reg_2022 <= indvar_next_i_i_fu_1136_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state110)) then
                layer_iter_reg_2216 <= layer_iter_fu_1363_p2;
                sel_tmp13_demorgan_i_reg_2228 <= sel_tmp13_demorgan_i_fu_1375_p2;
                sel_tmp6_demorgan_i_s_reg_2222 <= sel_tmp6_demorgan_i_s_fu_1369_p2;
                tmp_53_i_i_reg_2191 <= tmp_53_i_i_fu_1347_p2;
                tmp_54_i_i_reg_2198 <= tmp_54_i_i_fu_1351_p2;
                tmp_55_i_i_reg_2204 <= tmp_55_i_i_fu_1355_p2;
                tmp_57_i_i_reg_2210 <= tmp_57_i_i_fu_1359_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_reg_1749 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                p_1_i_i_reg_1825 <= grp_fu_743_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((norm_conv_en_fu_805_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26) and (bias_en_fu_797_p2 = ap_const_lv1_0))) then
                ret_V_1_reg_1881 <= ret_V_1_fu_864_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bias_en_fu_797_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                ret_V_reg_1886 <= ret_V_fu_877_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                sum3_i_i_reg_1948 <= sum3_i_i_fu_993_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state82)) then
                sum4_i_i_reg_2086 <= sum4_i_i_fu_1207_p2;
                tmp_59_add_i_i_reg_2091 <= grp_fu_1621_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                sum9_i_i_reg_1996 <= sum9_i_i_fu_1084_p2;
                tmp_40_add_i32_shr_i_reg_2001 <= tmp_40_add_i_i_fu_1101_p2(18 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state95)) then
                sum_i_i_reg_2126 <= sum_i_i_fu_1260_p2;
                tmp_44_i_i_reg_2131 <= grp_fu_1630_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                tmp2_i_i_reg_2058 <= grp_fu_1154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_18_reg_1749 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                tmp3_i_i_reg_1797 <= grp_fu_1609_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                tmp4_i_i_reg_2053 <= grp_fu_1615_p2;
                tmp_i_i_reg_2048 <= tmp_i_i_fu_1150_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (tmp_25_i_i_fu_886_p2 = ap_const_lv1_0))) then
                tmp_22_reg_1895 <= global_bias_offset_1_fu_891_p2(31 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                tmp_24_reg_1943 <= global_bias_offset_2_fu_975_p2(31 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    tmp_34_add_i32_shr_c_reg_1923(12 downto 0) <= tmp_34_add_i32_shr_c_fu_955_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                tmp_37_i_i_reg_2038 <= grp_fu_1024_p2;
                tmp_39_i_i_reg_2043 <= grp_fu_1032_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_1738 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    tmp_38_i_i_reg_1973(15 downto 0) <= tmp_38_i_i_fu_1029_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state96)) then
                tmp_52_add_i32_shr_i_reg_2136 <= tmp_52_add_i_i_fu_1273_p2(31 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                tmp_59_add_i32_shr_i_reg_2102 <= tmp_59_add_i_i_reg_2091(31 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then
                tmp_V_1_fu_192 <= fifo_config_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then
                tmp_V_2_fu_196 <= fifo_config_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (done_i_i_reg_427 = ap_const_lv1_0)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0) or (global_bias_V_offset_empty_n = ap_const_logic_0) or (global_weight_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then
                tmp_V_3_fu_200 <= fifo_config_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_V_5_reg_1677 <= fifo_config_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_V_6_reg_1682 <= fifo_config_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                tmp_V_8_reg_1697 <= fifo_config_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then
                tmp_V_fu_188 <= fifo_config_in_V_V_dout;
            end if;
        end if;
    end process;
    global_bias_V_offset_3_reg_1900(58) <= '0';
    tmp_34_add_i32_shr_c_reg_1923(31 downto 13) <= "0000000000000000000";
    tmp_38_i_i_reg_1973(31 downto 16) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, global_weight_V_offset_empty_n, global_bias_V_offset_empty_n, fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n, ap_CS_fsm_state55, ap_enable_reg_pp3_iter1, ap_CS_fsm_state29, ap_enable_reg_pp0_iter1, ap_CS_fsm_state41, ap_enable_reg_pp1_iter1, ap_CS_fsm_state97, ap_enable_reg_pp5_iter1, ap_CS_fsm_state83, ap_enable_reg_pp4_iter1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_phi_mux_done_i_i_phi_fu_431_p4, ap_phi_mux_layer_start_i_i_phi_fu_419_p4, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, layer_start_i_i_reg_415, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, tmp_reg_1738, ap_CS_fsm_state26, bias_en_fu_797_p2, norm_conv_en_fu_805_p2, tmp_25_i_i_fu_886_p2, ap_CS_fsm_state27, ap_sig_ioackin_m_axi_global_weight_V_ARREADY, exitcond1_i_i_fu_959_p2, ap_enable_reg_pp0_iter0, exitcond3_i_i_fu_1008_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state51, tmp_23_i_i_fu_1041_p2, ap_CS_fsm_state52, ap_CS_fsm_state53, exitcond2_i_i_fu_1131_p2, ap_enable_reg_pp3_iter0, ap_CS_fsm_state80, tmp_40_i_i_fu_1162_p2, tmp_47_i_i_fu_1167_p2, exitcond5_i_i_fu_1237_p2, ap_enable_reg_pp4_iter0, exitcond4_i_i_fu_1303_p2, ap_enable_reg_pp5_iter0, ap_CS_fsm_state109, ap_block_state109_on_subcall_done, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter2, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter2, ap_block_pp5_stage0_subdone, ap_enable_reg_pp5_iter2, grp_weight_load_conv_wei_fu_522_ap_done, done_i_i_reg_427, ap_predicate_op170_read_state11, ap_predicate_op171_write_state11, exitcond_i_i_fu_1051_p2, ap_CS_fsm_state108)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0) or (global_bias_V_offset_empty_n = ap_const_logic_0) or (global_weight_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                if (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if ((not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (ap_phi_mux_done_i_i_phi_fu_431_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state11) and (ap_phi_mux_layer_start_i_i_phi_fu_419_p4 = ap_const_lv1_0) and (done_i_i_reg_427 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif ((not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (done_i_i_reg_427 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if ((not((((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_out_V_V_full_n = ap_const_logic_0)) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_in_V_V_empty_n = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (norm_conv_en_fu_805_p2 = ap_const_lv1_0) and (bias_en_fu_797_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                elsif (((norm_conv_en_fu_805_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26) and (bias_en_fu_797_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state27 => 
                if (((tmp_25_i_i_fu_886_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond1_i_i_fu_959_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond1_i_i_fu_959_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond3_i_i_fu_1008_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond3_i_i_fu_1008_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state51 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state51) and (tmp_reg_1738 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state107;
                else
                    ap_NS_fsm <= ap_ST_fsm_state66;
                end if;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (tmp_23_i_i_fu_1041_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state53 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state53) and (exitcond_i_i_fu_1051_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (exitcond2_i_i_fu_1131_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (exitcond2_i_i_fu_1131_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state80) and (tmp_47_i_i_fu_1167_p2 = ap_const_lv1_0) and (tmp_40_i_i_fu_1162_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state93;
                elsif (((tmp_47_i_i_fu_1167_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state80) and (tmp_40_i_i_fu_1162_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state81;
                else
                    ap_NS_fsm <= ap_ST_fsm_state94;
                end if;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state83))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((exitcond5_i_i_fu_1237_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) and not(((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((((exitcond5_i_i_fu_1237_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state93;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state97))) then
                    ap_NS_fsm <= ap_ST_fsm_state98;
                else
                    ap_NS_fsm <= ap_ST_fsm_state97;
                end if;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_pp5_stage0 => 
                if ((not(((exitcond4_i_i_fu_1303_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) and not(((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif ((((exitcond4_i_i_fu_1303_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state107;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state108) and (grp_weight_load_conv_wei_fu_522_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state109;
                else
                    ap_NS_fsm <= ap_ST_fsm_state108;
                end if;
            when ap_ST_fsm_state109 => 
                if (((ap_const_boolean_0 = ap_block_state109_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state109))) then
                    ap_NS_fsm <= ap_ST_fsm_state110;
                else
                    ap_NS_fsm <= ap_ST_fsm_state109;
                end if;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    FILTER_S1_V_fu_698_p4 <= tmp_V_1_fu_192(143 downto 128);
    LAYER_IN_NUM_HW_V_fu_725_p1 <= tmp_V_3_fu_200(32 - 1 downto 0);
    LAYER_IN_NUM_V_fu_763_p1 <= tmp_V_2_fu_196(32 - 1 downto 0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(35);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(45);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(57);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(83);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(95);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state103 <= ap_CS_fsm(94);
    ap_CS_fsm_state107 <= ap_CS_fsm(96);
    ap_CS_fsm_state108 <= ap_CS_fsm(97);
    ap_CS_fsm_state109 <= ap_CS_fsm(98);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state110 <= ap_CS_fsm(99);
    ap_CS_fsm_state111 <= ap_CS_fsm(100);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state39 <= ap_CS_fsm(36);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(37);
    ap_CS_fsm_state41 <= ap_CS_fsm(38);
    ap_CS_fsm_state47 <= ap_CS_fsm(44);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state51 <= ap_CS_fsm(46);
    ap_CS_fsm_state52 <= ap_CS_fsm(47);
    ap_CS_fsm_state53 <= ap_CS_fsm(48);
    ap_CS_fsm_state54 <= ap_CS_fsm(49);
    ap_CS_fsm_state55 <= ap_CS_fsm(50);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state61 <= ap_CS_fsm(56);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(63);
    ap_CS_fsm_state71 <= ap_CS_fsm(64);
    ap_CS_fsm_state72 <= ap_CS_fsm(65);
    ap_CS_fsm_state73 <= ap_CS_fsm(66);
    ap_CS_fsm_state79 <= ap_CS_fsm(72);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(73);
    ap_CS_fsm_state82 <= ap_CS_fsm(75);
    ap_CS_fsm_state83 <= ap_CS_fsm(76);
    ap_CS_fsm_state89 <= ap_CS_fsm(82);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state95 <= ap_CS_fsm(86);
    ap_CS_fsm_state96 <= ap_CS_fsm(87);
    ap_CS_fsm_state97 <= ap_CS_fsm(88);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp0_iter1, exitcond1_i_i_reg_1929)
    begin
                ap_block_pp0_stage0_11001 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond1_i_i_reg_1929 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp0_iter1, exitcond1_i_i_reg_1929)
    begin
                ap_block_pp0_stage0_subdone <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond1_i_i_reg_1929 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp1_iter1, exitcond3_i_i_reg_1959)
    begin
                ap_block_pp1_stage0_11001 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond3_i_i_reg_1959 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp1_iter1, exitcond3_i_i_reg_1959)
    begin
                ap_block_pp1_stage0_subdone <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (exitcond3_i_i_reg_1959 = ap_const_lv1_0));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_11001_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp3_iter1, exitcond2_i_i_reg_2018)
    begin
                ap_block_pp3_stage0_11001 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond2_i_i_reg_2018 = ap_const_lv1_0));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp3_iter1, exitcond2_i_i_reg_2018)
    begin
                ap_block_pp3_stage0_subdone <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (exitcond2_i_i_reg_2018 = ap_const_lv1_0));
    end process;

        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp4_stage0_11001_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp4_iter1, exitcond5_i_i_reg_2112)
    begin
                ap_block_pp4_stage0_11001 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (exitcond5_i_i_reg_2112 = ap_const_lv1_0));
    end process;


    ap_block_pp4_stage0_subdone_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp4_iter1, exitcond5_i_i_reg_2112)
    begin
                ap_block_pp4_stage0_subdone <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (exitcond5_i_i_reg_2112 = ap_const_lv1_0));
    end process;

        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp5_stage0_11001_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp5_iter1, exitcond4_i_i_reg_2153)
    begin
                ap_block_pp5_stage0_11001 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (exitcond4_i_i_reg_2153 = ap_const_lv1_0));
    end process;


    ap_block_pp5_stage0_subdone_assign_proc : process(m_axi_global_weight_V_RVALID, ap_enable_reg_pp5_iter1, exitcond4_i_i_reg_2153)
    begin
                ap_block_pp5_stage0_subdone <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (exitcond4_i_i_reg_2153 = ap_const_lv1_0));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, global_weight_V_offset_empty_n, global_bias_V_offset_empty_n, fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
                ap_block_state1 <= ((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0) or (global_bias_V_offset_empty_n = ap_const_logic_0) or (global_weight_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state104_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state105_pp5_stage0_iter1_assign_proc : process(m_axi_global_weight_V_RVALID, exitcond4_i_i_reg_2153)
    begin
                ap_block_state105_pp5_stage0_iter1 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (exitcond4_i_i_reg_2153 = ap_const_lv1_0));
    end process;

        ap_block_state106_pp5_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state109_on_subcall_done_assign_proc : process(bias_en_reg_1858, grp_weight_load_bias_wri_fu_531_ap_done, ap_predicate_op483_call_state109, grp_weight_load_bias_wri_fu_542_ap_done, ap_predicate_op484_call_state109)
    begin
                ap_block_state109_on_subcall_done <= (((bias_en_reg_1858 = ap_const_lv1_1) and (grp_weight_load_bias_wri_fu_542_ap_done = ap_const_logic_0)) or ((grp_weight_load_bias_wri_fu_542_ap_done = ap_const_logic_0) and (ap_predicate_op484_call_state109 = ap_const_boolean_1)) or ((bias_en_reg_1858 = ap_const_lv1_1) and (grp_weight_load_bias_wri_fu_531_ap_done = ap_const_logic_0)) or ((grp_weight_load_bias_wri_fu_531_ap_done = ap_const_logic_0) and (ap_predicate_op483_call_state109 = ap_const_boolean_1)));
    end process;


    ap_block_state11_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n, ap_predicate_op170_read_state11, ap_predicate_op171_write_state11)
    begin
                ap_block_state11 <= (((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)));
    end process;


    ap_block_state12_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
                ap_block_state12 <= ((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state13_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
                ap_block_state13 <= ((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state14_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
                ap_block_state14 <= ((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state15_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n, layer_start_i_i_reg_415)
    begin
                ap_block_state15 <= (((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_out_V_V_full_n = ap_const_logic_0)) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_in_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
                ap_block_state2 <= ((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
                ap_block_state3 <= ((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state36_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state37_pp0_stage0_iter1_assign_proc : process(m_axi_global_weight_V_RVALID, exitcond1_i_i_reg_1929)
    begin
                ap_block_state37_pp0_stage0_iter1 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (exitcond1_i_i_reg_1929 = ap_const_lv1_0));
    end process;

        ap_block_state38_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
                ap_block_state4 <= ((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state48_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state49_pp1_stage0_iter1_assign_proc : process(m_axi_global_weight_V_RVALID, exitcond3_i_i_reg_1959)
    begin
                ap_block_state49_pp1_stage0_iter1 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (exitcond3_i_i_reg_1959 = ap_const_lv1_0));
    end process;


    ap_block_state5_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
                ap_block_state5 <= ((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state50_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state63_pp3_stage0_iter1_assign_proc : process(m_axi_global_weight_V_RVALID, exitcond2_i_i_reg_2018)
    begin
                ap_block_state63_pp3_stage0_iter1 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (exitcond2_i_i_reg_2018 = ap_const_lv1_0));
    end process;

        ap_block_state64_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state91_pp4_stage0_iter1_assign_proc : process(m_axi_global_weight_V_RVALID, exitcond5_i_i_reg_2112)
    begin
                ap_block_state91_pp4_stage0_iter1 <= ((m_axi_global_weight_V_RVALID = ap_const_logic_0) and (exitcond5_i_i_reg_2112 = ap_const_lv1_0));
    end process;

        ap_block_state92_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state36_assign_proc : process(exitcond1_i_i_fu_959_p2)
    begin
        if ((exitcond1_i_i_fu_959_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state36 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state36 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state48_assign_proc : process(exitcond3_i_i_fu_1008_p2)
    begin
        if ((exitcond3_i_i_fu_1008_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state48 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state48 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state62_assign_proc : process(exitcond2_i_i_fu_1131_p2)
    begin
        if ((exitcond2_i_i_fu_1131_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state62 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state62 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state90_assign_proc : process(exitcond5_i_i_fu_1237_p2)
    begin
        if ((exitcond5_i_i_fu_1237_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state90 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state90 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state104_assign_proc : process(exitcond4_i_i_fu_1303_p2)
    begin
        if ((exitcond4_i_i_fu_1303_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state104 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state104 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n, ap_CS_fsm_state11, ap_phi_mux_done_i_i_phi_fu_431_p4, ap_predicate_op170_read_state11, ap_predicate_op171_write_state11)
    begin
        if ((not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (ap_phi_mux_done_i_i_phi_fu_431_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter2)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter2)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_done_i_i_phi_fu_431_p4 <= done_i_i_reg_427;

    ap_phi_mux_indvar1_i_i_phi_fu_455_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_i_i_reg_1929, indvar1_i_i_reg_451, indvar_next1_i_i_reg_1933)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_i_i_reg_1929 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar1_i_i_phi_fu_455_p4 <= indvar_next1_i_i_reg_1933;
        else 
            ap_phi_mux_indvar1_i_i_phi_fu_455_p4 <= indvar1_i_i_reg_451;
        end if; 
    end process;


    ap_phi_mux_indvar4_i_i_phi_fu_467_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond3_i_i_reg_1959, indvar4_i_i_reg_463, indvar_next2_i_i_reg_1963)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond3_i_i_reg_1959 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar4_i_i_phi_fu_467_p4 <= indvar_next2_i_i_reg_1963;
        else 
            ap_phi_mux_indvar4_i_i_phi_fu_467_p4 <= indvar4_i_i_reg_463;
        end if; 
    end process;


    ap_phi_mux_indvar6_i_i_phi_fu_514_p4_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0, exitcond4_i_i_reg_2153, indvar6_i_i_reg_510, indvar_next3_i_i_reg_2157)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond4_i_i_reg_2153 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar6_i_i_phi_fu_514_p4 <= indvar_next3_i_i_reg_2157;
        else 
            ap_phi_mux_indvar6_i_i_phi_fu_514_p4 <= indvar6_i_i_reg_510;
        end if; 
    end process;


    ap_phi_mux_indvar8_i_i_phi_fu_502_p4_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, exitcond5_i_i_reg_2112, indvar8_i_i_reg_498, indvar_next4_i_i_reg_2116)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_i_i_reg_2112 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar8_i_i_phi_fu_502_p4 <= indvar_next4_i_i_reg_2116;
        else 
            ap_phi_mux_indvar8_i_i_phi_fu_502_p4 <= indvar8_i_i_reg_498;
        end if; 
    end process;


    ap_phi_mux_indvar_i_i_phi_fu_490_p4_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, exitcond2_i_i_reg_2018, indvar_i_i_reg_486, indvar_next_i_i_reg_2022)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond2_i_i_reg_2018 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_i_i_phi_fu_490_p4 <= indvar_next_i_i_reg_2022;
        else 
            ap_phi_mux_indvar_i_i_phi_fu_490_p4 <= indvar_i_i_reg_486;
        end if; 
    end process;

    ap_phi_mux_layer_start_i_i_phi_fu_419_p4 <= layer_start_i_i_reg_415;

    ap_predicate_op170_read_state11_assign_proc : process(layer_start_i_i_reg_415, done_i_i_reg_427)
    begin
                ap_predicate_op170_read_state11 <= ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (done_i_i_reg_427 = ap_const_lv1_0));
    end process;


    ap_predicate_op171_write_state11_assign_proc : process(layer_start_i_i_reg_415, done_i_i_reg_427)
    begin
                ap_predicate_op171_write_state11 <= ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (done_i_i_reg_427 = ap_const_lv1_0));
    end process;


    ap_predicate_op483_call_state109_assign_proc : process(bias_en_reg_1858, norm_conv_en_reg_1862)
    begin
                ap_predicate_op483_call_state109 <= ((norm_conv_en_reg_1862 = ap_const_lv1_1) and (bias_en_reg_1858 = ap_const_lv1_0));
    end process;


    ap_predicate_op484_call_state109_assign_proc : process(bias_en_reg_1858, norm_conv_en_reg_1862)
    begin
                ap_predicate_op484_call_state109 <= ((norm_conv_en_reg_1862 = ap_const_lv1_1) and (bias_en_reg_1858 = ap_const_lv1_0));
    end process;

    ap_ready <= internal_ap_ready;

    ap_sig_ioackin_m_axi_global_weight_V_ARREADY_assign_proc : process(m_axi_global_weight_V_ARREADY, ap_reg_ioackin_m_axi_global_weight_V_ARREADY)
    begin
        if ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_global_weight_V_ARREADY <= m_axi_global_weight_V_ARREADY;
        else 
            ap_sig_ioackin_m_axi_global_weight_V_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    beta_conv_burst_buf_s_address0_assign_proc : process(ap_block_pp3_stage0, ap_block_pp0_stage0, bias_en_reg_1858, ap_CS_fsm_state109, ap_predicate_op483_call_state109, ap_enable_reg_pp0_iter2, ap_enable_reg_pp3_iter2, grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_address0, indvar2_i_i_fu_970_p1, indvar3_i_i_fu_1142_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            beta_conv_burst_buf_s_address0 <= indvar3_i_i_fu_1142_p1(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            beta_conv_burst_buf_s_address0 <= indvar2_i_i_fu_970_p1(2 - 1 downto 0);
        elsif ((((bias_en_reg_1858 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state109)) or ((ap_const_logic_1 = ap_CS_fsm_state109) and (ap_predicate_op483_call_state109 = ap_const_boolean_1)))) then 
            beta_conv_burst_buf_s_address0 <= grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_address0;
        else 
            beta_conv_burst_buf_s_address0 <= "XX";
        end if; 
    end process;


    beta_conv_burst_buf_s_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp3_stage0_11001, bias_en_reg_1858, ap_CS_fsm_state109, ap_predicate_op483_call_state109, ap_enable_reg_pp0_iter2, ap_enable_reg_pp3_iter2, grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_ce0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            beta_conv_burst_buf_s_ce0 <= ap_const_logic_1;
        elsif ((((bias_en_reg_1858 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state109)) or ((ap_const_logic_1 = ap_CS_fsm_state109) and (ap_predicate_op483_call_state109 = ap_const_boolean_1)))) then 
            beta_conv_burst_buf_s_ce0 <= grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_ce0;
        else 
            beta_conv_burst_buf_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    beta_conv_burst_buf_s_d0_assign_proc : process(ap_block_pp3_stage0, ap_block_pp0_stage0, global_bias_V_addr_r_reg_1938, global_bias_V_addr_1_2_reg_2027, ap_enable_reg_pp0_iter2, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            beta_conv_burst_buf_s_d0 <= global_bias_V_addr_1_2_reg_2027;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            beta_conv_burst_buf_s_d0 <= global_bias_V_addr_r_reg_1938;
        else 
            beta_conv_burst_buf_s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    beta_conv_burst_buf_s_we0_assign_proc : process(ap_block_pp0_stage0_11001, ap_block_pp3_stage0_11001, exitcond1_i_i_reg_1929_pp0_iter1_reg, exitcond2_i_i_reg_2018_pp3_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (exitcond2_i_i_reg_2018_pp3_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond1_i_i_reg_1929_pp0_iter1_reg = ap_const_lv1_0)))) then 
            beta_conv_burst_buf_s_we0 <= ap_const_logic_1;
        else 
            beta_conv_burst_buf_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

    beta_conv_offset_1_i_fu_832_p3 <= 
        beta_conv_offset_reg_1819 when (norm_depth_en_fu_801_p2(0) = '1') else 
        p_0575_0_i_i_fu_817_p3;
    beta_conv_offset_fu_755_p2 <= std_logic_vector(unsigned(factor_i_i_fu_748_p3) + unsigned(beta_depth_offset_reg_1776));
    bias_en_fu_797_p2 <= (tmp_reg_1738 and tmp_17_reg_1744);
    done_be_i_i_fu_1603_p2 <= (tmp9_i_i_fu_1597_p2 and tmp7_i_i_fu_1591_p2);
    exitcond1_i_i_fu_959_p2 <= "1" when (ap_phi_mux_indvar1_i_i_phi_fu_455_p4 = tmp_34_add_i32_shr_i_reg_1910) else "0";
    exitcond2_i_i_fu_1131_p2 <= "1" when (ap_phi_mux_indvar_i_i_phi_fu_490_p4 = tmp_40_add_i32_shr_i_reg_2001) else "0";
    exitcond3_i_i_fu_1008_p2 <= "1" when (ap_phi_mux_indvar4_i_i_phi_fu_467_p4 = tmp_34_add_i32_shr_i_reg_1910) else "0";
    exitcond4_i_i_fu_1303_p2 <= "1" when (ap_phi_mux_indvar6_i_i_phi_fu_514_p4 = tmp_52_add_i32_shr_i_reg_2136) else "0";
    exitcond5_i_i_fu_1237_p2 <= "1" when (ap_phi_mux_indvar8_i_i_phi_fu_502_p4 = tmp_59_add_i32_shr_i_reg_2102) else "0";
    exitcond_i_i_fu_1051_p2 <= "1" when (i_i_i_reg_475 = ap_const_lv3_4) else "0";
    factor_i_i_fu_748_p3 <= (tmp_21_reg_1814 & ap_const_lv1_0);
    fifo_beta_conv_V_V_din <= grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_din;

    fifo_beta_conv_V_V_write_assign_proc : process(bias_en_reg_1858, ap_CS_fsm_state109, ap_predicate_op483_call_state109, grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_write)
    begin
        if ((((bias_en_reg_1858 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state109)) or ((ap_const_logic_1 = ap_CS_fsm_state109) and (ap_predicate_op483_call_state109 = ap_const_boolean_1)))) then 
            fifo_beta_conv_V_V_write <= grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_write;
        else 
            fifo_beta_conv_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    fifo_config_in_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, fifo_config_in_V_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, layer_start_i_i_reg_415, done_i_i_reg_427)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (done_i_i_reg_427 = ap_const_lv1_0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            fifo_config_in_V_V_blk_n <= fifo_config_in_V_V_empty_n;
        else 
            fifo_config_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_config_in_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, global_weight_V_offset_empty_n, global_bias_V_offset_empty_n, fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, layer_start_i_i_reg_415, ap_predicate_op170_read_state11, ap_predicate_op171_write_state11)
    begin
        if (((not((((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_out_V_V_full_n = ap_const_logic_0)) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_in_V_V_empty_n = ap_const_logic_0)))) and (layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state11) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0) or (global_bias_V_offset_empty_n = ap_const_logic_0) or (global_weight_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            fifo_config_in_V_V_read <= ap_const_logic_1;
        else 
            fifo_config_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_config_out_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, fifo_config_out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, layer_start_i_i_reg_415, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, done_i_i_reg_427)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (done_i_i_reg_427 = ap_const_lv1_0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            fifo_config_out_V_V_blk_n <= fifo_config_out_V_V_full_n;
        else 
            fifo_config_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_config_out_V_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, global_weight_V_offset_empty_n, global_bias_V_offset_empty_n, fifo_config_in_V_V_dout, fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, layer_start_i_i_reg_415, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, tmp_V_4_reg_1672, tmp_V_5_reg_1677, tmp_V_6_reg_1682, tmp_V_9_reg_1687, tmp_V_8_reg_1697, ap_predicate_op170_read_state11, ap_predicate_op171_write_state11)
    begin
        if (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fifo_config_out_V_V_din <= tmp_V_8_reg_1697;
        elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fifo_config_out_V_V_din <= tmp_V_9_reg_1687;
        elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fifo_config_out_V_V_din <= tmp_V_6_reg_1682;
        elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fifo_config_out_V_V_din <= tmp_V_5_reg_1677;
        elsif (((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            fifo_config_out_V_V_din <= tmp_V_4_reg_1672;
        elsif (((not((((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_out_V_V_full_n = ap_const_logic_0)) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_in_V_V_empty_n = ap_const_logic_0)))) and (layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state11) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0) or (global_bias_V_offset_empty_n = ap_const_logic_0) or (global_weight_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            fifo_config_out_V_V_din <= fifo_config_in_V_V_dout;
        else 
            fifo_config_out_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_config_out_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, global_weight_V_offset_empty_n, global_bias_V_offset_empty_n, fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, layer_start_i_i_reg_415, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_predicate_op170_read_state11, ap_predicate_op171_write_state11)
    begin
        if ((((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((fifo_config_out_V_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_out_V_V_full_n = ap_const_logic_0)) or ((layer_start_i_i_reg_415 = ap_const_lv1_1) and (fifo_config_in_V_V_empty_n = ap_const_logic_0)))) and (layer_start_i_i_reg_415 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state14)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state12)) or (not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (ap_const_logic_1 = ap_CS_fsm_state11) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or (not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0) or (global_bias_V_offset_empty_n = ap_const_logic_0) or (global_weight_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            fifo_config_out_V_V_write <= ap_const_logic_1;
        else 
            fifo_config_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    fifo_conv_weight_V_V_din <= grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_din;

    fifo_conv_weight_V_V_write_assign_proc : process(grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_write, ap_CS_fsm_state108)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            fifo_conv_weight_V_V_write <= grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_write;
        else 
            fifo_conv_weight_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    fifo_gamma_conv_V_V_din <= grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_din;

    fifo_gamma_conv_V_V_write_assign_proc : process(bias_en_reg_1858, ap_CS_fsm_state109, ap_predicate_op484_call_state109, grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_write)
    begin
        if ((((bias_en_reg_1858 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state109)) or ((ap_const_logic_1 = ap_CS_fsm_state109) and (ap_predicate_op484_call_state109 = ap_const_boolean_1)))) then 
            fifo_gamma_conv_V_V_write <= grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_write;
        else 
            fifo_gamma_conv_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    gamma_conv_burst_buf_address0_assign_proc : process(ap_block_pp1_stage0, bias_en_reg_1858, ap_CS_fsm_state53, ap_CS_fsm_state109, ap_predicate_op484_call_state109, ap_enable_reg_pp1_iter2, grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_address0, indvar5_i_i_fu_1019_p1, tmp_33_i_i_fu_1063_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            gamma_conv_burst_buf_address0 <= tmp_33_i_i_fu_1063_p1(2 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            gamma_conv_burst_buf_address0 <= indvar5_i_i_fu_1019_p1(2 - 1 downto 0);
        elsif ((((bias_en_reg_1858 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state109)) or ((ap_const_logic_1 = ap_CS_fsm_state109) and (ap_predicate_op484_call_state109 = ap_const_boolean_1)))) then 
            gamma_conv_burst_buf_address0 <= grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_address0;
        else 
            gamma_conv_burst_buf_address0 <= "XX";
        end if; 
    end process;


    gamma_conv_burst_buf_ce0_assign_proc : process(ap_block_pp1_stage0_11001, bias_en_reg_1858, ap_CS_fsm_state53, ap_CS_fsm_state109, ap_predicate_op484_call_state109, ap_enable_reg_pp1_iter2, grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)))) then 
            gamma_conv_burst_buf_ce0 <= ap_const_logic_1;
        elsif ((((bias_en_reg_1858 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state109)) or ((ap_const_logic_1 = ap_CS_fsm_state109) and (ap_predicate_op484_call_state109 = ap_const_boolean_1)))) then 
            gamma_conv_burst_buf_ce0 <= grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_ce0;
        else 
            gamma_conv_burst_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gamma_conv_burst_buf_d0_assign_proc : process(ap_block_pp1_stage0, global_bias_V_addr_2_2_reg_1968, ap_CS_fsm_state53, ap_enable_reg_pp1_iter2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            gamma_conv_burst_buf_d0 <= ap_const_lv512_lc_1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            gamma_conv_burst_buf_d0 <= global_bias_V_addr_2_2_reg_1968;
        else 
            gamma_conv_burst_buf_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gamma_conv_burst_buf_we0_assign_proc : process(ap_block_pp1_stage0_11001, exitcond3_i_i_reg_1959_pp1_iter1_reg, ap_CS_fsm_state53, ap_enable_reg_pp1_iter2, exitcond_i_i_fu_1051_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state53) and (exitcond_i_i_fu_1051_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (exitcond3_i_i_reg_1959_pp1_iter1_reg = ap_const_lv1_0)))) then 
            gamma_conv_burst_buf_we0 <= ap_const_logic_1;
        else 
            gamma_conv_burst_buf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    gamma_conv_offset_1_fu_813_p2 <= std_logic_vector(unsigned(LAYER_OUT_NUM_HW_V_reg_1808) + unsigned(beta_depth_offset_reg_1776));
    gamma_conv_offset_1_s_fu_839_p3 <= 
        gamma_conv_offset_fu_809_p2 when (norm_depth_en_fu_801_p2(0) = '1') else 
        p_i_i_fu_824_p3;
    gamma_conv_offset_fu_809_p2 <= std_logic_vector(unsigned(LAYER_OUT_NUM_HW_V_reg_1808) + unsigned(beta_conv_offset_reg_1819));
    global_bias_V_offset_2_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(global_bias_V_offset_1_reg_1666),59));
    global_bias_V_offset_3_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(global_bias_V_offset_1_reg_1666),59));

    global_bias_V_offset_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, global_bias_V_offset_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_bias_V_offset_blk_n <= global_bias_V_offset_empty_n;
        else 
            global_bias_V_offset_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    global_bias_V_offset_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, global_weight_V_offset_empty_n, global_bias_V_offset_empty_n, fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
        if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0) or (global_bias_V_offset_empty_n = ap_const_logic_0) or (global_weight_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_bias_V_offset_read <= ap_const_logic_1;
        else 
            global_bias_V_offset_read <= ap_const_logic_0;
        end if; 
    end process;

    global_bias_offset_1_fu_891_p2 <= std_logic_vector(signed(i_op_assign_i_i_reg_367) + signed(beta_conv_offset_1_i_reg_1866));
    global_bias_offset_2_fu_975_p2 <= std_logic_vector(signed(i_op_assign_i_i_reg_367) + signed(gamma_conv_offset_1_s_reg_1871));
    global_bias_offset_fu_1046_p2 <= std_logic_vector(unsigned(beta_depth_offset_reg_1776) + unsigned(i_op_assign_i_i_reg_367));

    global_weight_V_blk_n_AR_assign_proc : process(m_axi_global_weight_V_ARREADY, ap_CS_fsm_state55, ap_CS_fsm_state29, ap_CS_fsm_state41, ap_CS_fsm_state97, ap_CS_fsm_state83)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state97) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            global_weight_V_blk_n_AR <= m_axi_global_weight_V_ARREADY;
        else 
            global_weight_V_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    global_weight_V_blk_n_R_assign_proc : process(m_axi_global_weight_V_RVALID, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, exitcond2_i_i_reg_2018, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_i_i_reg_1929, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond3_i_i_reg_1959, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, ap_block_pp5_stage0, exitcond4_i_i_reg_2153, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, exitcond5_i_i_reg_2112)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_i_i_reg_2112 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond4_i_i_reg_2153 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond3_i_i_reg_1959 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_i_i_reg_1929 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond2_i_i_reg_2018 = ap_const_lv1_0)))) then 
            global_weight_V_blk_n_R <= m_axi_global_weight_V_RVALID;
        else 
            global_weight_V_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    global_weight_V_offs_1_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(global_weight_V_offs_reg_1660),59));
    global_weight_V_offs_2_fu_1204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(global_weight_V_offs_reg_1660),59));

    global_weight_V_offset_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, global_weight_V_offset_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_weight_V_offset_blk_n <= global_weight_V_offset_empty_n;
        else 
            global_weight_V_offset_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    global_weight_V_offset_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, global_weight_V_offset_empty_n, global_bias_V_offset_empty_n, fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n)
    begin
        if ((not(((fifo_config_out_V_V_full_n = ap_const_logic_0) or (fifo_config_in_V_V_empty_n = ap_const_logic_0) or (global_bias_V_offset_empty_n = ap_const_logic_0) or (global_weight_V_offset_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            global_weight_V_offset_read <= ap_const_logic_1;
        else 
            global_weight_V_offset_read <= ap_const_logic_0;
        end if; 
    end process;

    global_weight_offset_fu_1158_p2 <= std_logic_vector(unsigned(weight_offset2_1_reg_1876) + unsigned(tmp2_i_i_reg_2058));
    grp_fu_1032_p1 <= grp_fu_1032_p10(16 - 1 downto 0);
    grp_fu_1032_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_OUT_NUM_T_V_reg_1719),32));
    grp_fu_1609_p0 <= tmp_21_i_i_fu_718_p1(16 - 1 downto 0);
    grp_fu_1609_p1 <= tmp_21_i_i_fu_718_p1(16 - 1 downto 0);
    grp_fu_1615_p0 <= tmp_36_i_i_fu_1147_p1(16 - 1 downto 0);
    grp_fu_1615_p1 <= tmp_36_i_i_fu_1147_p1(16 - 1 downto 0);
    grp_fu_1621_p0 <= grp_fu_1621_p00(18 - 1 downto 0);
    grp_fu_1621_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_i_i_fu_1183_p3),22));
    grp_fu_1621_p1 <= grp_fu_1621_p10(21 - 1 downto 0);
    grp_fu_1621_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_i_i_fu_1172_p3),22));
    grp_fu_1621_p2 <= tmp_38_i_i_reg_1973(16 - 1 downto 0);
    grp_fu_1621_p3 <= ap_const_lv32_3F(7 - 1 downto 0);
    grp_fu_1630_p0 <= grp_fu_1630_p00(16 - 1 downto 0);
    grp_fu_1630_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_IN_NUM_T_V_reg_1709),30));
    grp_fu_1630_p1 <= grp_fu_1630_p10(16 - 1 downto 0);
    grp_fu_1630_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_OUT_NUM_T_V_reg_1719),30));
    grp_fu_573_p4 <= global_weight_offset_reg_2063(31 downto 4);
    grp_fu_743_p0 <= tmp_V_3_fu_200(32 - 1 downto 0);
    grp_weight_load_bias_wri_fu_531_ap_start <= grp_weight_load_bias_wri_fu_531_ap_start_reg;
    grp_weight_load_bias_wri_fu_542_ap_start <= grp_weight_load_bias_wri_fu_542_ap_start_reg;
    grp_weight_load_conv_wei_fu_522_ap_start <= grp_weight_load_conv_wei_fu_522_ap_start_reg;
    i_fu_1057_p2 <= std_logic_vector(unsigned(i_i_i_reg_475) + unsigned(ap_const_lv3_1));
    in_h_iter_fu_1328_p2 <= std_logic_vector(unsigned(in_h_iter_i_i_reg_379) + unsigned(LAYER_IN_H_T_V_reg_1728));
    in_num_iter_fu_1322_p2 <= std_logic_vector(unsigned(tmp_52_i_i_fu_1319_p1) + unsigned(op_assign_i_i_reg_355));
    in_w_iter_fu_1333_p2 <= std_logic_vector(unsigned(in_w_iter_i_i_reg_391) + unsigned(LAYER_IN_W_T_V_reg_1733));
    indvar2_i_i_fu_970_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar1_i_i_reg_451_pp0_iter1_reg),64));
    indvar3_i_i_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar_i_i_reg_486_pp3_iter1_reg),64));
    indvar5_i_i_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar4_i_i_reg_463_pp1_iter1_reg),64));
    indvar7_i_i_fu_1314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar6_i_i_reg_510_pp5_iter1_reg),64));
    indvar9_i_i_fu_1248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvar8_i_i_reg_498_pp4_iter1_reg),64));
    indvar_next1_i_i_fu_964_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar1_i_i_phi_fu_455_p4) + unsigned(ap_const_lv13_1));
    indvar_next2_i_i_fu_1013_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar4_i_i_phi_fu_467_p4) + unsigned(ap_const_lv13_1));
    indvar_next3_i_i_fu_1308_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar6_i_i_phi_fu_514_p4) + unsigned(ap_const_lv26_1));
    indvar_next4_i_i_fu_1242_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar8_i_i_phi_fu_502_p4) + unsigned(ap_const_lv26_1));
    indvar_next_i_i_fu_1136_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_i_i_phi_fu_490_p4) + unsigned(ap_const_lv13_1));

    internal_ap_ready_assign_proc : process(fifo_config_in_V_V_empty_n, fifo_config_out_V_V_full_n, ap_CS_fsm_state11, ap_phi_mux_done_i_i_phi_fu_431_p4, ap_predicate_op170_read_state11, ap_predicate_op171_write_state11)
    begin
        if ((not((((fifo_config_out_V_V_full_n = ap_const_logic_0) and (ap_predicate_op171_write_state11 = ap_const_boolean_1)) or ((fifo_config_in_V_V_empty_n = ap_const_logic_0) and (ap_predicate_op170_read_state11 = ap_const_boolean_1)))) and (ap_phi_mux_done_i_i_phi_fu_431_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    layer_iter_fu_1363_p2 <= std_logic_vector(unsigned(layer_iter_i_i_reg_403) + unsigned(ap_const_lv32_1));
    layer_start_be_i_i_fu_1575_p2 <= (sel_tmp3_i_i_fu_1569_p2 or layer_start_1_i_i_reg_438);
    lhs_V_1_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_i_i_reg_355),33));
    lhs_V_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_i_i_reg_355),33));

    m_axi_global_weight_V_ARADDR_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state29, ap_CS_fsm_state41, ap_CS_fsm_state97, ap_CS_fsm_state83, sum1_cast_i_i_fu_945_p1, sum3_cast_i_i_fu_998_p1, sum9_cast_i_i_fu_1117_p1, sum4_cast_i_i_fu_1213_p1, sum_cast_i_i_fu_1289_p1, ap_reg_ioackin_m_axi_global_weight_V_ARREADY)
    begin
        if ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_0)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
                m_axi_global_weight_V_ARADDR <= sum_cast_i_i_fu_1289_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                m_axi_global_weight_V_ARADDR <= sum4_cast_i_i_fu_1213_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                m_axi_global_weight_V_ARADDR <= sum9_cast_i_i_fu_1117_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                m_axi_global_weight_V_ARADDR <= sum3_cast_i_i_fu_998_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                m_axi_global_weight_V_ARADDR <= sum1_cast_i_i_fu_945_p1;
            else 
                m_axi_global_weight_V_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_global_weight_V_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_global_weight_V_ARBURST <= ap_const_lv2_0;
    m_axi_global_weight_V_ARCACHE <= ap_const_lv4_0;
    m_axi_global_weight_V_ARID <= ap_const_lv1_0;

    m_axi_global_weight_V_ARLEN_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state29, ap_CS_fsm_state41, ap_CS_fsm_state97, ap_CS_fsm_state83, tmp_34_add_i32_shr_c_fu_955_p1, tmp_34_add_i32_shr_c_reg_1923, tmp_40_add_i32_shr_c_fu_1127_p1, tmp_69_i_i_fu_1232_p1, tmp_64_i_i_fu_1299_p1, ap_reg_ioackin_m_axi_global_weight_V_ARREADY)
    begin
        if ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_0)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state97)) then 
                m_axi_global_weight_V_ARLEN <= tmp_64_i_i_fu_1299_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                m_axi_global_weight_V_ARLEN <= tmp_69_i_i_fu_1232_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                m_axi_global_weight_V_ARLEN <= tmp_40_add_i32_shr_c_fu_1127_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                m_axi_global_weight_V_ARLEN <= tmp_34_add_i32_shr_c_reg_1923;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
                m_axi_global_weight_V_ARLEN <= tmp_34_add_i32_shr_c_fu_955_p1;
            else 
                m_axi_global_weight_V_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_global_weight_V_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_global_weight_V_ARLOCK <= ap_const_lv2_0;
    m_axi_global_weight_V_ARPROT <= ap_const_lv3_0;
    m_axi_global_weight_V_ARQOS <= ap_const_lv4_0;
    m_axi_global_weight_V_ARREGION <= ap_const_lv4_0;
    m_axi_global_weight_V_ARSIZE <= ap_const_lv3_0;
    m_axi_global_weight_V_ARUSER <= ap_const_lv1_0;

    m_axi_global_weight_V_ARVALID_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state29, ap_CS_fsm_state41, ap_CS_fsm_state97, ap_CS_fsm_state83, ap_reg_ioackin_m_axi_global_weight_V_ARREADY)
    begin
        if ((((ap_reg_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state83)) or ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state97)) or ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state41)) or ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state55)))) then 
            m_axi_global_weight_V_ARVALID <= ap_const_logic_1;
        else 
            m_axi_global_weight_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_global_weight_V_AWADDR <= ap_const_lv64_0;
    m_axi_global_weight_V_AWBURST <= ap_const_lv2_0;
    m_axi_global_weight_V_AWCACHE <= ap_const_lv4_0;
    m_axi_global_weight_V_AWID <= ap_const_lv1_0;
    m_axi_global_weight_V_AWLEN <= ap_const_lv32_0;
    m_axi_global_weight_V_AWLOCK <= ap_const_lv2_0;
    m_axi_global_weight_V_AWPROT <= ap_const_lv3_0;
    m_axi_global_weight_V_AWQOS <= ap_const_lv4_0;
    m_axi_global_weight_V_AWREGION <= ap_const_lv4_0;
    m_axi_global_weight_V_AWSIZE <= ap_const_lv3_0;
    m_axi_global_weight_V_AWUSER <= ap_const_lv1_0;
    m_axi_global_weight_V_AWVALID <= ap_const_logic_0;
    m_axi_global_weight_V_BREADY <= ap_const_logic_0;

    m_axi_global_weight_V_RREADY_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond2_i_i_reg_2018, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_i_i_reg_1929, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, exitcond3_i_i_reg_1959, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter1, exitcond4_i_i_reg_2153, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, exitcond5_i_i_reg_2112, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp3_stage0_11001, ap_block_pp4_stage0_11001, ap_block_pp5_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (exitcond5_i_i_reg_2112 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (exitcond4_i_i_reg_2153 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond3_i_i_reg_1959 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond1_i_i_reg_1929 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (exitcond2_i_i_reg_2018 = ap_const_lv1_0)))) then 
            m_axi_global_weight_V_RREADY <= ap_const_logic_1;
        else 
            m_axi_global_weight_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_global_weight_V_WDATA <= ap_const_lv512_lc_1;
    m_axi_global_weight_V_WID <= ap_const_lv1_0;
    m_axi_global_weight_V_WLAST <= ap_const_logic_0;
    m_axi_global_weight_V_WSTRB <= ap_const_lv64_0;
    m_axi_global_weight_V_WUSER <= ap_const_lv1_0;
    m_axi_global_weight_V_WVALID <= ap_const_logic_0;
    newSel10_i_i_fu_1514_p3 <= 
        newSel9_i_i_fu_1506_p3 when (or_cond2_i_i_fu_1439_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel11_i_i_fu_1522_p3 <= 
        ap_const_lv32_0 when (tmp_58_i_i_fu_1381_p2(0) = '1') else 
        layer_iter_reg_2216;
    newSel12_i_i_fu_1529_p3 <= 
        layer_iter_i_i_reg_403 when (or_cond2_i_i_fu_1439_p2(0) = '1') else 
        newSel11_i_i_fu_1522_p3;
    newSel1_i_i_fu_1445_p3 <= 
        newSel_i_i_fu_1432_p3 when (or_cond2_i_i_fu_1439_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel2_i_i_fu_1453_p3 <= 
        out_num_iter_reg_2185 when (sel_tmp8_i_i_fu_1410_p2(0) = '1') else 
        i_op_assign_i_i_reg_367;
    newSel3_i_i_fu_1460_p3 <= 
        newSel2_i_i_fu_1453_p3 when (or_cond_i_i_fu_1415_p2(0) = '1') else 
        i_op_assign_i_i_reg_367;
    newSel4_i_i_fu_1468_p3 <= 
        newSel3_i_i_fu_1460_p3 when (or_cond2_i_i_fu_1439_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel5_i_i_fu_1476_p3 <= 
        in_h_iter_reg_2173 when (sel_tmp2_i_i_fu_1390_p2(0) = '1') else 
        in_h_iter_i_i_reg_379;
    newSel6_i_i_fu_1483_p3 <= 
        ap_const_lv32_0 when (or_cond_i_i_fu_1415_p2(0) = '1') else 
        newSel5_i_i_fu_1476_p3;
    newSel7_i_i_fu_1491_p3 <= 
        newSel6_i_i_fu_1483_p3 when (or_cond2_i_i_fu_1439_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel8_i_i_fu_1499_p3 <= 
        ap_const_lv32_0 when (sel_tmp8_i_i_fu_1410_p2(0) = '1') else 
        in_w_iter_reg_2179;
    newSel9_i_i_fu_1506_p3 <= 
        newSel8_i_i_fu_1499_p3 when (or_cond_i_i_fu_1415_p2(0) = '1') else 
        in_w_iter_i_i_reg_391;
    newSel_i_i_fu_1432_p3 <= 
        ap_const_lv32_0 when (tmp_5_i_i_fu_1426_p2(0) = '1') else 
        in_num_iter_reg_2167;
    norm_conv_en_fu_805_p2 <= (tmp_reg_1738 and tmp_20_reg_1760);
    norm_depth_en_fu_801_p2 <= (tmp_19_reg_1755 and tmp_18_reg_1749);
    not_sel_tmp1_i_i_fu_1558_p2 <= (tmp_58_not_i_i_fu_1553_p2 or sel_tmp13_demorgan_i_reg_2228);
    not_sel_tmp2_i_i_fu_1586_p2 <= (tmp_55_not_i_i_fu_1581_p2 or tmp_53_i_i_reg_2191);
    not_sel_tmp_i_i_fu_1548_p2 <= (tmp_56_not_i_i_fu_1543_p2 or sel_tmp6_demorgan_i_s_reg_2222);
    or_cond1_i_i_fu_1421_p2 <= (tmp_53_i_i_reg_2191 or sel_tmp2_i_i_fu_1390_p2);
    or_cond2_i_i_fu_1439_p2 <= (or_cond_i_i_fu_1415_p2 or or_cond1_i_i_fu_1421_p2);
    or_cond_i_i_fu_1415_p2 <= (sel_tmp8_i_i_fu_1410_p2 or sel_tmp7_i_i_fu_1400_p2);
    out_num_iter_fu_1341_p2 <= std_logic_vector(unsigned(tmp_56_i_i_fu_1338_p1) + unsigned(i_op_assign_i_i_reg_367));
    p_0575_0_i_i_fu_817_p3 <= 
        beta_depth_offset_reg_1776 when (norm_conv_en_fu_805_p2(0) = '1') else 
        ap_const_lv32_0;
    p_i_i_fu_824_p3 <= 
        gamma_conv_offset_1_fu_813_p2 when (norm_conv_en_fu_805_p2(0) = '1') else 
        ap_const_lv32_0;
    p_shl1_i_i_fu_1183_p3 <= (LAYER_IN_NUM_T_V_reg_1709 & ap_const_lv2_0);
    p_shl_i_i_fu_1172_p3 <= (LAYER_IN_NUM_T_V_reg_1709 & ap_const_lv5_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_1_fu_864_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_857_p1) + unsigned(rhs_V_1_fu_861_p1));
    ret_V_fu_877_p2 <= std_logic_vector(unsigned(lhs_V_fu_870_p1) + unsigned(rhs_V_fu_874_p1));
    rhs_V_1_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_IN_NUM_T_V_reg_1709),33));
    rhs_V_fu_874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_IN_NUM_T_V_reg_1709),33));
    sel_tmp13_demorgan_i_fu_1375_p2 <= (tmp_55_i_i_fu_1355_p2 or sel_tmp6_demorgan_i_s_fu_1369_p2);
    sel_tmp1_i_i_fu_1385_p2 <= (tmp_53_i_i_reg_2191 xor ap_const_lv1_1);
    sel_tmp2_i_i_fu_1390_p2 <= (tmp_54_i_i_reg_2198 and sel_tmp1_i_i_fu_1385_p2);
    sel_tmp3_i_i_fu_1569_p2 <= (tmp6_i_i_fu_1563_p2 and sel_tmp9_i_i_fu_1537_p2);
    sel_tmp6_demorgan_i_s_fu_1369_p2 <= (tmp_54_i_i_fu_1351_p2 or tmp_53_i_i_fu_1347_p2);
    sel_tmp6_i_i_fu_1395_p2 <= (sel_tmp6_demorgan_i_s_reg_2222 xor ap_const_lv1_1);
    sel_tmp7_i_i_fu_1400_p2 <= (tmp_55_i_i_reg_2204 and sel_tmp6_i_i_fu_1395_p2);
    sel_tmp8_i_i_fu_1410_p2 <= (tmp_57_i_i_reg_2210 and sel_tmp_i_i_fu_1405_p2);
    sel_tmp9_i_i_fu_1537_p2 <= (sel_tmp2_i_i_fu_1390_p2 xor sel_tmp1_i_i_fu_1385_p2);
    sel_tmp_i_i_fu_1405_p2 <= (sel_tmp13_demorgan_i_reg_2228 xor ap_const_lv1_1);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sum1_cast_i_i_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum1_i_i_reg_1905),64));
    sum1_i_i_fu_912_p2 <= std_logic_vector(unsigned(global_bias_V_offset_3_fu_909_p1) + unsigned(tmp_27_cast_i_i_fu_906_p1));
    sum3_cast_i_i_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum3_i_i_reg_1948),64));
    sum3_i_i_fu_993_p2 <= std_logic_vector(unsigned(global_bias_V_offset_3_reg_1900) + unsigned(tmp_35_cast_i_i_fu_990_p1));
    sum4_cast_i_i_fu_1213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum4_i_i_reg_2086),64));
    sum4_i_i_fu_1207_p2 <= std_logic_vector(unsigned(global_weight_V_offs_2_fu_1204_p1) + unsigned(tmp_49_cast_i_i_fu_1200_p1));
    sum9_cast_i_i_fu_1117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum9_i_i_reg_1996),64));
    sum9_i_i_fu_1084_p2 <= std_logic_vector(unsigned(global_bias_V_offset_2_fu_1081_p1) + unsigned(tmp_31_cast_i_i_fu_1077_p1));
    sum_cast_i_i_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sum_i_i_reg_2126),64));
    sum_i_i_fu_1260_p2 <= std_logic_vector(unsigned(global_weight_V_offs_1_fu_1257_p1) + unsigned(tmp_42_cast_i_i_fu_1253_p1));
    tmp6_i_i_fu_1563_p2 <= (not_sel_tmp_i_i_fu_1548_p2 and not_sel_tmp1_i_i_fu_1558_p2);
    tmp7_i_i_fu_1591_p2 <= (tmp_58_i_i_fu_1381_p2 and sel_tmp1_i_i_fu_1385_p2);
    tmp9_i_i_fu_1597_p2 <= (tmp6_i_i_fu_1563_p2 and not_sel_tmp2_i_i_fu_1586_p2);
    tmp_21_fu_739_p1 <= tmp_V_3_fu_200(31 - 1 downto 0);
    tmp_21_i_i_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FILTER_S1_V_fu_698_p4),32));
    tmp_22_i_i_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_IN_NUM_V_reg_1836),33));
    tmp_23_fu_1068_p4 <= global_bias_offset_reg_1983(31 downto 4);
    tmp_23_i_i_fu_1041_p2 <= "1" when (unsigned(ret_V_reg_1886) < unsigned(tmp_22_i_i_fu_1038_p1)) else "0";
    tmp_24_i_i_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_IN_NUM_V_reg_1836),33));
    tmp_25_i_i_fu_886_p2 <= "1" when (unsigned(ret_V_1_reg_1881) < unsigned(tmp_24_i_i_fu_883_p1)) else "0";
    tmp_27_cast_i_i_fu_906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_reg_1895),59));
    tmp_29_i_i_fu_918_p3 <= (LAYER_OUT_NUM_T_V_reg_1719 & ap_const_lv2_0);
    tmp_31_cast_i_i_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1068_p4),59));
    tmp_32_i_i_fu_1090_p3 <= (LAYER_OUT_NUM_T_V_reg_1719 & ap_const_lv2_0);
    tmp_33_i_i_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_i_reg_475),64));
    tmp_34_add_i32_shr_c_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_add_i32_shr_i_reg_1910),32));
    tmp_34_add_i_i_i_fu_929_p2 <= std_logic_vector(unsigned(tmp_34_cast_i_i_fu_925_p1) + unsigned(ap_const_lv19_3F));
    tmp_34_cast_i_i_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_i_i_fu_918_p3),19));
    tmp_35_cast_i_i_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_reg_1943),59));
    tmp_36_i_i_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FILTER_S2_V_reg_1784),32));
    tmp_38_i_i_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_OUT_NUM_T_V_reg_1719),32));
    tmp_40_add_i32_shr_c_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_add_i32_shr_i_reg_2001),32));
    tmp_40_add_i_i_fu_1101_p2 <= std_logic_vector(unsigned(tmp_40_cast_i_i_fu_1097_p1) + unsigned(ap_const_lv19_3F));
    tmp_40_cast_i_i_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_i_i_fu_1090_p3),19));
    tmp_40_i_i_fu_1162_p2 <= "1" when (FILTER_S2_V_reg_1784 = ap_const_lv16_1) else "0";
    tmp_42_cast_i_i_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_573_p4),59));
    tmp_46_i_i_fu_1266_p3 <= (tmp_44_i_i_reg_2131 & ap_const_lv2_0);
    tmp_47_i_i_fu_1167_p2 <= "1" when (FILTER_S2_V_reg_1784 = ap_const_lv16_3) else "0";
    tmp_49_cast_i_i_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_573_p4),59));
    tmp_52_add_i_i_fu_1273_p2 <= std_logic_vector(unsigned(tmp_46_i_i_fu_1266_p3) + unsigned(ap_const_lv32_3F));
    tmp_52_i_i_fu_1319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_IN_NUM_T_V_reg_1709),32));
    tmp_53_i_i_fu_1347_p2 <= "1" when (unsigned(in_num_iter_reg_2167) < unsigned(LAYER_IN_NUM_V_reg_1836)) else "0";
    tmp_54_i_i_fu_1351_p2 <= "1" when (unsigned(in_h_iter_reg_2173) < unsigned(LAYER_IN_H_V_reg_1848)) else "0";
    tmp_55_i_i_fu_1355_p2 <= "1" when (unsigned(in_w_iter_reg_2179) < unsigned(LAYER_IN_W_V_reg_1853)) else "0";
    tmp_55_not_i_i_fu_1581_p2 <= (tmp_54_i_i_reg_2198 xor ap_const_lv1_1);
    tmp_56_i_i_fu_1338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_OUT_NUM_T_V_reg_1719),32));
    tmp_56_not_i_i_fu_1543_p2 <= (tmp_55_i_i_reg_2204 xor ap_const_lv1_1);
    tmp_57_i_i_fu_1359_p2 <= "1" when (unsigned(out_num_iter_reg_2185) < unsigned(LAYER_OUT_NUM_V_reg_1843)) else "0";
    tmp_58_i_i_fu_1381_p2 <= "1" when (layer_iter_reg_2216 = LAYER_BATCH_V_reg_1692) else "0";
    tmp_58_not_i_i_fu_1553_p2 <= (tmp_57_i_i_reg_2210 xor ap_const_lv1_1);
    tmp_59_add_i32_shr_i_fu_1223_p4 <= tmp_59_add_i_i_reg_2091(31 downto 6);
    tmp_5_i_i_fu_1426_p2 <= (sel_tmp2_i_i_fu_1390_p2 or or_cond_i_i_fu_1415_p2);
    tmp_64_i_i_fu_1299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_add_i32_shr_i_reg_2136),32));
    tmp_69_i_i_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_59_add_i32_shr_i_fu_1223_p4),32));
    tmp_i_i_fu_1150_p2 <= std_logic_vector(unsigned(tmp_39_i_i_reg_2043) + unsigned(tmp_37_i_i_reg_2038));

    weight_burst_buf2_V_address0_assign_proc : process(ap_block_pp5_stage0, ap_block_pp4_stage0, ap_enable_reg_pp4_iter2, ap_enable_reg_pp5_iter2, grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_address0, ap_CS_fsm_state108, indvar9_i_i_fu_1248_p1, indvar7_i_i_fu_1314_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1))) then 
            weight_burst_buf2_V_address0 <= indvar7_i_i_fu_1314_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            weight_burst_buf2_V_address0 <= indvar9_i_i_fu_1248_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            weight_burst_buf2_V_address0 <= grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_address0;
        else 
            weight_burst_buf2_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    weight_burst_buf2_V_ce0_assign_proc : process(ap_block_pp4_stage0_11001, ap_block_pp5_stage0_11001, ap_enable_reg_pp4_iter2, ap_enable_reg_pp5_iter2, grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_ce0, ap_CS_fsm_state108)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1)))) then 
            weight_burst_buf2_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state108)) then 
            weight_burst_buf2_V_ce0 <= grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_ce0;
        else 
            weight_burst_buf2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_burst_buf2_V_d0_assign_proc : process(ap_block_pp5_stage0, ap_block_pp4_stage0, global_bias_V_addr_4_1_reg_2121, global_bias_V_addr_3_1_reg_2162, ap_enable_reg_pp4_iter2, ap_enable_reg_pp5_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1))) then 
            weight_burst_buf2_V_d0 <= global_bias_V_addr_3_1_reg_2162;
        elsif (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            weight_burst_buf2_V_d0 <= global_bias_V_addr_4_1_reg_2121;
        else 
            weight_burst_buf2_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    weight_burst_buf2_V_we0_assign_proc : process(ap_block_pp4_stage0_11001, ap_block_pp5_stage0_11001, exitcond5_i_i_reg_2112_pp4_iter1_reg, exitcond4_i_i_reg_2153_pp5_iter1_reg, ap_enable_reg_pp4_iter2, ap_enable_reg_pp5_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (exitcond4_i_i_reg_2153_pp5_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (exitcond5_i_i_reg_2112_pp4_iter1_reg = ap_const_lv1_0)))) then 
            weight_burst_buf2_V_we0 <= ap_const_logic_1;
        else 
            weight_burst_buf2_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    weight_offset2_1_fu_851_p3 <= 
        weight_offset2_fu_847_p2 when (tmp_18_reg_1749(0) = '1') else 
        weight_offset2_2_reg_1770;
    weight_offset2_fu_847_p2 <= std_logic_vector(unsigned(weight_offset2_2_reg_1770) + unsigned(p_1_i_i_reg_1825));
end behav;
