-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cin_load13 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    m_axi_global_cin_V_AWVALID : OUT STD_LOGIC;
    m_axi_global_cin_V_AWREADY : IN STD_LOGIC;
    m_axi_global_cin_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_global_cin_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_cin_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_global_cin_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_global_cin_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_cin_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_cin_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_cin_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_global_cin_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_cin_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_cin_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_cin_V_WVALID : OUT STD_LOGIC;
    m_axi_global_cin_V_WREADY : IN STD_LOGIC;
    m_axi_global_cin_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_global_cin_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_global_cin_V_WLAST : OUT STD_LOGIC;
    m_axi_global_cin_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_cin_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_cin_V_ARVALID : OUT STD_LOGIC;
    m_axi_global_cin_V_ARREADY : IN STD_LOGIC;
    m_axi_global_cin_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_global_cin_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_cin_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_global_cin_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_global_cin_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_cin_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_cin_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_cin_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_global_cin_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_cin_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_global_cin_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_cin_V_RVALID : IN STD_LOGIC;
    m_axi_global_cin_V_RREADY : OUT STD_LOGIC;
    m_axi_global_cin_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_global_cin_V_RLAST : IN STD_LOGIC;
    m_axi_global_cin_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_cin_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_cin_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_cin_V_BVALID : IN STD_LOGIC;
    m_axi_global_cin_V_BREADY : OUT STD_LOGIC;
    m_axi_global_cin_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_global_cin_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_global_cin_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    global_cin_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
    config_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    config_r_ce0 : OUT STD_LOGIC;
    config_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    config_r_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    config_r_ce1 : OUT STD_LOGIC;
    config_r_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_cin_load_0_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_cin_load_0_V_V_full_n : IN STD_LOGIC;
    fifo_cin_load_0_V_V_write : OUT STD_LOGIC;
    config_weight_load_V_din : OUT STD_LOGIC_VECTOR (191 downto 0);
    config_weight_load_V_full_n : IN STD_LOGIC;
    config_weight_load_V_write : OUT STD_LOGIC;
    global_weight_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
    global_bias_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
    global_cout_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
    global_weight_V_offset_out_din : OUT STD_LOGIC_VECTOR (57 downto 0);
    global_weight_V_offset_out_full_n : IN STD_LOGIC;
    global_weight_V_offset_out_write : OUT STD_LOGIC;
    global_bias_V_offset_out_din : OUT STD_LOGIC_VECTOR (57 downto 0);
    global_bias_V_offset_out_full_n : IN STD_LOGIC;
    global_bias_V_offset_out_write : OUT STD_LOGIC;
    global_cout_V_offset_out_din : OUT STD_LOGIC_VECTOR (57 downto 0);
    global_cout_V_offset_out_full_n : IN STD_LOGIC;
    global_cout_V_offset_out_write : OUT STD_LOGIC );
end;


architecture behav of cin_load13 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (71 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (71 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (71 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (71 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (71 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (71 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (71 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (71 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (71 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (71 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (71 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (71 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (71 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (71 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal config_weight_load_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal layer_start_i_i_i_reg_563 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal global_weight_V_offset_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal global_bias_V_offset_out_blk_n : STD_LOGIC;
    signal global_cout_V_offset_out_blk_n : STD_LOGIC;
    signal reg_709 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_phi_mux_done_i_i_i_phi_fu_579_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_610_fu_1211_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_i_i_i_fu_1280_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_498_i_i_i_fu_1286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_614_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_495_i_i_i_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_714 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_719 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_724 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal p_Repl2_46_reg_1744 : STD_LOGIC_VECTOR (31 downto 0);
    signal task_cnt_load_reg_1750 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_737_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1756 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_603_fu_741_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_603_reg_1760 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_31_reg_1799 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_Repl2_30_reg_1814 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_Repl2_29_reg_1819 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_28_reg_1837 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal p_Repl2_s_reg_1845 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_27_reg_1860 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_Repl2_37_reg_1865 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_36_reg_1881 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal p_Repl2_35_reg_1887 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_34_reg_1905 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal p_Repl2_32_reg_1913 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_33_reg_1928 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal cin_offset_reg_1933 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_43_reg_1949 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal p_Repl2_42_reg_1954 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_41_reg_1969 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal FILTER_S1_V_fu_912_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal FILTER_S1_V_reg_1974 : STD_LOGIC_VECTOR (15 downto 0);
    signal FILTER_S2_V_fu_936_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal FILTER_S2_V_reg_1990 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal p_Repl2_39_reg_1996 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_51_reg_2011 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal p_Repl2_50_reg_2021 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_NUM_T_V_fu_980_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal LAYER_IN_NUM_T_V_reg_2036 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal LAYER_OUT_NUM_T_V_fu_984_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal LAYER_OUT_NUM_T_V_reg_2044 : STD_LOGIC_VECTOR (15 downto 0);
    signal LAYER_IN_H_T_prev_2_reg_2060 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal LAYER_IN_W_T_prev_2_reg_2070 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_57_reg_2090 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal p_Repl2_56_reg_2095 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_55_reg_2110 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal p_Repl2_54_reg_2115 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_fu_1079_p7 : STD_LOGIC_VECTOR (191 downto 0);
    signal p_Result_4_reg_2130 : STD_LOGIC_VECTOR (191 downto 0);
    signal ap_block_state19 : BOOLEAN;
    signal p_Result_5_fu_1089_p8 : STD_LOGIC_VECTOR (191 downto 0);
    signal p_Result_5_reg_2135 : STD_LOGIC_VECTOR (191 downto 0);
    signal p_Result_6_fu_1100_p8 : STD_LOGIC_VECTOR (191 downto 0);
    signal p_Result_6_reg_2140 : STD_LOGIC_VECTOR (191 downto 0);
    signal p_Result_7_fu_1111_p7 : STD_LOGIC_VECTOR (191 downto 0);
    signal p_Result_7_reg_2145 : STD_LOGIC_VECTOR (191 downto 0);
    signal FILTER_S_fu_1144_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal FILTER_S_reg_2150 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state23 : BOOLEAN;
    signal tmp_488_i_i_i_fu_1160_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_488_i_i_i_reg_2156 : STD_LOGIC_VECTOR (2 downto 0);
    signal max_pool_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_pool_reg_2163 : STD_LOGIC_VECTOR (0 downto 0);
    signal change_layout_fu_1202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal change_layout_reg_2168 : STD_LOGIC_VECTOR (0 downto 0);
    signal FILTER_S_cast_i_i_i_fu_1208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal FILTER_S_cast_i_i_i_reg_2173 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_610_reg_2178 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_495_i_i_i_reg_2182 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_614_reg_2186 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond5_i_i_i_reg_2190 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_498_i_i_i_reg_2194 : STD_LOGIC_VECTOR (0 downto 0);
    signal in_num_iter_fu_1324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_num_iter_reg_2198 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_cin_load_ddr_read_fu_657_ap_ready : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_ap_done : STD_LOGIC;
    signal ap_predicate_op344_call_state25 : BOOLEAN;
    signal grp_cin_load_fifo_write_fu_682_ap_ready : STD_LOGIC;
    signal grp_cin_load_fifo_write_fu_682_ap_done : STD_LOGIC;
    signal ap_predicate_op345_call_state25 : BOOLEAN;
    signal ap_predicate_op347_call_state25 : BOOLEAN;
    signal ap_predicate_op348_call_state25 : BOOLEAN;
    signal ap_predicate_op351_call_state25 : BOOLEAN;
    signal ap_block_state25_on_subcall_done : BOOLEAN;
    signal tmp_500_i_i_i_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_500_i_i_i_reg_2204 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal inter_tile_fu_1334_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_reg_2217 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_fu_1344_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_28_reg_2222 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1348_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_i_i_i_reg_2227 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal channel_iter_fu_1352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal in_h_iter_fu_1357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_h_iter_reg_2237 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_w_iter_fu_1362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_w_iter_reg_2243 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_num_iter_fu_1370_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_num_iter_reg_2249 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_501_i_i_i_fu_1376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_501_i_i_i_reg_2255 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal tmp_502_i_i_i_fu_1380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_502_i_i_i_reg_2261 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_504_i_i_i_fu_1384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_504_i_i_i_reg_2267 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer_iter_fu_1388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer_iter_reg_2273 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp6_demorgan_i_s_fu_1394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_i_s_reg_2279 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_demorgan_i_fu_1399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_demorgan_i_reg_2285 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel59_i_i_i_fu_1475_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal newSel62_i_i_i_fu_1498_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel65_i_i_i_fu_1521_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel68_i_i_i_fu_1544_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel70_i_i_i_fu_1559_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer_start_be_i_i_i_fu_1605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_be_i_i_i_fu_1633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel73_i_i_i_fu_1655_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel76_i_i_i_fu_1679_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel78_i_i_i_fu_1695_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal cin_burst_buf_ping_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal cin_burst_buf_ping_V_ce0 : STD_LOGIC;
    signal cin_burst_buf_ping_V_we0 : STD_LOGIC;
    signal cin_burst_buf_ping_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal cin_burst_buf_pong_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal cin_burst_buf_pong_V_ce0 : STD_LOGIC;
    signal cin_burst_buf_pong_V_we0 : STD_LOGIC;
    signal cin_burst_buf_pong_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_cin_load_ddr_read_fu_657_ap_start : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_ap_idle : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWVALID : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WVALID : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WLAST : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARVALID : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_RREADY : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_BREADY : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_ce0 : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_we0 : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_d0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_cin_load_ddr_read_fu_657_change : STD_LOGIC;
    signal grp_cin_load_ddr_read_fu_657_max_pool : STD_LOGIC;
    signal grp_cin_load_fifo_write_fu_682_ap_start : STD_LOGIC;
    signal grp_cin_load_fifo_write_fu_682_ap_idle : STD_LOGIC;
    signal grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_ce0 : STD_LOGIC;
    signal grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_cin_load_fifo_write_fu_682_fifo_cin_V_V_din : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_cin_load_fifo_write_fu_682_fifo_cin_V_V_write : STD_LOGIC;
    signal in_num_iter_i_i_i_reg_503 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_num_iter_i_i_i_reg_515 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_h_iter_i_i_i_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_w_iter_i_i_i_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer_iter_i_i_i_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal done_i_i_i_reg_575 : STD_LOGIC_VECTOR (0 downto 0);
    signal num_tile_i_i_i_reg_586 : STD_LOGIC_VECTOR (31 downto 0);
    signal inter_tile_i_i_i_reg_598 : STD_LOGIC_VECTOR (31 downto 0);
    signal channel_iter_i_i_i_reg_610 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer_start_1_i_i_i_reg_622 : STD_LOGIC_VECTOR (0 downto 0);
    signal inter_tile_1_i_i_i_reg_635 : STD_LOGIC_VECTOR (31 downto 0);
    signal channel_iter_1_i_i_i_reg_646 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_cin_load_ddr_read_fu_657_ap_start_reg : STD_LOGIC := '0';
    signal grp_cin_load_fifo_write_fu_682_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal tmp_424_i_i_i_fu_747_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_426_i_i_i_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_428_i_i_i_fu_767_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_430_i_i_i_fu_777_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_432_i_i_i_fu_787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_434_i_i_i_fu_797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_436_i_i_i_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_438_i_i_i_fu_817_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_440_i_i_i_fu_827_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_442_i_i_i_fu_837_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_444_i_i_i_fu_847_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_446_i_i_i_fu_857_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_448_i_i_i_fu_867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_450_i_i_i_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_452_i_i_i_fu_887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_454_i_i_i_fu_897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_456_i_i_i_fu_907_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_458_i_i_i_fu_921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_460_i_i_i_fu_931_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_462_i_i_i_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_464_i_i_i_fu_955_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_466_i_i_i_fu_965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_468_i_i_i_fu_975_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_470_i_i_i_fu_993_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_472_i_i_i_fu_1003_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_474_i_i_i_fu_1013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_476_i_i_i_fu_1023_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_478_i_i_i_fu_1033_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_480_i_i_i_fu_1043_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_482_i_i_i_fu_1053_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_484_i_i_i_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_1068_p7 : STD_LOGIC_VECTOR (191 downto 0);
    signal task_cnt_fu_154 : STD_LOGIC_VECTOR (31 downto 0);
    signal task_cnt_1_fu_1291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal FILTER_S_prev_i_i_i_fu_158 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_W_T_prev_fu_162 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_H_T_prev_fu_166 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_NUM_T_prev_fu_170 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_IN_NUM_T_prev_1_fu_1296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_425_i_i_i_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_427_i_i_i_fu_762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_429_i_i_i_fu_772_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_431_i_i_i_fu_782_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_433_i_i_i_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_435_i_i_i_fu_802_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_437_i_i_i_fu_812_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_439_i_i_i_fu_822_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_441_i_i_i_fu_832_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_443_i_i_i_fu_842_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_445_i_i_i_fu_852_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_447_i_i_i_fu_862_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_449_i_i_i_fu_872_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_451_i_i_i_fu_882_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_453_i_i_i_fu_892_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_455_i_i_i_fu_902_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_457_i_i_i_fu_916_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_459_i_i_i_fu_926_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_461_i_i_i_fu_940_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_463_i_i_i_fu_950_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_465_i_i_i_fu_960_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_467_i_i_i_fu_970_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_469_i_i_i_fu_988_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_471_i_i_i_fu_998_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_473_i_i_i_fu_1008_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_475_i_i_i_fu_1018_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_477_i_i_i_fu_1028_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_479_i_i_i_fu_1038_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_481_i_i_i_fu_1048_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_483_i_i_i_fu_1058_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_609_fu_1130_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_608_fu_1123_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_487_i_i_i_fu_1137_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_507_i_i_i_fu_1151_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_489_i_i_i_fu_1174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_490_i_i_i_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_491_i_i_i_fu_1188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_492_i_i_i_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_fu_1182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_i_i_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_611_fu_1218_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_523_i_i_i_fu_1227_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_522_i_i_i_fu_1222_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_494_i_i_i_fu_1237_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_613_fu_1256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_612_fu_1251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_615_fu_1267_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_497_i_i_i_fu_1274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_499_i_i_i_fu_1321_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal tmp_503_i_i_i_fu_1367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_i_i_i_fu_1415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_i_i_i_fu_1425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_i_i_i_fu_1435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp14_i_i_i_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_i_i_i_fu_1430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_i_i_i_fu_1420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_i_65_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_524_i_i_i_fu_1456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond9_i_i_i_fu_1451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond10_i_i_i_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_i_i_i_fu_1462_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel60_i_i_i_fu_1483_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel61_i_i_i_fu_1490_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel63_i_i_i_fu_1506_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel64_i_i_i_fu_1513_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel66_i_i_i_fu_1529_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel67_i_i_i_fu_1536_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_505_i_i_i_fu_1411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel69_i_i_i_fu_1552_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_513_not_i_i_i_fu_1573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_515_not_i_i_i_fu_1583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp_i_i_i_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp9_i_i_i_fu_1588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp163_i_i_i_fu_1593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_i_i_i_fu_1567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp33_i_i_i_fu_1599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_512_not_i_i_i_fu_1611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sel_tmp1_i_i_i_fu_1616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp165_i_i_i_fu_1627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp164_i_i_i_fu_1621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal num_tile_fu_1405_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel71_i_i_i_fu_1639_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel72_i_i_i_fu_1647_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel74_i_i_i_fu_1663_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel75_i_i_i_fu_1671_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel77_i_i_i_fu_1687_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1340_ap_start : STD_LOGIC;
    signal grp_fu_1340_ap_done : STD_LOGIC;
    signal grp_fu_1344_ap_start : STD_LOGIC;
    signal grp_fu_1344_ap_done : STD_LOGIC;
    signal ap_block_state72_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (71 downto 0);

    component cin_load_ddr_read IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_global_cin_V_AWVALID : OUT STD_LOGIC;
        m_axi_global_cin_V_AWREADY : IN STD_LOGIC;
        m_axi_global_cin_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_global_cin_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_global_cin_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_global_cin_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_global_cin_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_global_cin_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_global_cin_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_global_cin_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_global_cin_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_global_cin_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_global_cin_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_global_cin_V_WVALID : OUT STD_LOGIC;
        m_axi_global_cin_V_WREADY : IN STD_LOGIC;
        m_axi_global_cin_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_global_cin_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_global_cin_V_WLAST : OUT STD_LOGIC;
        m_axi_global_cin_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_global_cin_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_global_cin_V_ARVALID : OUT STD_LOGIC;
        m_axi_global_cin_V_ARREADY : IN STD_LOGIC;
        m_axi_global_cin_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_global_cin_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_global_cin_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_global_cin_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_global_cin_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_global_cin_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_global_cin_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_global_cin_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_global_cin_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_global_cin_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_global_cin_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_global_cin_V_RVALID : IN STD_LOGIC;
        m_axi_global_cin_V_RREADY : OUT STD_LOGIC;
        m_axi_global_cin_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_global_cin_V_RLAST : IN STD_LOGIC;
        m_axi_global_cin_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_global_cin_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_global_cin_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_global_cin_V_BVALID : IN STD_LOGIC;
        m_axi_global_cin_V_BREADY : OUT STD_LOGIC;
        m_axi_global_cin_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_global_cin_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_global_cin_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        global_cin_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
        cin_burst_buf_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        cin_burst_buf_V_ce0 : OUT STD_LOGIC;
        cin_burst_buf_V_we0 : OUT STD_LOGIC;
        cin_burst_buf_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        LAYER_IN_H_HW : IN STD_LOGIC_VECTOR (31 downto 0);
        LAYER_IN_W_HW : IN STD_LOGIC_VECTOR (31 downto 0);
        LAYER_IN_NUM_T : IN STD_LOGIC_VECTOR (15 downto 0);
        LAYER_IN_H_T : IN STD_LOGIC_VECTOR (31 downto 0);
        LAYER_IN_W_T : IN STD_LOGIC_VECTOR (31 downto 0);
        FILTER_S : IN STD_LOGIC_VECTOR (15 downto 0);
        cin_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        in_num_iter : IN STD_LOGIC_VECTOR (31 downto 0);
        in_h_iter : IN STD_LOGIC_VECTOR (31 downto 0);
        in_w_iter : IN STD_LOGIC_VECTOR (31 downto 0);
        num_tile : IN STD_LOGIC_VECTOR (31 downto 0);
        change : IN STD_LOGIC;
        max_pool : IN STD_LOGIC );
    end component;


    component cin_load_fifo_write IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cin_burst_buf_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        cin_burst_buf_V_ce0 : OUT STD_LOGIC;
        cin_burst_buf_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        fifo_cin_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        fifo_cin_V_V_full_n : IN STD_LOGIC;
        fifo_cin_V_V_write : OUT STD_LOGIC;
        LAYER_IN_NUM_T : IN STD_LOGIC_VECTOR (31 downto 0);
        LAYER_IN_H_T : IN STD_LOGIC_VECTOR (31 downto 0);
        LAYER_IN_W_T : IN STD_LOGIC_VECTOR (31 downto 0);
        FILTER_S : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_kernel_udiv_3kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_kernel_mul_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cin_load13_cin_buibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (511 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;



begin
    cin_burst_buf_ping_V_U : component cin_load13_cin_buibs
    generic map (
        DataWidth => 512,
        AddressRange => 5488,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cin_burst_buf_ping_V_address0,
        ce0 => cin_burst_buf_ping_V_ce0,
        we0 => cin_burst_buf_ping_V_we0,
        d0 => grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_d0,
        q0 => cin_burst_buf_ping_V_q0);

    cin_burst_buf_pong_V_U : component cin_load13_cin_buibs
    generic map (
        DataWidth => 512,
        AddressRange => 5488,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cin_burst_buf_pong_V_address0,
        ce0 => cin_burst_buf_pong_V_ce0,
        we0 => cin_burst_buf_pong_V_we0,
        d0 => grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_d0,
        q0 => cin_burst_buf_pong_V_q0);

    grp_cin_load_ddr_read_fu_657 : component cin_load_ddr_read
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cin_load_ddr_read_fu_657_ap_start,
        ap_done => grp_cin_load_ddr_read_fu_657_ap_done,
        ap_idle => grp_cin_load_ddr_read_fu_657_ap_idle,
        ap_ready => grp_cin_load_ddr_read_fu_657_ap_ready,
        m_axi_global_cin_V_AWVALID => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWVALID,
        m_axi_global_cin_V_AWREADY => ap_const_logic_0,
        m_axi_global_cin_V_AWADDR => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWADDR,
        m_axi_global_cin_V_AWID => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWID,
        m_axi_global_cin_V_AWLEN => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWLEN,
        m_axi_global_cin_V_AWSIZE => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWSIZE,
        m_axi_global_cin_V_AWBURST => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWBURST,
        m_axi_global_cin_V_AWLOCK => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWLOCK,
        m_axi_global_cin_V_AWCACHE => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWCACHE,
        m_axi_global_cin_V_AWPROT => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWPROT,
        m_axi_global_cin_V_AWQOS => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWQOS,
        m_axi_global_cin_V_AWREGION => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWREGION,
        m_axi_global_cin_V_AWUSER => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_AWUSER,
        m_axi_global_cin_V_WVALID => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WVALID,
        m_axi_global_cin_V_WREADY => ap_const_logic_0,
        m_axi_global_cin_V_WDATA => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WDATA,
        m_axi_global_cin_V_WSTRB => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WSTRB,
        m_axi_global_cin_V_WLAST => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WLAST,
        m_axi_global_cin_V_WID => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WID,
        m_axi_global_cin_V_WUSER => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_WUSER,
        m_axi_global_cin_V_ARVALID => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARVALID,
        m_axi_global_cin_V_ARREADY => m_axi_global_cin_V_ARREADY,
        m_axi_global_cin_V_ARADDR => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARADDR,
        m_axi_global_cin_V_ARID => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARID,
        m_axi_global_cin_V_ARLEN => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARLEN,
        m_axi_global_cin_V_ARSIZE => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARSIZE,
        m_axi_global_cin_V_ARBURST => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARBURST,
        m_axi_global_cin_V_ARLOCK => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARLOCK,
        m_axi_global_cin_V_ARCACHE => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARCACHE,
        m_axi_global_cin_V_ARPROT => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARPROT,
        m_axi_global_cin_V_ARQOS => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARQOS,
        m_axi_global_cin_V_ARREGION => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARREGION,
        m_axi_global_cin_V_ARUSER => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARUSER,
        m_axi_global_cin_V_RVALID => m_axi_global_cin_V_RVALID,
        m_axi_global_cin_V_RREADY => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_RREADY,
        m_axi_global_cin_V_RDATA => m_axi_global_cin_V_RDATA,
        m_axi_global_cin_V_RLAST => m_axi_global_cin_V_RLAST,
        m_axi_global_cin_V_RID => m_axi_global_cin_V_RID,
        m_axi_global_cin_V_RUSER => m_axi_global_cin_V_RUSER,
        m_axi_global_cin_V_RRESP => m_axi_global_cin_V_RRESP,
        m_axi_global_cin_V_BVALID => ap_const_logic_0,
        m_axi_global_cin_V_BREADY => grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_BREADY,
        m_axi_global_cin_V_BRESP => ap_const_lv2_0,
        m_axi_global_cin_V_BID => ap_const_lv1_0,
        m_axi_global_cin_V_BUSER => ap_const_lv1_0,
        global_cin_V_offset => global_cin_V_offset,
        cin_burst_buf_V_address0 => grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_address0,
        cin_burst_buf_V_ce0 => grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_ce0,
        cin_burst_buf_V_we0 => grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_we0,
        cin_burst_buf_V_d0 => grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_d0,
        LAYER_IN_H_HW => p_Repl2_29_reg_1819,
        LAYER_IN_W_HW => p_Repl2_28_reg_1837,
        LAYER_IN_NUM_T => LAYER_IN_NUM_T_V_reg_2036,
        LAYER_IN_H_T => LAYER_IN_H_T_prev_2_reg_2060,
        LAYER_IN_W_T => LAYER_IN_W_T_prev_2_reg_2070,
        FILTER_S => FILTER_S_reg_2150,
        cin_offset => cin_offset_reg_1933,
        in_num_iter => in_num_iter_i_i_i_reg_503,
        in_h_iter => in_h_iter_i_i_i_reg_527,
        in_w_iter => in_w_iter_i_i_i_reg_539,
        num_tile => num_tile_i_i_i_reg_586,
        change => grp_cin_load_ddr_read_fu_657_change,
        max_pool => grp_cin_load_ddr_read_fu_657_max_pool);

    grp_cin_load_fifo_write_fu_682 : component cin_load_fifo_write
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cin_load_fifo_write_fu_682_ap_start,
        ap_done => grp_cin_load_fifo_write_fu_682_ap_done,
        ap_idle => grp_cin_load_fifo_write_fu_682_ap_idle,
        ap_ready => grp_cin_load_fifo_write_fu_682_ap_ready,
        cin_burst_buf_V_address0 => grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_address0,
        cin_burst_buf_V_ce0 => grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_ce0,
        cin_burst_buf_V_q0 => grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_q0,
        fifo_cin_V_V_din => grp_cin_load_fifo_write_fu_682_fifo_cin_V_V_din,
        fifo_cin_V_V_full_n => fifo_cin_load_0_V_V_full_n,
        fifo_cin_V_V_write => grp_cin_load_fifo_write_fu_682_fifo_cin_V_V_write,
        LAYER_IN_NUM_T => reg_724,
        LAYER_IN_H_T => reg_719,
        LAYER_IN_W_T => reg_714,
        FILTER_S => reg_709);

    top_kernel_udiv_3kbM_U46 : component top_kernel_udiv_3kbM
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1340_ap_start,
        done => grp_fu_1340_ap_done,
        din0 => p_Repl2_34_reg_1905,
        din1 => LAYER_IN_W_T_prev_2_reg_2070,
        ce => ap_const_logic_1,
        dout => grp_fu_1340_p2);

    top_kernel_udiv_3kbM_U47 : component top_kernel_udiv_3kbM
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1344_ap_start,
        done => grp_fu_1344_ap_done,
        din0 => p_Repl2_35_reg_1887,
        din1 => LAYER_IN_H_T_prev_2_reg_2060,
        ce => ap_const_logic_1,
        dout => grp_fu_1344_p2);

    top_kernel_mul_32bkb_U48 : component top_kernel_mul_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ret_V_28_reg_2222,
        din1 => ret_V_reg_2217,
        ce => ap_const_logic_1,
        dout => grp_fu_1348_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state72) and (ap_const_boolean_0 = ap_block_state72_on_subcall_done))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_cin_load_ddr_read_fu_657_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cin_load_ddr_read_fu_657_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_1) and (or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_reg_1756 = ap_const_lv1_1) and (tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((tmp_reg_1756 = ap_const_lv1_1) and (or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_reg_1756 = ap_const_lv1_1) and (tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))))) then 
                    grp_cin_load_ddr_read_fu_657_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cin_load_ddr_read_fu_657_ap_ready = ap_const_logic_1)) then 
                    grp_cin_load_ddr_read_fu_657_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cin_load_fifo_write_fu_682_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cin_load_fifo_write_fu_682_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_reg_1756 = ap_const_lv1_1) and (tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((tmp_reg_1756 = ap_const_lv1_1) and (or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_reg_1756 = ap_const_lv1_1) and (tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))) or ((tmp_fu_737_p1 = ap_const_lv1_1) and (ap_phi_mux_done_i_i_i_phi_fu_579_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_phi_mux_done_i_i_i_phi_fu_579_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_737_p1 = ap_const_lv1_0)))) then 
                    grp_cin_load_fifo_write_fu_682_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cin_load_fifo_write_fu_682_ap_ready = ap_const_logic_1)) then 
                    grp_cin_load_fifo_write_fu_682_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    channel_iter_1_i_i_i_reg_646_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (tmp_500_i_i_i_fu_1330_p2 = ap_const_lv1_0))) then 
                channel_iter_1_i_i_i_reg_646 <= ap_const_lv32_0;
            elsif (((tmp_500_i_i_i_reg_2204 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                channel_iter_1_i_i_i_reg_646 <= channel_iter_fu_1352_p2;
            end if; 
        end if;
    end process;

    channel_iter_i_i_i_reg_610_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                channel_iter_i_i_i_reg_610 <= newSel78_i_i_i_fu_1695_p3;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                channel_iter_i_i_i_reg_610 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    done_i_i_i_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                done_i_i_i_reg_575 <= done_be_i_i_i_fu_1633_p2;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                done_i_i_i_reg_575 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    in_h_iter_i_i_i_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                in_h_iter_i_i_i_reg_527 <= newSel65_i_i_i_fu_1521_p3;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                in_h_iter_i_i_i_reg_527 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    in_num_iter_i_i_i_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                in_num_iter_i_i_i_reg_503 <= newSel59_i_i_i_fu_1475_p3;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                in_num_iter_i_i_i_reg_503 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    in_w_iter_i_i_i_reg_539_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                in_w_iter_i_i_i_reg_539 <= newSel68_i_i_i_fu_1544_p3;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                in_w_iter_i_i_i_reg_539 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    inter_tile_1_i_i_i_reg_635_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (tmp_500_i_i_i_fu_1330_p2 = ap_const_lv1_0))) then 
                inter_tile_1_i_i_i_reg_635 <= inter_tile_fu_1334_p2;
            elsif (((tmp_500_i_i_i_reg_2204 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                inter_tile_1_i_i_i_reg_635 <= inter_tile_i_i_i_reg_598;
            end if; 
        end if;
    end process;

    inter_tile_i_i_i_reg_598_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                inter_tile_i_i_i_reg_598 <= newSel76_i_i_i_fu_1679_p3;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                inter_tile_i_i_i_reg_598 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    layer_iter_i_i_i_reg_551_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                layer_iter_i_i_i_reg_551 <= newSel70_i_i_i_fu_1559_p3;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                layer_iter_i_i_i_reg_551 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    layer_start_1_i_i_i_reg_622_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1)))) then
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (layer_start_i_i_i_reg_563 = ap_const_lv1_0))) then 
                    layer_start_1_i_i_i_reg_622 <= layer_start_i_i_i_reg_563;
                elsif (((layer_start_i_i_i_reg_563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                    layer_start_1_i_i_i_reg_622 <= ap_const_lv1_0;
                end if;
            end if; 
        end if;
    end process;

    layer_start_i_i_i_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                layer_start_i_i_i_reg_563 <= layer_start_be_i_i_i_fu_1605_p2;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                layer_start_i_i_i_reg_563 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    num_tile_i_i_i_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                num_tile_i_i_i_reg_586 <= newSel73_i_i_i_fu_1655_p3;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                num_tile_i_i_i_reg_586 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    out_num_iter_i_i_i_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
                out_num_iter_i_i_i_reg_515 <= newSel62_i_i_i_fu_1498_p3;
            elsif ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                out_num_iter_i_i_i_reg_515 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    task_cnt_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state25_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state25) and ((((tmp_614_reg_2186 = ap_const_lv1_1) and (tmp_610_reg_2178 = ap_const_lv1_0)) or ((or_cond5_i_i_i_reg_2190 = ap_const_lv1_1) and (tmp_610_reg_2178 = ap_const_lv1_0))) or ((tmp_495_i_i_i_reg_2182 = ap_const_lv1_1) and (tmp_610_reg_2178 = ap_const_lv1_0))))) then 
                task_cnt_fu_154 <= task_cnt_1_fu_1291_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                task_cnt_fu_154 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                FILTER_S1_V_reg_1974 <= FILTER_S1_V_fu_912_p1;
                p_Repl2_41_reg_1969 <= config_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                FILTER_S2_V_reg_1990 <= FILTER_S2_V_fu_936_p1;
                p_Repl2_39_reg_1996 <= config_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                    FILTER_S_cast_i_i_i_reg_2173(15 downto 0) <= FILTER_S_cast_i_i_i_fu_1208_p1(15 downto 0);
                tmp_610_reg_2178 <= p_Repl2_51_reg_2011(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state25_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state25) and ((((tmp_614_reg_2186 = ap_const_lv1_1) and (tmp_610_reg_2178 = ap_const_lv1_0)) or ((or_cond5_i_i_i_reg_2190 = ap_const_lv1_1) and (tmp_610_reg_2178 = ap_const_lv1_0))) or ((tmp_495_i_i_i_reg_2182 = ap_const_lv1_1) and (tmp_610_reg_2178 = ap_const_lv1_0))))) then
                    FILTER_S_prev_i_i_i_fu_158(15 downto 0) <= FILTER_S_cast_i_i_i_reg_2173(15 downto 0);
                LAYER_IN_H_T_prev_fu_166 <= LAYER_IN_H_T_prev_2_reg_2060;
                    LAYER_IN_NUM_T_prev_fu_170(15 downto 0) <= LAYER_IN_NUM_T_prev_1_fu_1296_p1(15 downto 0);
                LAYER_IN_W_T_prev_fu_162 <= LAYER_IN_W_T_prev_2_reg_2070;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                FILTER_S_reg_2150 <= FILTER_S_fu_1144_p3;
                change_layout_reg_2168 <= change_layout_fu_1202_p2;
                max_pool_reg_2163 <= max_pool_fu_1168_p2;
                    tmp_488_i_i_i_reg_2156(2 downto 1) <= tmp_488_i_i_i_fu_1160_p3(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                LAYER_IN_H_T_prev_2_reg_2060 <= config_r_q1;
                LAYER_IN_W_T_prev_2_reg_2070 <= config_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                LAYER_IN_NUM_T_V_reg_2036 <= LAYER_IN_NUM_T_V_fu_980_p1;
                LAYER_OUT_NUM_T_V_reg_2044 <= LAYER_OUT_NUM_T_V_fu_984_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                cin_offset_reg_1933 <= config_r_q0;
                p_Repl2_33_reg_1928 <= config_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                in_h_iter_reg_2237 <= in_h_iter_fu_1357_p2;
                in_w_iter_reg_2243 <= in_w_iter_fu_1362_p2;
                out_num_iter_reg_2249 <= out_num_iter_fu_1370_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state25_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                in_num_iter_reg_2198 <= in_num_iter_fu_1324_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                layer_iter_reg_2273 <= layer_iter_fu_1388_p2;
                sel_tmp13_demorgan_i_reg_2285 <= sel_tmp13_demorgan_i_fu_1399_p2;
                sel_tmp6_demorgan_i_s_reg_2279 <= sel_tmp6_demorgan_i_s_fu_1394_p2;
                tmp_501_i_i_i_reg_2255 <= tmp_501_i_i_i_fu_1376_p2;
                tmp_502_i_i_i_reg_2261 <= tmp_502_i_i_i_fu_1380_p2;
                tmp_504_i_i_i_reg_2267 <= tmp_504_i_i_i_fu_1384_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_0) and (tmp_614_fu_1261_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) then
                or_cond5_i_i_i_reg_2190 <= or_cond5_i_i_i_fu_1280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                p_2_i_i_i_reg_2227 <= grp_fu_1348_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                p_Repl2_27_reg_1860 <= config_r_q1;
                p_Repl2_37_reg_1865 <= config_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                p_Repl2_28_reg_1837 <= config_r_q1;
                p_Repl2_s_reg_1845 <= config_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                p_Repl2_29_reg_1819 <= config_r_q1;
                p_Repl2_30_reg_1814 <= config_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                p_Repl2_31_reg_1799 <= config_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                p_Repl2_32_reg_1913 <= config_r_q0;
                p_Repl2_34_reg_1905 <= config_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                p_Repl2_35_reg_1887 <= config_r_q0;
                p_Repl2_36_reg_1881 <= config_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                p_Repl2_42_reg_1954 <= config_r_q0;
                p_Repl2_43_reg_1949 <= config_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                p_Repl2_46_reg_1744 <= config_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                p_Repl2_50_reg_2021 <= config_r_q0;
                p_Repl2_51_reg_2011 <= config_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                p_Repl2_54_reg_2115 <= config_r_q0;
                p_Repl2_55_reg_2110 <= config_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                p_Repl2_56_reg_2095 <= config_r_q0;
                p_Repl2_57_reg_2090 <= config_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                p_Result_4_reg_2130 <= p_Result_4_fu_1079_p7;
                p_Result_5_reg_2135 <= p_Result_5_fu_1089_p8;
                p_Result_6_reg_2140 <= p_Result_6_fu_1100_p8;
                p_Result_7_reg_2145 <= p_Result_7_fu_1111_p7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))) or ((ap_phi_mux_done_i_i_i_phi_fu_579_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then
                    reg_709(15 downto 0) <= FILTER_S_prev_i_i_i_fu_158(15 downto 0);
                reg_714 <= LAYER_IN_W_T_prev_fu_162;
                reg_719 <= LAYER_IN_H_T_prev_fu_166;
                    reg_724(15 downto 0) <= LAYER_IN_NUM_T_prev_fu_170(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                ret_V_28_reg_2222 <= grp_fu_1344_p2;
                ret_V_reg_2217 <= grp_fu_1340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                task_cnt_load_reg_1750 <= task_cnt_fu_154;
                tmp_reg_1756 <= tmp_fu_737_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) then
                tmp_495_i_i_i_reg_2182 <= tmp_495_i_i_i_fu_1245_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))))) then
                tmp_498_i_i_i_reg_2194 <= tmp_498_i_i_i_fu_1286_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                tmp_500_i_i_i_reg_2204 <= tmp_500_i_i_i_fu_1330_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_phi_mux_done_i_i_i_phi_fu_579_p4 = ap_const_lv1_0))) then
                    tmp_603_reg_1760(31 downto 5) <= tmp_603_fu_741_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) then
                tmp_614_reg_2186 <= tmp_614_fu_1261_p2;
            end if;
        end if;
    end process;
    reg_709(31 downto 16) <= "0000000000000000";
    reg_724(31 downto 16) <= "0000000000000000";
    tmp_603_reg_1760(4 downto 0) <= "00000";
    tmp_488_i_i_i_reg_2156(0) <= '0';
    FILTER_S_cast_i_i_i_reg_2173(31 downto 16) <= "0000000000000000";
    FILTER_S_prev_i_i_i_fu_158(31 downto 16) <= "0000000000000000";
    LAYER_IN_NUM_T_prev_fu_170(31 downto 16) <= "0000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, config_weight_load_V_full_n, global_weight_V_offset_out_full_n, global_bias_V_offset_out_full_n, global_cout_V_offset_out_full_n, ap_CS_fsm_state19, layer_start_i_i_i_reg_563, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_phi_mux_done_i_i_i_phi_fu_579_p4, ap_CS_fsm_state25, ap_block_state25_on_subcall_done, tmp_500_i_i_i_fu_1330_p2, ap_CS_fsm_state26, ap_CS_fsm_state72, ap_block_state72_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_phi_mux_done_i_i_i_phi_fu_579_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if ((not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state19) and (layer_start_i_i_i_reg_563 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif ((not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1))) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (config_weight_load_V_full_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (config_weight_load_V_full_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (config_weight_load_V_full_n = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if ((not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((ap_const_boolean_0 = ap_block_state25_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (tmp_500_i_i_i_fu_1330_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state72 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state72) and (ap_const_boolean_0 = ap_block_state72_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    FILTER_S1_V_fu_912_p1 <= config_r_q0(16 - 1 downto 0);
    FILTER_S2_V_fu_936_p1 <= config_r_q1(16 - 1 downto 0);
    FILTER_S_cast_i_i_i_fu_1208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(FILTER_S_reg_2150),32));
    FILTER_S_fu_1144_p3 <= 
        FILTER_S1_V_reg_1974 when (tmp_608_fu_1123_p3(0) = '1') else 
        tmp_487_i_i_i_fu_1137_p3;
    LAYER_IN_NUM_T_V_fu_980_p1 <= config_r_q1(16 - 1 downto 0);
    LAYER_IN_NUM_T_prev_1_fu_1296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_IN_NUM_T_V_reg_2036),32));
    LAYER_OUT_NUM_T_V_fu_984_p1 <= config_r_q0(16 - 1 downto 0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state19_assign_proc : process(config_weight_load_V_full_n, layer_start_i_i_i_reg_563)
    begin
                ap_block_state19 <= ((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1));
    end process;


    ap_block_state2_assign_proc : process(global_weight_V_offset_out_full_n, global_bias_V_offset_out_full_n, global_cout_V_offset_out_full_n)
    begin
                ap_block_state2 <= ((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0));
    end process;


    ap_block_state23_assign_proc : process(config_weight_load_V_full_n, layer_start_i_i_i_reg_563)
    begin
                ap_block_state23 <= ((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1));
    end process;


    ap_block_state25_on_subcall_done_assign_proc : process(grp_cin_load_ddr_read_fu_657_ap_done, ap_predicate_op344_call_state25, grp_cin_load_fifo_write_fu_682_ap_done, ap_predicate_op345_call_state25, ap_predicate_op347_call_state25, ap_predicate_op348_call_state25, ap_predicate_op351_call_state25)
    begin
                ap_block_state25_on_subcall_done <= (((ap_predicate_op348_call_state25 = ap_const_boolean_1) and (grp_cin_load_fifo_write_fu_682_ap_done = ap_const_logic_0)) or ((ap_predicate_op345_call_state25 = ap_const_boolean_1) and (grp_cin_load_fifo_write_fu_682_ap_done = ap_const_logic_0)) or ((ap_predicate_op351_call_state25 = ap_const_boolean_1) and (grp_cin_load_ddr_read_fu_657_ap_done = ap_const_logic_0)) or ((ap_predicate_op347_call_state25 = ap_const_boolean_1) and (grp_cin_load_ddr_read_fu_657_ap_done = ap_const_logic_0)) or ((ap_predicate_op344_call_state25 = ap_const_boolean_1) and (grp_cin_load_ddr_read_fu_657_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state72_on_subcall_done_assign_proc : process(tmp_reg_1756, grp_cin_load_fifo_write_fu_682_ap_done)
    begin
                ap_block_state72_on_subcall_done <= (((grp_cin_load_fifo_write_fu_682_ap_done = ap_const_logic_0) and (tmp_reg_1756 = ap_const_lv1_1)) or ((grp_cin_load_fifo_write_fu_682_ap_done = ap_const_logic_0) and (tmp_reg_1756 = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state72, ap_block_state72_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) and (ap_const_boolean_0 = ap_block_state72_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_done_i_i_i_phi_fu_579_p4 <= done_i_i_i_reg_575;

    ap_predicate_op344_call_state25_assign_proc : process(tmp_reg_1756, tmp_610_reg_2178, tmp_495_i_i_i_reg_2182, tmp_614_reg_2186, or_cond5_i_i_i_reg_2190, tmp_498_i_i_i_reg_2194)
    begin
                ap_predicate_op344_call_state25 <= ((((tmp_614_reg_2186 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0) and (tmp_reg_1756 = ap_const_lv1_0)) or ((or_cond5_i_i_i_reg_2190 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0) and (tmp_reg_1756 = ap_const_lv1_0))) or ((tmp_495_i_i_i_reg_2182 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0) and (tmp_reg_1756 = ap_const_lv1_0)));
    end process;


    ap_predicate_op345_call_state25_assign_proc : process(tmp_reg_1756, tmp_610_reg_2178, tmp_495_i_i_i_reg_2182, tmp_614_reg_2186, or_cond5_i_i_i_reg_2190, tmp_498_i_i_i_reg_2194)
    begin
                ap_predicate_op345_call_state25 <= ((((tmp_614_reg_2186 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0) and (tmp_reg_1756 = ap_const_lv1_0)) or ((or_cond5_i_i_i_reg_2190 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0) and (tmp_reg_1756 = ap_const_lv1_0))) or ((tmp_495_i_i_i_reg_2182 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0) and (tmp_reg_1756 = ap_const_lv1_0)));
    end process;


    ap_predicate_op347_call_state25_assign_proc : process(tmp_reg_1756, tmp_610_reg_2178, tmp_495_i_i_i_reg_2182, tmp_614_reg_2186, or_cond5_i_i_i_reg_2190, tmp_498_i_i_i_reg_2194)
    begin
                ap_predicate_op347_call_state25 <= ((((tmp_614_reg_2186 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0)) or ((or_cond5_i_i_i_reg_2190 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0))) or ((tmp_495_i_i_i_reg_2182 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0)));
    end process;


    ap_predicate_op348_call_state25_assign_proc : process(tmp_reg_1756, tmp_610_reg_2178, tmp_495_i_i_i_reg_2182, tmp_614_reg_2186, or_cond5_i_i_i_reg_2190, tmp_498_i_i_i_reg_2194)
    begin
                ap_predicate_op348_call_state25 <= ((((tmp_614_reg_2186 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0)) or ((or_cond5_i_i_i_reg_2190 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0))) or ((tmp_495_i_i_i_reg_2182 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_1) and (tmp_498_i_i_i_reg_2194 = ap_const_lv1_0) and (tmp_610_reg_2178 = ap_const_lv1_0)));
    end process;


    ap_predicate_op351_call_state25_assign_proc : process(tmp_610_reg_2178, tmp_495_i_i_i_reg_2182, tmp_614_reg_2186, or_cond5_i_i_i_reg_2190, tmp_498_i_i_i_reg_2194)
    begin
                ap_predicate_op351_call_state25 <= ((((tmp_498_i_i_i_reg_2194 = ap_const_lv1_1) and (tmp_614_reg_2186 = ap_const_lv1_1) and (tmp_610_reg_2178 = ap_const_lv1_0)) or ((tmp_498_i_i_i_reg_2194 = ap_const_lv1_1) and (or_cond5_i_i_i_reg_2190 = ap_const_lv1_1) and (tmp_610_reg_2178 = ap_const_lv1_0))) or ((tmp_498_i_i_i_reg_2194 = ap_const_lv1_1) and (tmp_495_i_i_i_reg_2182 = ap_const_lv1_1) and (tmp_610_reg_2178 = ap_const_lv1_0)));
    end process;

    ap_ready <= internal_ap_ready;
    change_layout_fu_1202_p2 <= (p_i_i_i_fu_1196_p2 and or_cond_i_i_i_fu_1182_p2);
    channel_iter_fu_1352_p2 <= std_logic_vector(unsigned(p_2_i_i_i_reg_2227) + unsigned(channel_iter_i_i_i_reg_610));

    cin_burst_buf_ping_V_address0_assign_proc : process(tmp_reg_1756, ap_CS_fsm_state25, ap_predicate_op344_call_state25, ap_predicate_op348_call_state25, ap_predicate_op351_call_state25, grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_address0, grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_address0, ap_CS_fsm_state72)
    begin
        if ((((tmp_reg_1756 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((ap_predicate_op348_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            cin_burst_buf_ping_V_address0 <= grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_address0;
        elsif ((((ap_predicate_op351_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_predicate_op344_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            cin_burst_buf_ping_V_address0 <= grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_address0;
        else 
            cin_burst_buf_ping_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    cin_burst_buf_ping_V_ce0_assign_proc : process(tmp_reg_1756, ap_CS_fsm_state25, ap_predicate_op344_call_state25, ap_predicate_op348_call_state25, ap_predicate_op351_call_state25, grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_ce0, grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_ce0, ap_CS_fsm_state72)
    begin
        if ((((tmp_reg_1756 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((ap_predicate_op348_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            cin_burst_buf_ping_V_ce0 <= grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_ce0;
        elsif ((((ap_predicate_op351_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_predicate_op344_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            cin_burst_buf_ping_V_ce0 <= grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_ce0;
        else 
            cin_burst_buf_ping_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cin_burst_buf_ping_V_we0_assign_proc : process(ap_CS_fsm_state25, ap_predicate_op344_call_state25, ap_predicate_op351_call_state25, grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_we0)
    begin
        if ((((ap_predicate_op351_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_predicate_op344_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            cin_burst_buf_ping_V_we0 <= grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_we0;
        else 
            cin_burst_buf_ping_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cin_burst_buf_pong_V_address0_assign_proc : process(tmp_reg_1756, ap_CS_fsm_state25, ap_predicate_op345_call_state25, ap_predicate_op347_call_state25, grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_address0, grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_address0, ap_CS_fsm_state72)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state72) and (tmp_reg_1756 = ap_const_lv1_0)) or ((ap_predicate_op345_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            cin_burst_buf_pong_V_address0 <= grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_address0;
        elsif (((ap_predicate_op347_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            cin_burst_buf_pong_V_address0 <= grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_address0;
        else 
            cin_burst_buf_pong_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    cin_burst_buf_pong_V_ce0_assign_proc : process(tmp_reg_1756, ap_CS_fsm_state25, ap_predicate_op345_call_state25, ap_predicate_op347_call_state25, grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_ce0, grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_ce0, ap_CS_fsm_state72)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state72) and (tmp_reg_1756 = ap_const_lv1_0)) or ((ap_predicate_op345_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            cin_burst_buf_pong_V_ce0 <= grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_ce0;
        elsif (((ap_predicate_op347_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            cin_burst_buf_pong_V_ce0 <= grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_ce0;
        else 
            cin_burst_buf_pong_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cin_burst_buf_pong_V_we0_assign_proc : process(ap_CS_fsm_state25, ap_predicate_op347_call_state25, grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_we0)
    begin
        if (((ap_predicate_op347_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            cin_burst_buf_pong_V_we0 <= grp_cin_load_ddr_read_fu_657_cin_burst_buf_V_we0;
        else 
            cin_burst_buf_pong_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    config_r_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, tmp_424_i_i_i_fu_747_p1, tmp_426_i_i_i_fu_757_p1, tmp_432_i_i_i_fu_787_p1, tmp_436_i_i_i_fu_807_p1, tmp_440_i_i_i_fu_827_p1, tmp_444_i_i_i_fu_847_p1, tmp_448_i_i_i_fu_867_p1, tmp_452_i_i_i_fu_887_p1, tmp_456_i_i_i_fu_907_p1, tmp_460_i_i_i_fu_931_p1, tmp_464_i_i_i_fu_955_p1, tmp_468_i_i_i_fu_975_p1, tmp_472_i_i_i_fu_1003_p1, tmp_476_i_i_i_fu_1023_p1, tmp_480_i_i_i_fu_1043_p1, tmp_484_i_i_i_fu_1063_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            config_r_address0 <= tmp_484_i_i_i_fu_1063_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            config_r_address0 <= tmp_480_i_i_i_fu_1043_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            config_r_address0 <= tmp_476_i_i_i_fu_1023_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            config_r_address0 <= tmp_472_i_i_i_fu_1003_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            config_r_address0 <= tmp_468_i_i_i_fu_975_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            config_r_address0 <= tmp_464_i_i_i_fu_955_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            config_r_address0 <= tmp_460_i_i_i_fu_931_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            config_r_address0 <= tmp_456_i_i_i_fu_907_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            config_r_address0 <= tmp_452_i_i_i_fu_887_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            config_r_address0 <= tmp_448_i_i_i_fu_867_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            config_r_address0 <= tmp_444_i_i_i_fu_847_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            config_r_address0 <= tmp_440_i_i_i_fu_827_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            config_r_address0 <= tmp_436_i_i_i_fu_807_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            config_r_address0 <= tmp_432_i_i_i_fu_787_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            config_r_address0 <= tmp_426_i_i_i_fu_757_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            config_r_address0 <= tmp_424_i_i_i_fu_747_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            config_r_address0 <= ap_const_lv64_19(5 - 1 downto 0);
        else 
            config_r_address0 <= "XXXXX";
        end if; 
    end process;


    config_r_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, tmp_428_i_i_i_fu_767_p1, tmp_430_i_i_i_fu_777_p1, tmp_434_i_i_i_fu_797_p1, tmp_438_i_i_i_fu_817_p1, tmp_442_i_i_i_fu_837_p1, tmp_446_i_i_i_fu_857_p1, tmp_450_i_i_i_fu_877_p1, tmp_454_i_i_i_fu_897_p1, tmp_458_i_i_i_fu_921_p1, tmp_462_i_i_i_fu_945_p1, tmp_466_i_i_i_fu_965_p1, tmp_470_i_i_i_fu_993_p1, tmp_474_i_i_i_fu_1013_p1, tmp_478_i_i_i_fu_1033_p1, tmp_482_i_i_i_fu_1053_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            config_r_address1 <= tmp_482_i_i_i_fu_1053_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            config_r_address1 <= tmp_478_i_i_i_fu_1033_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            config_r_address1 <= tmp_474_i_i_i_fu_1013_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            config_r_address1 <= tmp_470_i_i_i_fu_993_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            config_r_address1 <= tmp_466_i_i_i_fu_965_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            config_r_address1 <= tmp_462_i_i_i_fu_945_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            config_r_address1 <= tmp_458_i_i_i_fu_921_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            config_r_address1 <= tmp_454_i_i_i_fu_897_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            config_r_address1 <= tmp_450_i_i_i_fu_877_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            config_r_address1 <= tmp_446_i_i_i_fu_857_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            config_r_address1 <= tmp_442_i_i_i_fu_837_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            config_r_address1 <= tmp_438_i_i_i_fu_817_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            config_r_address1 <= tmp_434_i_i_i_fu_797_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            config_r_address1 <= tmp_430_i_i_i_fu_777_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            config_r_address1 <= tmp_428_i_i_i_fu_767_p1(5 - 1 downto 0);
        else 
            config_r_address1 <= "XXXXX";
        end if; 
    end process;


    config_r_ce0_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            config_r_ce0 <= ap_const_logic_1;
        else 
            config_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    config_r_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            config_r_ce1 <= ap_const_logic_1;
        else 
            config_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    config_weight_load_V_blk_n_assign_proc : process(config_weight_load_V_full_n, ap_CS_fsm_state19, layer_start_i_i_i_reg_563, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((layer_start_i_i_i_reg_563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((layer_start_i_i_i_reg_563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            config_weight_load_V_blk_n <= config_weight_load_V_full_n;
        else 
            config_weight_load_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    config_weight_load_V_din_assign_proc : process(config_weight_load_V_full_n, ap_CS_fsm_state19, layer_start_i_i_i_reg_563, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, p_Result_4_reg_2130, p_Result_5_reg_2135, p_Result_6_reg_2140, p_Result_7_reg_2145, p_Result_s_fu_1068_p7)
    begin
        if ((not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1))) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            config_weight_load_V_din <= p_Result_7_reg_2145;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) and (config_weight_load_V_full_n = ap_const_logic_1))) then 
            config_weight_load_V_din <= p_Result_6_reg_2140;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (config_weight_load_V_full_n = ap_const_logic_1))) then 
            config_weight_load_V_din <= p_Result_5_reg_2135;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (config_weight_load_V_full_n = ap_const_logic_1))) then 
            config_weight_load_V_din <= p_Result_4_reg_2130;
        elsif ((not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1))) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            config_weight_load_V_din <= p_Result_s_fu_1068_p7;
        else 
            config_weight_load_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    config_weight_load_V_write_assign_proc : process(config_weight_load_V_full_n, ap_CS_fsm_state19, layer_start_i_i_i_reg_563, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state22) and (config_weight_load_V_full_n = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state21) and (config_weight_load_V_full_n = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (config_weight_load_V_full_n = ap_const_logic_1)) or (not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1))) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or (not(((config_weight_load_V_full_n = ap_const_logic_0) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1))) and (layer_start_i_i_i_reg_563 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            config_weight_load_V_write <= ap_const_logic_1;
        else 
            config_weight_load_V_write <= ap_const_logic_0;
        end if; 
    end process;

    done_be_i_i_i_fu_1633_p2 <= (tmp165_i_i_i_fu_1627_p2 and tmp164_i_i_i_fu_1621_p2);
    fifo_cin_load_0_V_V_din <= grp_cin_load_fifo_write_fu_682_fifo_cin_V_V_din;

    fifo_cin_load_0_V_V_write_assign_proc : process(tmp_reg_1756, ap_CS_fsm_state25, ap_predicate_op345_call_state25, ap_predicate_op348_call_state25, grp_cin_load_fifo_write_fu_682_fifo_cin_V_V_write, ap_CS_fsm_state72)
    begin
        if ((((tmp_reg_1756 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((ap_const_logic_1 = ap_CS_fsm_state72) and (tmp_reg_1756 = ap_const_lv1_0)) or ((ap_predicate_op348_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_predicate_op345_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            fifo_cin_load_0_V_V_write <= grp_cin_load_fifo_write_fu_682_fifo_cin_V_V_write;
        else 
            fifo_cin_load_0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    global_bias_V_offset_out_blk_n_assign_proc : process(global_bias_V_offset_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            global_bias_V_offset_out_blk_n <= global_bias_V_offset_out_full_n;
        else 
            global_bias_V_offset_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    global_bias_V_offset_out_din <= global_bias_V_offset;

    global_bias_V_offset_out_write_assign_proc : process(global_weight_V_offset_out_full_n, global_bias_V_offset_out_full_n, global_cout_V_offset_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            global_bias_V_offset_out_write <= ap_const_logic_1;
        else 
            global_bias_V_offset_out_write <= ap_const_logic_0;
        end if; 
    end process;


    global_cout_V_offset_out_blk_n_assign_proc : process(global_cout_V_offset_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            global_cout_V_offset_out_blk_n <= global_cout_V_offset_out_full_n;
        else 
            global_cout_V_offset_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    global_cout_V_offset_out_din <= global_cout_V_offset;

    global_cout_V_offset_out_write_assign_proc : process(global_weight_V_offset_out_full_n, global_bias_V_offset_out_full_n, global_cout_V_offset_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            global_cout_V_offset_out_write <= ap_const_logic_1;
        else 
            global_cout_V_offset_out_write <= ap_const_logic_0;
        end if; 
    end process;


    global_weight_V_offset_out_blk_n_assign_proc : process(global_weight_V_offset_out_full_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            global_weight_V_offset_out_blk_n <= global_weight_V_offset_out_full_n;
        else 
            global_weight_V_offset_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    global_weight_V_offset_out_din <= global_weight_V_offset;

    global_weight_V_offset_out_write_assign_proc : process(global_weight_V_offset_out_full_n, global_bias_V_offset_out_full_n, global_cout_V_offset_out_full_n, ap_CS_fsm_state2)
    begin
        if ((not(((global_cout_V_offset_out_full_n = ap_const_logic_0) or (global_bias_V_offset_out_full_n = ap_const_logic_0) or (global_weight_V_offset_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            global_weight_V_offset_out_write <= ap_const_logic_1;
        else 
            global_weight_V_offset_out_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_cin_load_ddr_read_fu_657_ap_start <= grp_cin_load_ddr_read_fu_657_ap_start_reg;
    grp_cin_load_ddr_read_fu_657_change <= change_layout_reg_2168(0);
    grp_cin_load_ddr_read_fu_657_max_pool <= max_pool_reg_2163(0);
    grp_cin_load_fifo_write_fu_682_ap_start <= grp_cin_load_fifo_write_fu_682_ap_start_reg;

    grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_q0_assign_proc : process(tmp_reg_1756, ap_CS_fsm_state25, ap_predicate_op345_call_state25, ap_predicate_op348_call_state25, cin_burst_buf_ping_V_q0, cin_burst_buf_pong_V_q0, ap_CS_fsm_state72)
    begin
        if ((((tmp_reg_1756 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((ap_predicate_op348_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_q0 <= cin_burst_buf_ping_V_q0;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state72) and (tmp_reg_1756 = ap_const_lv1_0)) or ((ap_predicate_op345_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_q0 <= cin_burst_buf_pong_V_q0;
        else 
            grp_cin_load_fifo_write_fu_682_cin_burst_buf_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1340_ap_start_assign_proc : process(tmp_500_i_i_i_fu_1330_p2, ap_CS_fsm_state26)
    begin
        if (((tmp_500_i_i_i_fu_1330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            grp_fu_1340_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1340_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1344_ap_start_assign_proc : process(tmp_500_i_i_i_fu_1330_p2, ap_CS_fsm_state26)
    begin
        if (((tmp_500_i_i_i_fu_1330_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            grp_fu_1344_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1344_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    in_h_iter_fu_1357_p2 <= std_logic_vector(unsigned(in_h_iter_i_i_i_reg_527) + unsigned(LAYER_IN_H_T_prev_2_reg_2060));
    in_num_iter_fu_1324_p2 <= std_logic_vector(unsigned(in_num_iter_i_i_i_reg_503) + unsigned(tmp_499_i_i_i_fu_1321_p1));
    in_w_iter_fu_1362_p2 <= std_logic_vector(unsigned(in_w_iter_i_i_i_reg_539) + unsigned(LAYER_IN_W_T_prev_2_reg_2070));
    inter_tile_fu_1334_p2 <= std_logic_vector(unsigned(inter_tile_i_i_i_reg_598) + unsigned(ap_const_lv32_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state72, ap_block_state72_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state72) and (ap_const_boolean_0 = ap_block_state72_on_subcall_done))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    layer_iter_fu_1388_p2 <= std_logic_vector(unsigned(layer_iter_i_i_i_reg_551) + unsigned(ap_const_lv32_1));
    layer_start_be_i_i_i_fu_1605_p2 <= (sel_tmp33_i_i_i_fu_1599_p2 or layer_start_1_i_i_i_reg_622);
    m_axi_global_cin_V_ARADDR <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARADDR;
    m_axi_global_cin_V_ARBURST <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARBURST;
    m_axi_global_cin_V_ARCACHE <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARCACHE;
    m_axi_global_cin_V_ARID <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARID;
    m_axi_global_cin_V_ARLEN <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARLEN;
    m_axi_global_cin_V_ARLOCK <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARLOCK;
    m_axi_global_cin_V_ARPROT <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARPROT;
    m_axi_global_cin_V_ARQOS <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARQOS;
    m_axi_global_cin_V_ARREGION <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARREGION;
    m_axi_global_cin_V_ARSIZE <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARSIZE;
    m_axi_global_cin_V_ARUSER <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARUSER;

    m_axi_global_cin_V_ARVALID_assign_proc : process(ap_CS_fsm_state24, tmp_610_fu_1211_p3, or_cond5_i_i_i_fu_1280_p2, tmp_498_i_i_i_fu_1286_p2, tmp_614_fu_1261_p2, tmp_495_i_i_i_fu_1245_p2, tmp_reg_1756, ap_CS_fsm_state25, ap_predicate_op344_call_state25, ap_predicate_op347_call_state25, ap_predicate_op351_call_state25, grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARVALID)
    begin
        if ((((ap_predicate_op351_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_predicate_op347_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_predicate_op344_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_1) and (or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_reg_1756 = ap_const_lv1_1) and (tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((tmp_reg_1756 = ap_const_lv1_1) and (or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_reg_1756 = ap_const_lv1_1) and (tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))))) then 
            m_axi_global_cin_V_ARVALID <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_ARVALID;
        else 
            m_axi_global_cin_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_global_cin_V_AWADDR <= ap_const_lv64_0;
    m_axi_global_cin_V_AWBURST <= ap_const_lv2_0;
    m_axi_global_cin_V_AWCACHE <= ap_const_lv4_0;
    m_axi_global_cin_V_AWID <= ap_const_lv1_0;
    m_axi_global_cin_V_AWLEN <= ap_const_lv32_0;
    m_axi_global_cin_V_AWLOCK <= ap_const_lv2_0;
    m_axi_global_cin_V_AWPROT <= ap_const_lv3_0;
    m_axi_global_cin_V_AWQOS <= ap_const_lv4_0;
    m_axi_global_cin_V_AWREGION <= ap_const_lv4_0;
    m_axi_global_cin_V_AWSIZE <= ap_const_lv3_0;
    m_axi_global_cin_V_AWUSER <= ap_const_lv1_0;
    m_axi_global_cin_V_AWVALID <= ap_const_logic_0;
    m_axi_global_cin_V_BREADY <= ap_const_logic_0;

    m_axi_global_cin_V_RREADY_assign_proc : process(ap_CS_fsm_state24, tmp_610_fu_1211_p3, or_cond5_i_i_i_fu_1280_p2, tmp_498_i_i_i_fu_1286_p2, tmp_614_fu_1261_p2, tmp_495_i_i_i_fu_1245_p2, tmp_reg_1756, ap_CS_fsm_state25, ap_predicate_op344_call_state25, ap_predicate_op347_call_state25, ap_predicate_op351_call_state25, grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_RREADY)
    begin
        if ((((ap_predicate_op351_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_predicate_op347_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_predicate_op344_call_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_1) and (or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_1) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_reg_1756 = ap_const_lv1_1) and (tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((tmp_reg_1756 = ap_const_lv1_1) and (or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_reg_1756 = ap_const_lv1_1) and (tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_614_fu_1261_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)) or ((or_cond5_i_i_i_fu_1280_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0))) or ((tmp_495_i_i_i_fu_1245_p2 = ap_const_lv1_1) and (tmp_reg_1756 = ap_const_lv1_0) and (tmp_498_i_i_i_fu_1286_p2 = ap_const_lv1_0) and (tmp_610_fu_1211_p3 = ap_const_lv1_0)))))) then 
            m_axi_global_cin_V_RREADY <= grp_cin_load_ddr_read_fu_657_m_axi_global_cin_V_RREADY;
        else 
            m_axi_global_cin_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_global_cin_V_WDATA <= ap_const_lv512_lc_1;
    m_axi_global_cin_V_WID <= ap_const_lv1_0;
    m_axi_global_cin_V_WLAST <= ap_const_logic_0;
    m_axi_global_cin_V_WSTRB <= ap_const_lv64_0;
    m_axi_global_cin_V_WUSER <= ap_const_lv1_0;
    m_axi_global_cin_V_WVALID <= ap_const_logic_0;
    max_pool_fu_1168_p2 <= "1" when (tmp_488_i_i_i_fu_1160_p3 = ap_const_lv3_0) else "0";
    newSel59_i_i_i_fu_1475_p3 <= 
        newSel_i_i_i_fu_1462_p3 when (or_cond10_i_i_i_fu_1469_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel60_i_i_i_fu_1483_p3 <= 
        out_num_iter_reg_2249 when (sel_tmp14_i_i_i_fu_1440_p2(0) = '1') else 
        out_num_iter_i_i_i_reg_515;
    newSel61_i_i_i_fu_1490_p3 <= 
        newSel60_i_i_i_fu_1483_p3 when (or_cond_i_i_i_65_fu_1445_p2(0) = '1') else 
        out_num_iter_i_i_i_reg_515;
    newSel62_i_i_i_fu_1498_p3 <= 
        newSel61_i_i_i_fu_1490_p3 when (or_cond10_i_i_i_fu_1469_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel63_i_i_i_fu_1506_p3 <= 
        in_h_iter_reg_2237 when (sel_tmp2_i_i_i_fu_1420_p2(0) = '1') else 
        in_h_iter_i_i_i_reg_527;
    newSel64_i_i_i_fu_1513_p3 <= 
        ap_const_lv32_0 when (or_cond_i_i_i_65_fu_1445_p2(0) = '1') else 
        newSel63_i_i_i_fu_1506_p3;
    newSel65_i_i_i_fu_1521_p3 <= 
        newSel64_i_i_i_fu_1513_p3 when (or_cond10_i_i_i_fu_1469_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel66_i_i_i_fu_1529_p3 <= 
        ap_const_lv32_0 when (sel_tmp14_i_i_i_fu_1440_p2(0) = '1') else 
        in_w_iter_reg_2243;
    newSel67_i_i_i_fu_1536_p3 <= 
        newSel66_i_i_i_fu_1529_p3 when (or_cond_i_i_i_65_fu_1445_p2(0) = '1') else 
        in_w_iter_i_i_i_reg_539;
    newSel68_i_i_i_fu_1544_p3 <= 
        newSel67_i_i_i_fu_1536_p3 when (or_cond10_i_i_i_fu_1469_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel69_i_i_i_fu_1552_p3 <= 
        ap_const_lv32_0 when (tmp_505_i_i_i_fu_1411_p2(0) = '1') else 
        layer_iter_reg_2273;
    newSel70_i_i_i_fu_1559_p3 <= 
        layer_iter_i_i_i_reg_551 when (or_cond10_i_i_i_fu_1469_p2(0) = '1') else 
        newSel69_i_i_i_fu_1552_p3;
    newSel71_i_i_i_fu_1639_p3 <= 
        ap_const_lv32_0 when (sel_tmp14_i_i_i_fu_1440_p2(0) = '1') else 
        num_tile_fu_1405_p2;
    newSel72_i_i_i_fu_1647_p3 <= 
        newSel71_i_i_i_fu_1639_p3 when (or_cond_i_i_i_65_fu_1445_p2(0) = '1') else 
        num_tile_fu_1405_p2;
    newSel73_i_i_i_fu_1655_p3 <= 
        newSel72_i_i_i_fu_1647_p3 when (or_cond10_i_i_i_fu_1469_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel74_i_i_i_fu_1663_p3 <= 
        ap_const_lv32_0 when (sel_tmp14_i_i_i_fu_1440_p2(0) = '1') else 
        inter_tile_1_i_i_i_reg_635;
    newSel75_i_i_i_fu_1671_p3 <= 
        newSel74_i_i_i_fu_1663_p3 when (or_cond_i_i_i_65_fu_1445_p2(0) = '1') else 
        inter_tile_1_i_i_i_reg_635;
    newSel76_i_i_i_fu_1679_p3 <= 
        newSel75_i_i_i_fu_1671_p3 when (or_cond10_i_i_i_fu_1469_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel77_i_i_i_fu_1687_p3 <= 
        ap_const_lv32_0 when (tmp_524_i_i_i_fu_1456_p2(0) = '1') else 
        channel_iter_1_i_i_i_reg_646;
    newSel78_i_i_i_fu_1695_p3 <= 
        newSel77_i_i_i_fu_1687_p3 when (or_cond10_i_i_i_fu_1469_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel_i_i_i_fu_1462_p3 <= 
        ap_const_lv32_0 when (tmp_524_i_i_i_fu_1456_p2(0) = '1') else 
        in_num_iter_reg_2198;
    not_sel_tmp1_i_i_i_fu_1616_p2 <= (tmp_512_not_i_i_i_fu_1611_p2 or tmp_500_i_i_i_reg_2204);
    not_sel_tmp9_i_i_i_fu_1588_p2 <= (tmp_515_not_i_i_i_fu_1583_p2 or sel_tmp13_demorgan_i_reg_2285);
    not_sel_tmp_i_i_i_fu_1578_p2 <= (tmp_513_not_i_i_i_fu_1573_p2 or sel_tmp6_demorgan_i_s_reg_2279);
    num_tile_fu_1405_p2 <= std_logic_vector(unsigned(inter_tile_1_i_i_i_reg_635) + unsigned(channel_iter_1_i_i_i_reg_646));
    or_cond10_i_i_i_fu_1469_p2 <= (or_cond_i_i_i_65_fu_1445_p2 or or_cond9_i_i_i_fu_1451_p2);
    or_cond5_i_i_i_fu_1280_p2 <= (tmp_615_fu_1267_p3 and tmp_497_i_i_i_fu_1274_p2);
    or_cond9_i_i_i_fu_1451_p2 <= (tmp_500_i_i_i_reg_2204 or sel_tmp2_i_i_i_fu_1420_p2);
    or_cond_i_i_i_65_fu_1445_p2 <= (sel_tmp7_i_i_i_fu_1430_p2 or sel_tmp14_i_i_i_fu_1440_p2);
    or_cond_i_i_i_fu_1182_p2 <= (tmp_490_i_i_i_fu_1178_p2 or tmp_489_i_i_i_fu_1174_p2);
    out_num_iter_fu_1370_p2 <= std_logic_vector(unsigned(tmp_503_i_i_i_fu_1367_p1) + unsigned(out_num_iter_i_i_i_reg_515));
    p_Result_4_fu_1079_p7 <= (((((p_Repl2_33_reg_1928 & p_Repl2_32_reg_1913) & p_Repl2_34_reg_1905) & p_Repl2_35_reg_1887) & p_Repl2_36_reg_1881) & p_Repl2_37_reg_1865);
    p_Result_5_fu_1089_p8 <= ((((((p_Repl2_39_reg_1996 & FILTER_S2_V_reg_1990) & FILTER_S1_V_reg_1974) & p_Repl2_41_reg_1969) & p_Repl2_42_reg_1954) & p_Repl2_43_reg_1949) & cin_offset_reg_1933);
    p_Result_6_fu_1100_p8 <= ((((((p_Repl2_46_reg_1744 & LAYER_IN_W_T_prev_2_reg_2070) & LAYER_IN_H_T_prev_2_reg_2060) & LAYER_OUT_NUM_T_V_reg_2044) & LAYER_IN_NUM_T_V_reg_2036) & p_Repl2_50_reg_2021) & p_Repl2_51_reg_2011);
    p_Result_7_fu_1111_p7 <= (((((config_r_q0 & config_r_q1) & p_Repl2_54_reg_2115) & p_Repl2_55_reg_2110) & p_Repl2_56_reg_2095) & p_Repl2_57_reg_2090);
    p_Result_s_fu_1068_p7 <= (((((p_Repl2_27_reg_1860 & p_Repl2_s_reg_1845) & p_Repl2_28_reg_1837) & p_Repl2_29_reg_1819) & p_Repl2_30_reg_1814) & p_Repl2_31_reg_1799);
    p_i_i_i_fu_1196_p2 <= (tmp_492_i_i_i_fu_1192_p2 or tmp_491_i_i_i_fu_1188_p2);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    sel_tmp13_demorgan_i_fu_1399_p2 <= (tmp_502_i_i_i_fu_1380_p2 or sel_tmp6_demorgan_i_s_fu_1394_p2);
    sel_tmp13_i_i_i_fu_1435_p2 <= (sel_tmp13_demorgan_i_reg_2285 xor ap_const_lv1_1);
    sel_tmp14_i_i_i_fu_1440_p2 <= (tmp_504_i_i_i_reg_2267 and sel_tmp13_i_i_i_fu_1435_p2);
    sel_tmp1_i_i_i_fu_1415_p2 <= (tmp_500_i_i_i_reg_2204 xor ap_const_lv1_1);
    sel_tmp2_i_i_i_fu_1420_p2 <= (tmp_501_i_i_i_reg_2255 and sel_tmp1_i_i_i_fu_1415_p2);
    sel_tmp33_i_i_i_fu_1599_p2 <= (tmp163_i_i_i_fu_1593_p2 and sel_tmp_i_i_i_fu_1567_p2);
    sel_tmp6_demorgan_i_s_fu_1394_p2 <= (tmp_501_i_i_i_fu_1376_p2 or tmp_500_i_i_i_reg_2204);
    sel_tmp6_i_i_i_fu_1425_p2 <= (sel_tmp6_demorgan_i_s_reg_2279 xor ap_const_lv1_1);
    sel_tmp7_i_i_i_fu_1430_p2 <= (tmp_502_i_i_i_reg_2261 and sel_tmp6_i_i_i_fu_1425_p2);
    sel_tmp_i_i_i_fu_1567_p2 <= (sel_tmp2_i_i_i_fu_1420_p2 xor sel_tmp1_i_i_i_fu_1415_p2);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    task_cnt_1_fu_1291_p2 <= std_logic_vector(unsigned(task_cnt_load_reg_1750) + unsigned(ap_const_lv32_1));
    tmp163_i_i_i_fu_1593_p2 <= (not_sel_tmp_i_i_i_fu_1578_p2 and not_sel_tmp9_i_i_i_fu_1588_p2);
    tmp164_i_i_i_fu_1621_p2 <= (tmp_505_i_i_i_fu_1411_p2 and sel_tmp1_i_i_i_fu_1415_p2);
    tmp165_i_i_i_fu_1627_p2 <= (tmp163_i_i_i_fu_1593_p2 and not_sel_tmp1_i_i_i_fu_1616_p2);
    tmp_424_i_i_i_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_603_fu_741_p2),64));
    tmp_425_i_i_i_fu_752_p2 <= (tmp_603_reg_1760 or ap_const_lv32_1);
    tmp_426_i_i_i_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_425_i_i_i_fu_752_p2),64));
    tmp_427_i_i_i_fu_762_p2 <= (tmp_603_reg_1760 or ap_const_lv32_2);
    tmp_428_i_i_i_fu_767_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_427_i_i_i_fu_762_p2),64));
    tmp_429_i_i_i_fu_772_p2 <= (tmp_603_reg_1760 or ap_const_lv32_3);
    tmp_430_i_i_i_fu_777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_429_i_i_i_fu_772_p2),64));
    tmp_431_i_i_i_fu_782_p2 <= (tmp_603_reg_1760 or ap_const_lv32_4);
    tmp_432_i_i_i_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_431_i_i_i_fu_782_p2),64));
    tmp_433_i_i_i_fu_792_p2 <= (tmp_603_reg_1760 or ap_const_lv32_5);
    tmp_434_i_i_i_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_433_i_i_i_fu_792_p2),64));
    tmp_435_i_i_i_fu_802_p2 <= (tmp_603_reg_1760 or ap_const_lv32_6);
    tmp_436_i_i_i_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_435_i_i_i_fu_802_p2),64));
    tmp_437_i_i_i_fu_812_p2 <= (tmp_603_reg_1760 or ap_const_lv32_7);
    tmp_438_i_i_i_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_437_i_i_i_fu_812_p2),64));
    tmp_439_i_i_i_fu_822_p2 <= (tmp_603_reg_1760 or ap_const_lv32_8);
    tmp_440_i_i_i_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_439_i_i_i_fu_822_p2),64));
    tmp_441_i_i_i_fu_832_p2 <= (tmp_603_reg_1760 or ap_const_lv32_9);
    tmp_442_i_i_i_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_441_i_i_i_fu_832_p2),64));
    tmp_443_i_i_i_fu_842_p2 <= (tmp_603_reg_1760 or ap_const_lv32_A);
    tmp_444_i_i_i_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_443_i_i_i_fu_842_p2),64));
    tmp_445_i_i_i_fu_852_p2 <= (tmp_603_reg_1760 or ap_const_lv32_B);
    tmp_446_i_i_i_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_445_i_i_i_fu_852_p2),64));
    tmp_447_i_i_i_fu_862_p2 <= (tmp_603_reg_1760 or ap_const_lv32_C);
    tmp_448_i_i_i_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_447_i_i_i_fu_862_p2),64));
    tmp_449_i_i_i_fu_872_p2 <= (tmp_603_reg_1760 or ap_const_lv32_D);
    tmp_450_i_i_i_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_449_i_i_i_fu_872_p2),64));
    tmp_451_i_i_i_fu_882_p2 <= (tmp_603_reg_1760 or ap_const_lv32_E);
    tmp_452_i_i_i_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_451_i_i_i_fu_882_p2),64));
    tmp_453_i_i_i_fu_892_p2 <= (tmp_603_reg_1760 or ap_const_lv32_F);
    tmp_454_i_i_i_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_453_i_i_i_fu_892_p2),64));
    tmp_455_i_i_i_fu_902_p2 <= (tmp_603_reg_1760 or ap_const_lv32_10);
    tmp_456_i_i_i_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_455_i_i_i_fu_902_p2),64));
    tmp_457_i_i_i_fu_916_p2 <= (tmp_603_reg_1760 or ap_const_lv32_11);
    tmp_458_i_i_i_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_457_i_i_i_fu_916_p2),64));
    tmp_459_i_i_i_fu_926_p2 <= (tmp_603_reg_1760 or ap_const_lv32_12);
    tmp_460_i_i_i_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_459_i_i_i_fu_926_p2),64));
    tmp_461_i_i_i_fu_940_p2 <= (tmp_603_reg_1760 or ap_const_lv32_13);
    tmp_462_i_i_i_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_461_i_i_i_fu_940_p2),64));
    tmp_463_i_i_i_fu_950_p2 <= (tmp_603_reg_1760 or ap_const_lv32_14);
    tmp_464_i_i_i_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_463_i_i_i_fu_950_p2),64));
    tmp_465_i_i_i_fu_960_p2 <= (tmp_603_reg_1760 or ap_const_lv32_15);
    tmp_466_i_i_i_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_465_i_i_i_fu_960_p2),64));
    tmp_467_i_i_i_fu_970_p2 <= (tmp_603_reg_1760 or ap_const_lv32_16);
    tmp_468_i_i_i_fu_975_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_467_i_i_i_fu_970_p2),64));
    tmp_469_i_i_i_fu_988_p2 <= (tmp_603_reg_1760 or ap_const_lv32_17);
    tmp_470_i_i_i_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_469_i_i_i_fu_988_p2),64));
    tmp_471_i_i_i_fu_998_p2 <= (tmp_603_reg_1760 or ap_const_lv32_18);
    tmp_472_i_i_i_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_471_i_i_i_fu_998_p2),64));
    tmp_473_i_i_i_fu_1008_p2 <= (tmp_603_reg_1760 or ap_const_lv32_1A);
    tmp_474_i_i_i_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_473_i_i_i_fu_1008_p2),64));
    tmp_475_i_i_i_fu_1018_p2 <= (tmp_603_reg_1760 or ap_const_lv32_1B);
    tmp_476_i_i_i_fu_1023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_475_i_i_i_fu_1018_p2),64));
    tmp_477_i_i_i_fu_1028_p2 <= (tmp_603_reg_1760 or ap_const_lv32_1C);
    tmp_478_i_i_i_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_477_i_i_i_fu_1028_p2),64));
    tmp_479_i_i_i_fu_1038_p2 <= (tmp_603_reg_1760 or ap_const_lv32_1D);
    tmp_480_i_i_i_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_479_i_i_i_fu_1038_p2),64));
    tmp_481_i_i_i_fu_1048_p2 <= (tmp_603_reg_1760 or ap_const_lv32_1E);
    tmp_482_i_i_i_fu_1053_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_481_i_i_i_fu_1048_p2),64));
    tmp_483_i_i_i_fu_1058_p2 <= (tmp_603_reg_1760 or ap_const_lv32_1F);
    tmp_484_i_i_i_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_483_i_i_i_fu_1058_p2),64));
    tmp_487_i_i_i_fu_1137_p3 <= 
        FILTER_S2_V_reg_1990 when (tmp_609_fu_1130_p3(0) = '1') else 
        ap_const_lv16_1;
    tmp_488_i_i_i_fu_1160_p3 <= (tmp_507_i_i_i_fu_1151_p4 & ap_const_lv1_0);
    tmp_489_i_i_i_fu_1174_p2 <= "1" when (p_Repl2_28_reg_1837 = p_Repl2_34_reg_1905) else "0";
    tmp_490_i_i_i_fu_1178_p2 <= "1" when (p_Repl2_28_reg_1837 = LAYER_IN_W_T_prev_2_reg_2070) else "0";
    tmp_491_i_i_i_fu_1188_p2 <= "1" when (p_Repl2_29_reg_1819 = p_Repl2_35_reg_1887) else "0";
    tmp_492_i_i_i_fu_1192_p2 <= "1" when (p_Repl2_29_reg_1819 = LAYER_IN_H_T_prev_2_reg_2060) else "0";
    tmp_494_i_i_i_fu_1237_p3 <= (tmp_523_i_i_i_fu_1227_p4 & tmp_522_i_i_i_fu_1222_p2);
    tmp_495_i_i_i_fu_1245_p2 <= "1" when (tmp_494_i_i_i_fu_1237_p3 = ap_const_lv32_0) else "0";
    tmp_497_i_i_i_fu_1274_p2 <= "1" when (out_num_iter_i_i_i_reg_515 = ap_const_lv32_0) else "0";
    tmp_498_i_i_i_fu_1286_p2 <= "1" when (task_cnt_load_reg_1750 = ap_const_lv32_0) else "0";
    tmp_499_i_i_i_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_IN_NUM_T_V_reg_2036),32));
    tmp_500_i_i_i_fu_1330_p2 <= "1" when (unsigned(in_num_iter_reg_2198) < unsigned(p_Repl2_37_reg_1865)) else "0";
    tmp_501_i_i_i_fu_1376_p2 <= "1" when (unsigned(in_h_iter_reg_2237) < unsigned(p_Repl2_35_reg_1887)) else "0";
    tmp_502_i_i_i_fu_1380_p2 <= "1" when (unsigned(in_w_iter_reg_2243) < unsigned(p_Repl2_34_reg_1905)) else "0";
    tmp_503_i_i_i_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_OUT_NUM_T_V_reg_2044),32));
    tmp_504_i_i_i_fu_1384_p2 <= "1" when (unsigned(out_num_iter_reg_2249) < unsigned(p_Repl2_36_reg_1881)) else "0";
    tmp_505_i_i_i_fu_1411_p2 <= "1" when (layer_iter_reg_2273 = p_Repl2_46_reg_1744) else "0";
    tmp_507_i_i_i_fu_1151_p4 <= p_Repl2_51_reg_2011(2 downto 1);
    tmp_512_not_i_i_i_fu_1611_p2 <= (tmp_501_i_i_i_reg_2255 xor ap_const_lv1_1);
    tmp_513_not_i_i_i_fu_1573_p2 <= (tmp_502_i_i_i_reg_2261 xor ap_const_lv1_1);
    tmp_515_not_i_i_i_fu_1583_p2 <= (tmp_504_i_i_i_reg_2267 xor ap_const_lv1_1);
    tmp_522_i_i_i_fu_1222_p2 <= (tmp_611_fu_1218_p1 or tmp_488_i_i_i_reg_2156);
    tmp_523_i_i_i_fu_1227_p4 <= out_num_iter_i_i_i_reg_515(31 downto 3);
    tmp_524_i_i_i_fu_1456_p2 <= (sel_tmp2_i_i_i_fu_1420_p2 or or_cond_i_i_i_65_fu_1445_p2);
    tmp_603_fu_741_p2 <= std_logic_vector(shift_left(unsigned(layer_iter_i_i_i_reg_551),to_integer(unsigned('0' & ap_const_lv32_5(31-1 downto 0)))));
    tmp_608_fu_1123_p3 <= p_Repl2_51_reg_2011(1 downto 1);
    tmp_609_fu_1130_p3 <= p_Repl2_51_reg_2011(2 downto 2);
    tmp_610_fu_1211_p3 <= p_Repl2_51_reg_2011(8 downto 8);
    tmp_611_fu_1218_p1 <= out_num_iter_i_i_i_reg_515(3 - 1 downto 0);
    tmp_612_fu_1251_p2 <= "1" when (tmp_488_i_i_i_reg_2156 = ap_const_lv3_6) else "0";
    tmp_613_fu_1256_p2 <= "1" when (tmp_488_i_i_i_reg_2156 = ap_const_lv3_4) else "0";
    tmp_614_fu_1261_p2 <= (tmp_613_fu_1256_p2 or tmp_612_fu_1251_p2);
    tmp_615_fu_1267_p3 <= p_Repl2_51_reg_2011(6 downto 6);
    tmp_fu_737_p1 <= task_cnt_fu_154(1 - 1 downto 0);
end behav;
