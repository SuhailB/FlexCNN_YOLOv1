-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cin_load_fifo_write is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    cin_burst_buf_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    cin_burst_buf_V_ce0 : OUT STD_LOGIC;
    cin_burst_buf_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_cin_V_V_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fifo_cin_V_V_full_n : IN STD_LOGIC;
    fifo_cin_V_V_write : OUT STD_LOGIC;
    LAYER_IN_NUM_T : IN STD_LOGIC_VECTOR (31 downto 0);
    LAYER_IN_H_T : IN STD_LOGIC_VECTOR (31 downto 0);
    LAYER_IN_W_T : IN STD_LOGIC_VECTOR (31 downto 0);
    FILTER_S : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cin_load_fifo_write is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_cin_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal done_reg_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ii_reg_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ii_reg_116_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_reg_116_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal hh_reg_128 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ww_reg_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal ww_reg_140_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ww_reg_140_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ww_reg_140_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ww_reg_140_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ww_reg_140_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ww_reg_140_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ww_reg_140_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal done_reg_152_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_152_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp16_fu_174_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_reg_353 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_s_fu_180_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_364_fu_185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_364_reg_370 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_375 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_371_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_371_reg_380 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_done_phi_fu_156_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal hh_5_fu_215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal hh_5_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal ww_1_fu_221_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ww_1_reg_393 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ii_3_fu_270_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_3_reg_398 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal hh_2_fu_284_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal done_3_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_229_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_366_reg_413 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_367_fu_297_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_367_reg_418 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_302_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_368_reg_423 : STD_LOGIC_VECTOR (31 downto 0);
    signal bus_cin_idx_reg_428 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_565_reg_433 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_565_reg_433_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_565_reg_433_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_565_reg_433_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bus_cin_data_V_reg_442 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_phi_mux_ii_phi_fu_120_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_hh_phi_fu_132_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_ww_phi_fu_144_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_tmp_V_phi_fu_167_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_phi_reg_pp0_iter20_tmp_V_reg_164 : STD_LOGIC_VECTOR (255 downto 0);
    signal fifo_cin_data_V_1_fu_339_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal tmp_370_fu_335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_365_fu_190_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_365_fu_190_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal ww_2_fu_204_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ii_4_fu_238_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_373_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_372_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_249_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp1_fu_262_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_fu_277_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_564_fu_306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_cin_idx_fu_312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_229_ce : STD_LOGIC;
    signal grp_fu_302_ce : STD_LOGIC;
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_50 : BOOLEAN;

    component top_kernel_mul_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    top_kernel_mul_32bkb_U38 : component top_kernel_mul_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_s_reg_364,
        din1 => hh_reg_128,
        ce => grp_fu_229_ce,
        dout => grp_fu_229_p2);

    top_kernel_mul_32bkb_U39 : component top_kernel_mul_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => LAYER_IN_NUM_T,
        din1 => tmp_367_reg_418,
        ce => grp_fu_302_ce,
        dout => grp_fu_302_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    done_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                done_reg_152 <= done_3_fu_291_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                done_reg_152 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    hh_reg_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                hh_reg_128 <= hh_2_fu_284_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                hh_reg_128 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ii_reg_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                ii_reg_116 <= ii_3_reg_398;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                ii_reg_116 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ww_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ww_reg_140 <= ww_1_reg_393;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                ww_reg_140 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152_pp0_iter18_reg = ap_const_lv1_0))) then
                bus_cin_data_V_reg_442 <= cin_burst_buf_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152_pp0_iter15_reg = ap_const_lv1_0))) then
                bus_cin_idx_reg_428 <= local_cin_idx_fu_312_p2(31 downto 4);
                tmp_565_reg_433 <= local_cin_idx_fu_312_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                done_reg_152_pp0_iter10_reg <= done_reg_152_pp0_iter9_reg;
                done_reg_152_pp0_iter11_reg <= done_reg_152_pp0_iter10_reg;
                done_reg_152_pp0_iter12_reg <= done_reg_152_pp0_iter11_reg;
                done_reg_152_pp0_iter13_reg <= done_reg_152_pp0_iter12_reg;
                done_reg_152_pp0_iter14_reg <= done_reg_152_pp0_iter13_reg;
                done_reg_152_pp0_iter15_reg <= done_reg_152_pp0_iter14_reg;
                done_reg_152_pp0_iter16_reg <= done_reg_152_pp0_iter15_reg;
                done_reg_152_pp0_iter17_reg <= done_reg_152_pp0_iter16_reg;
                done_reg_152_pp0_iter18_reg <= done_reg_152_pp0_iter17_reg;
                done_reg_152_pp0_iter19_reg <= done_reg_152_pp0_iter18_reg;
                done_reg_152_pp0_iter2_reg <= done_reg_152_pp0_iter1_reg;
                done_reg_152_pp0_iter3_reg <= done_reg_152_pp0_iter2_reg;
                done_reg_152_pp0_iter4_reg <= done_reg_152_pp0_iter3_reg;
                done_reg_152_pp0_iter5_reg <= done_reg_152_pp0_iter4_reg;
                done_reg_152_pp0_iter6_reg <= done_reg_152_pp0_iter5_reg;
                done_reg_152_pp0_iter7_reg <= done_reg_152_pp0_iter6_reg;
                done_reg_152_pp0_iter8_reg <= done_reg_152_pp0_iter7_reg;
                done_reg_152_pp0_iter9_reg <= done_reg_152_pp0_iter8_reg;
                ii_reg_116_pp0_iter10_reg <= ii_reg_116_pp0_iter9_reg;
                ii_reg_116_pp0_iter11_reg <= ii_reg_116_pp0_iter10_reg;
                ii_reg_116_pp0_iter12_reg <= ii_reg_116_pp0_iter11_reg;
                ii_reg_116_pp0_iter13_reg <= ii_reg_116_pp0_iter12_reg;
                ii_reg_116_pp0_iter14_reg <= ii_reg_116_pp0_iter13_reg;
                ii_reg_116_pp0_iter15_reg <= ii_reg_116_pp0_iter14_reg;
                ii_reg_116_pp0_iter2_reg <= ii_reg_116;
                ii_reg_116_pp0_iter3_reg <= ii_reg_116_pp0_iter2_reg;
                ii_reg_116_pp0_iter4_reg <= ii_reg_116_pp0_iter3_reg;
                ii_reg_116_pp0_iter5_reg <= ii_reg_116_pp0_iter4_reg;
                ii_reg_116_pp0_iter6_reg <= ii_reg_116_pp0_iter5_reg;
                ii_reg_116_pp0_iter7_reg <= ii_reg_116_pp0_iter6_reg;
                ii_reg_116_pp0_iter8_reg <= ii_reg_116_pp0_iter7_reg;
                ii_reg_116_pp0_iter9_reg <= ii_reg_116_pp0_iter8_reg;
                tmp_565_reg_433_pp0_iter17_reg <= tmp_565_reg_433;
                tmp_565_reg_433_pp0_iter18_reg <= tmp_565_reg_433_pp0_iter17_reg;
                tmp_565_reg_433_pp0_iter19_reg <= tmp_565_reg_433_pp0_iter18_reg;
                ww_reg_140_pp0_iter2_reg <= ww_reg_140_pp0_iter1_reg;
                ww_reg_140_pp0_iter3_reg <= ww_reg_140_pp0_iter2_reg;
                ww_reg_140_pp0_iter4_reg <= ww_reg_140_pp0_iter3_reg;
                ww_reg_140_pp0_iter5_reg <= ww_reg_140_pp0_iter4_reg;
                ww_reg_140_pp0_iter6_reg <= ww_reg_140_pp0_iter5_reg;
                ww_reg_140_pp0_iter7_reg <= ww_reg_140_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                done_reg_152_pp0_iter1_reg <= done_reg_152;
                ww_reg_140_pp0_iter1_reg <= ww_reg_140;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_done_phi_fu_156_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                hh_5_reg_387 <= hh_5_fu_215_p2;
                tmp_371_reg_380 <= tmp_371_fu_210_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ii_3_reg_398 <= ii_3_fu_270_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp16_reg_353 <= tmp16_fu_174_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                tmp_364_reg_370 <= tmp_364_fu_185_p2;
                    tmp_reg_375(28 downto 0) <= tmp_fu_200_p1(28 downto 0);
                tmp_s_reg_364 <= tmp_s_fu_180_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152_pp0_iter6_reg = ap_const_lv1_0))) then
                tmp_366_reg_413 <= grp_fu_229_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152_pp0_iter7_reg = ap_const_lv1_0))) then
                tmp_367_reg_418 <= tmp_367_fu_297_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152_pp0_iter14_reg = ap_const_lv1_0))) then
                tmp_368_reg_423 <= grp_fu_302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_done_phi_fu_156_p4 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ww_1_reg_393 <= ww_1_fu_221_p3;
            end if;
        end if;
    end process;
    tmp_reg_375(31 downto 29) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter20, ap_phi_mux_done_phi_fu_156_p4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter19)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_phi_mux_done_phi_fu_156_p4 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_phi_mux_done_phi_fu_156_p4 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state24 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo_cin_V_V_full_n, ap_enable_reg_pp0_iter20, done_reg_152_pp0_iter19_reg)
    begin
                ap_block_pp0_stage0_01001 <= ((done_reg_152_pp0_iter19_reg = ap_const_lv1_0) and (fifo_cin_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo_cin_V_V_full_n, ap_enable_reg_pp0_iter20, done_reg_152_pp0_iter19_reg)
    begin
                ap_block_pp0_stage0_11001 <= ((done_reg_152_pp0_iter19_reg = ap_const_lv1_0) and (fifo_cin_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_cin_V_V_full_n, ap_enable_reg_pp0_iter20, done_reg_152_pp0_iter19_reg)
    begin
                ap_block_pp0_stage0_subdone <= ((done_reg_152_pp0_iter19_reg = ap_const_lv1_0) and (fifo_cin_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state23_pp0_stage0_iter20_assign_proc : process(fifo_cin_V_V_full_n, done_reg_152_pp0_iter19_reg)
    begin
                ap_block_state23_pp0_stage0_iter20 <= ((done_reg_152_pp0_iter19_reg = ap_const_lv1_0) and (fifo_cin_V_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_50_assign_proc : process(ap_enable_reg_pp0_iter20, ap_block_pp0_stage0, done_reg_152_pp0_iter19_reg)
    begin
                ap_condition_50 <= ((done_reg_152_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(ap_phi_mux_done_phi_fu_156_p4)
    begin
        if ((ap_phi_mux_done_phi_fu_156_p4 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_done_phi_fu_156_p4_assign_proc : process(ap_block_pp0_stage0, done_reg_152, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, done_3_fu_291_p2)
    begin
        if (((done_reg_152 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_done_phi_fu_156_p4 <= done_3_fu_291_p2;
        else 
            ap_phi_mux_done_phi_fu_156_p4 <= done_reg_152;
        end if; 
    end process;


    ap_phi_mux_hh_phi_fu_132_p4_assign_proc : process(ap_block_pp0_stage0, done_reg_152, hh_reg_128, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, hh_2_fu_284_p3)
    begin
        if (((done_reg_152 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_hh_phi_fu_132_p4 <= hh_2_fu_284_p3;
        else 
            ap_phi_mux_hh_phi_fu_132_p4 <= hh_reg_128;
        end if; 
    end process;


    ap_phi_mux_ii_phi_fu_120_p4_assign_proc : process(ap_block_pp0_stage0, ii_reg_116, done_reg_152_pp0_iter1_reg, ii_3_reg_398, ap_enable_reg_pp0_iter2)
    begin
        if (((done_reg_152_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_ii_phi_fu_120_p4 <= ii_3_reg_398;
        else 
            ap_phi_mux_ii_phi_fu_120_p4 <= ii_reg_116;
        end if; 
    end process;


    ap_phi_mux_tmp_V_phi_fu_167_p4_assign_proc : process(tmp_565_reg_433_pp0_iter19_reg, bus_cin_data_V_reg_442, ap_phi_reg_pp0_iter20_tmp_V_reg_164, fifo_cin_data_V_1_fu_339_p1, ap_condition_50)
    begin
        if ((ap_const_boolean_1 = ap_condition_50)) then
            if ((tmp_565_reg_433_pp0_iter19_reg = ap_const_lv1_0)) then 
                ap_phi_mux_tmp_V_phi_fu_167_p4 <= fifo_cin_data_V_1_fu_339_p1;
            elsif ((tmp_565_reg_433_pp0_iter19_reg = ap_const_lv1_1)) then 
                ap_phi_mux_tmp_V_phi_fu_167_p4 <= bus_cin_data_V_reg_442(511 downto 256);
            else 
                ap_phi_mux_tmp_V_phi_fu_167_p4 <= ap_phi_reg_pp0_iter20_tmp_V_reg_164;
            end if;
        else 
            ap_phi_mux_tmp_V_phi_fu_167_p4 <= ap_phi_reg_pp0_iter20_tmp_V_reg_164;
        end if; 
    end process;


    ap_phi_mux_ww_phi_fu_144_p4_assign_proc : process(ap_block_pp0_stage0, done_reg_152, ap_CS_fsm_pp0_stage0, ww_reg_140, ww_1_reg_393, ap_enable_reg_pp0_iter1)
    begin
        if (((done_reg_152 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_ww_phi_fu_144_p4 <= ww_1_reg_393;
        else 
            ap_phi_mux_ww_phi_fu_144_p4 <= ww_reg_140;
        end if; 
    end process;

    ap_phi_reg_pp0_iter20_tmp_V_reg_164 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cin_burst_buf_V_address0 <= tmp_370_fu_335_p1(12 - 1 downto 0);

    cin_burst_buf_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter19 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter18 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter17 = ap_const_logic_1)))) then 
            cin_burst_buf_V_ce0 <= ap_const_logic_1;
        else 
            cin_burst_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    done_3_fu_291_p2 <= (tmp_373_fu_244_p2 and sel_tmp_fu_257_p2);

    fifo_cin_V_V_blk_n_assign_proc : process(fifo_cin_V_V_full_n, ap_enable_reg_pp0_iter20, ap_block_pp0_stage0, done_reg_152_pp0_iter19_reg)
    begin
        if (((done_reg_152_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))) then 
            fifo_cin_V_V_blk_n <= fifo_cin_V_V_full_n;
        else 
            fifo_cin_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_cin_V_V_din <= ap_phi_mux_tmp_V_phi_fu_167_p4;

    fifo_cin_V_V_write_assign_proc : process(ap_enable_reg_pp0_iter20, done_reg_152_pp0_iter19_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (done_reg_152_pp0_iter19_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_1))) then 
            fifo_cin_V_V_write <= ap_const_logic_1;
        else 
            fifo_cin_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    fifo_cin_data_V_1_fu_339_p1 <= bus_cin_data_V_reg_442(256 - 1 downto 0);

    grp_fu_229_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_229_ce <= ap_const_logic_1;
        else 
            grp_fu_229_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_302_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_302_ce <= ap_const_logic_1;
        else 
            grp_fu_302_ce <= ap_const_logic_0;
        end if; 
    end process;

    hh_2_fu_284_p3 <= 
        sel_tmp5_fu_277_p3 when (tmp_371_reg_380(0) = '1') else 
        hh_reg_128;
    hh_5_fu_215_p2 <= std_logic_vector(signed(ap_phi_mux_hh_phi_fu_132_p4) + signed(ap_const_lv32_1));
    ii_3_fu_270_p3 <= 
        sel_tmp1_fu_262_p3 when (tmp_371_reg_380(0) = '1') else 
        ap_phi_mux_ii_phi_fu_120_p4;
    ii_4_fu_238_p2 <= std_logic_vector(unsigned(ap_phi_mux_ii_phi_fu_120_p4) + unsigned(ap_const_lv32_1));
    local_cin_idx_fu_312_p2 <= std_logic_vector(unsigned(tmp_564_fu_306_p2) + unsigned(tmp_368_reg_423));
    p_s_fu_249_p3 <= 
        ap_const_lv32_0 when (tmp_373_fu_244_p2(0) = '1') else 
        ii_4_fu_238_p2;
    sel_tmp1_fu_262_p3 <= 
        p_s_fu_249_p3 when (sel_tmp_fu_257_p2(0) = '1') else 
        ap_phi_mux_ii_phi_fu_120_p4;
    sel_tmp5_fu_277_p3 <= 
        ap_const_lv32_0 when (sel_tmp_fu_257_p2(0) = '1') else 
        hh_5_reg_387;
    sel_tmp_fu_257_p2 <= (tmp_372_fu_234_p2 and tmp_371_reg_380);
    tmp16_fu_174_p2 <= std_logic_vector(unsigned(FILTER_S) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_364_fu_185_p2 <= std_logic_vector(unsigned(tmp16_reg_353) + unsigned(LAYER_IN_H_T));
    tmp_365_fu_190_p1 <= LAYER_IN_NUM_T;
    tmp_365_fu_190_p4 <= tmp_365_fu_190_p1(31 downto 3);
    tmp_367_fu_297_p2 <= std_logic_vector(unsigned(ww_reg_140_pp0_iter7_reg) + unsigned(tmp_366_reg_413));
    tmp_370_fu_335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bus_cin_idx_reg_428),64));
    tmp_371_fu_210_p2 <= "1" when (ww_2_fu_204_p2 = tmp_s_reg_364) else "0";
    tmp_372_fu_234_p2 <= "1" when (hh_5_reg_387 = tmp_364_reg_370) else "0";
    tmp_373_fu_244_p2 <= "1" when (ii_4_fu_238_p2 = tmp_reg_375) else "0";
    tmp_564_fu_306_p2 <= std_logic_vector(shift_left(unsigned(ii_reg_116_pp0_iter15_reg),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    tmp_fu_200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_365_fu_190_p4),32));
    tmp_s_fu_180_p2 <= std_logic_vector(unsigned(tmp16_reg_353) + unsigned(LAYER_IN_W_T));
    ww_1_fu_221_p3 <= 
        ap_const_lv32_0 when (tmp_371_fu_210_p2(0) = '1') else 
        ww_2_fu_204_p2;
    ww_2_fu_204_p2 <= std_logic_vector(unsigned(ap_phi_mux_ww_phi_fu_144_p4) + unsigned(ap_const_lv32_1));
end behav;
