-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cout_write_fifo_read is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    cout_burst_buf_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    cout_burst_buf_V_ce0 : OUT STD_LOGIC;
    cout_burst_buf_V_we0 : OUT STD_LOGIC;
    cout_burst_buf_V_d0 : OUT STD_LOGIC_VECTOR (511 downto 0);
    cout_burst_buf_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
    cout_burst_buf_V_address1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    cout_burst_buf_V_ce1 : OUT STD_LOGIC;
    cout_burst_buf_V_we1 : OUT STD_LOGIC;
    cout_burst_buf_V_d1 : OUT STD_LOGIC_VECTOR (511 downto 0);
    fifo_cout_V_V_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    fifo_cout_V_V_empty_n : IN STD_LOGIC;
    fifo_cout_V_V_read : OUT STD_LOGIC;
    en : IN STD_LOGIC;
    up_sample : IN STD_LOGIC;
    LAYER_OUT_H : IN STD_LOGIC_VECTOR (31 downto 0);
    LAYER_OUT_W : IN STD_LOGIC_VECTOR (31 downto 0);
    LAYER_OUT_NUM_T : IN STD_LOGIC_VECTOR (15 downto 0);
    LAYER_IN_H_T : IN STD_LOGIC_VECTOR (31 downto 0);
    LAYER_IN_W_T : IN STD_LOGIC_VECTOR (31 downto 0);
    in_h_iter : IN STD_LOGIC_VECTOR (31 downto 0);
    in_w_iter : IN STD_LOGIC_VECTOR (31 downto 0);
    POOL_ODD : IN STD_LOGIC );
end;


architecture behav of cout_write_fifo_read is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_cout_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp2_iter20 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal done_reg_336 : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal done4_reg_288 : STD_LOGIC_VECTOR (0 downto 0);
    signal done4_reg_288_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal done1_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal done1_reg_240_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o7_reg_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal o7_reg_204_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal o7_reg_204_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o7_reg_204_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o7_reg_204_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal h7_reg_216 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal w7_reg_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal w7_reg_228_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w7_reg_228_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal done1_reg_240_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done1_reg_240_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done1_reg_240_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done1_reg_240_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o1_reg_252 : STD_LOGIC_VECTOR (31 downto 0);
    signal o1_reg_252_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state23_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state26_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_state29_pp1_stage1_iter2 : BOOLEAN;
    signal ap_block_state32_pp1_stage1_iter3 : BOOLEAN;
    signal ap_block_state35_pp1_stage1_iter4 : BOOLEAN;
    signal ap_block_state38_pp1_stage1_iter5 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal o1_reg_252_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o1_reg_252_pp1_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o1_reg_252_pp1_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal h2_reg_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state22_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state28_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state31_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state34_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state37_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state40_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal w3_reg_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal w3_reg_276_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w3_reg_276_pp1_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal done4_reg_288_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done4_reg_288_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done4_reg_288_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done4_reg_288_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal o_reg_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state41_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state42_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state43_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state44_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state45_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state46_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state47_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state48_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state49_pp2_stage0_iter8 : BOOLEAN;
    signal ap_block_state50_pp2_stage0_iter9 : BOOLEAN;
    signal ap_block_state51_pp2_stage0_iter10 : BOOLEAN;
    signal ap_block_state52_pp2_stage0_iter11 : BOOLEAN;
    signal ap_block_state53_pp2_stage0_iter12 : BOOLEAN;
    signal ap_block_state54_pp2_stage0_iter13 : BOOLEAN;
    signal ap_block_state55_pp2_stage0_iter14 : BOOLEAN;
    signal ap_block_state56_pp2_stage0_iter15 : BOOLEAN;
    signal ap_block_state57_pp2_stage0_iter16 : BOOLEAN;
    signal ap_block_state58_pp2_stage0_iter17 : BOOLEAN;
    signal ap_block_state59_pp2_stage0_iter18 : BOOLEAN;
    signal ap_block_state60_pp2_stage0_iter19 : BOOLEAN;
    signal ap_block_state61_pp2_stage0_iter20 : BOOLEAN;
    signal ap_block_state62_pp2_stage0_iter21 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal o_reg_300_pp2_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal o_reg_300_pp2_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal h_reg_312 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal w_reg_324 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_324_pp2_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_324_pp2_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_324_pp2_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_324_pp2_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_324_pp2_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_324_pp2_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal w_reg_324_pp2_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal done_reg_336_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal done_reg_336_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_368 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state16_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state24_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_state27_pp1_stage2_iter1 : BOOLEAN;
    signal ap_block_state30_pp1_stage2_iter2 : BOOLEAN;
    signal ap_block_state33_pp1_stage2_iter3 : BOOLEAN;
    signal ap_block_state36_pp1_stage2_iter4 : BOOLEAN;
    signal ap_block_state39_pp1_stage2_iter5 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal LAYER_OUT_NUM_T_cast_fu_372_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal LAYER_OUT_NUM_T_cast_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal write_2_fu_422_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_532_fu_430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_532_reg_1142 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_533_fu_436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_533_reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_534_fu_442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_534_reg_1152 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_535_fu_448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_535_reg_1157 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_218_cast_fu_454_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_218_cast_reg_1162 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_331_fu_468_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_331_reg_1167 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_332_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_332_reg_1173 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_333_fu_496_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_333_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_334_fu_510_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_334_reg_1183 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_213_cast_fu_514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_213_cast_reg_1188 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_fu_518_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_cast_reg_1193 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_229_fu_527_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_229_reg_1198 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_done1_phi_fu_244_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_237_fu_532_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_237_reg_1203 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_8_fu_537_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_8_reg_1208 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_8_fu_543_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_8_reg_1214 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp28_fu_557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_reg_1220_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_reg_1220_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_reg_1220_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_reg_1220_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp28_reg_1220_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_245_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_245_reg_1226 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_9_fu_571_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_9_reg_1232 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp29_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp29_reg_1238 : STD_LOGIC_VECTOR (0 downto 0);
    signal h11_2_fu_590_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal h11_2_reg_1244 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal o10_3_fu_616_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal o10_3_reg_1249 : STD_LOGIC_VECTOR (31 downto 0);
    signal w12_1_fu_623_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w12_1_reg_1254 : STD_LOGIC_VECTOR (31 downto 0);
    signal done13_3_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done13_3_reg_1259 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_220_reg_1264 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_224_fu_639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_224_reg_1269 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_225_reg_1274 : STD_LOGIC_VECTOR (31 downto 0);
    signal cout_burst_buf_V_add_2_reg_1279 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_545_reg_1284 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_218_fu_743_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_218_reg_1292 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_done4_phi_fu_292_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_234_fu_748_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_234_reg_1297 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_7_fu_753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_7_reg_1302 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_7_fu_759_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_7_reg_1308 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp20_fu_773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_reg_1314_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_reg_1314_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_reg_1314_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_reg_1314_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp20_reg_1314_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_243_fu_779_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_243_reg_1320 : STD_LOGIC_VECTOR (0 downto 0);
    signal o_8_fu_787_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_8_reg_1326 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp24_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp24_reg_1332 : STD_LOGIC_VECTOR (0 downto 0);
    signal h2_2_fu_806_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal h2_2_reg_1338 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal o1_3_fu_832_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal o1_3_reg_1343 : STD_LOGIC_VECTOR (31 downto 0);
    signal w3_1_fu_839_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w3_1_reg_1348 : STD_LOGIC_VECTOR (31 downto 0);
    signal done4_3_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal done4_3_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_738_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_212_reg_1358 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_213_fu_850_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_213_reg_1363 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_855_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_214_reg_1368 : STD_LOGIC_VECTOR (31 downto 0);
    signal cout_burst_buf_V_add_1_reg_1373 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_541_reg_1378 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_241_fu_954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_241_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_done_phi_fu_340_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal h_6_fu_959_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_6_reg_1393 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_1_fu_965_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_1_reg_1399 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal o_3_fu_1014_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_3_reg_1404 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal h_2_fu_1028_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal done_3_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_973_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_204_reg_1419 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_205_fu_1041_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_205_reg_1424 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1046_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_206_reg_1429 : STD_LOGIC_VECTOR (31 downto 0);
    signal cout_burst_buf_V_add_reg_1434 : STD_LOGIC_VECTOR (12 downto 0);
    signal cout_burst_buf_V_add_reg_1434_pp2_iter17_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cout_burst_buf_V_add_reg_1434_pp2_iter18_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cout_burst_buf_V_add_reg_1434_pp2_iter19_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cout_burst_buf_V_add_reg_1434_pp2_iter20_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_538_reg_1440 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_538_reg_1440_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_538_reg_1440_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_538_reg_1440_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cout_buf_0_V_fu_1084_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_0_V_reg_1446 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_fu_358_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_1_V_reg_1451 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_enable_reg_pp2_iter19 : STD_LOGIC := '0';
    signal cout_buf_1_V_13_fu_1088_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_1_V_13_reg_1456 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_0_V_13_fu_1094_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_0_V_13_reg_1461 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state22 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state41 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter21 : STD_LOGIC := '0';
    signal ap_phi_mux_o7_phi_fu_208_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_phi_mux_h7_phi_fu_220_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_w7_phi_fu_232_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_o1_phi_fu_256_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal ap_phi_mux_h2_phi_fu_268_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_w3_phi_fu_280_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_o_phi_fu_304_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_h_phi_fu_316_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_w_phi_fu_328_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_228_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_217_fu_880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_209_fu_1071_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_2_fu_729_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal p_Result_1_fu_939_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal brmerge_fu_376_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_376_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_388_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_not_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_394_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal POOL_ODD_not_fu_402_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_408_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal POOL_ODD_not_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_394_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge1_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp26_fu_414_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_532_fu_430_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_348_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_458_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_458_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_195_fu_472_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_196_fu_486_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_197_fu_500_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_230_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_238_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_248_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp31_fu_583_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_251_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_3_fu_602_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp30_fu_609_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_542_fu_634_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_645_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_543_fu_649_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_cout_idx_2_fu_655_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_227_fu_660_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal cout_buf_0_V_9_fu_683_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_1_V_11_fu_701_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_1_V_6_fu_687_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_0_V_11_fu_708_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_0_V_6_fu_694_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_1_V_15_fu_715_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_0_V_15_fu_722_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_fu_738_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_219_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_235_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_247_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp27_fu_799_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_250_fu_814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_fu_818_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp25_fu_825_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_855_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_539_fu_859_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_cout_idx_1_fu_865_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_216_fu_870_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal cout_buf_0_V_3_fu_893_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_1_V_8_fu_911_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_1_V_5_fu_897_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_0_V_7_fu_918_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_0_V_4_fu_904_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_1_V_14_fu_925_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal cout_buf_0_V_14_fu_932_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal w_6_fu_948_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_241_fu_954_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_7_fu_982_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_249_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_246_fu_978_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1_fu_993_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_fu_1006_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp9_fu_1021_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1046_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_536_fu_1050_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal local_cout_idx_fu_1056_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_208_fu_1061_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_522_ce : STD_LOGIC;
    signal grp_fu_645_ce : STD_LOGIC;
    signal grp_fu_738_ce : STD_LOGIC;
    signal grp_fu_855_ce : STD_LOGIC;
    signal grp_fu_973_ce : STD_LOGIC;
    signal grp_fu_1046_ce : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_block_pp0 : BOOLEAN;
    signal ap_block_pp1 : BOOLEAN;
    signal ap_block_pp2 : BOOLEAN;
    signal ap_enable_operation_277 : BOOLEAN;
    signal ap_enable_state58_pp2_iter17_stage0 : BOOLEAN;
    signal ap_enable_operation_279 : BOOLEAN;
    signal ap_enable_state60_pp2_iter19_stage0 : BOOLEAN;
    signal ap_enable_operation_288 : BOOLEAN;
    signal ap_enable_state62_pp2_iter21_stage0 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component top_kernel_mul_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_kernel_mul_32g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_kernel_mul_31Thq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    top_kernel_mul_32bkb_U305 : component top_kernel_mul_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => LAYER_IN_W_T,
        din1 => ap_phi_mux_h7_phi_fu_220_p4,
        ce => grp_fu_522_ce,
        dout => grp_fu_522_p2);

    top_kernel_mul_32g8j_U306 : component top_kernel_mul_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_224_reg_1269,
        din1 => grp_fu_645_p1,
        ce => grp_fu_645_ce,
        dout => grp_fu_645_p2);

    top_kernel_mul_31Thq_U307 : component top_kernel_mul_31Thq
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 31,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_738_p0,
        din1 => ap_phi_mux_h2_phi_fu_268_p4,
        ce => grp_fu_738_ce,
        dout => grp_fu_738_p2);

    top_kernel_mul_32g8j_U308 : component top_kernel_mul_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_213_reg_1363,
        din1 => grp_fu_855_p1,
        ce => grp_fu_855_ce,
        dout => grp_fu_855_p2);

    top_kernel_mul_32bkb_U309 : component top_kernel_mul_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => LAYER_IN_W_T,
        din1 => h_reg_312,
        ce => grp_fu_973_ce,
        dout => grp_fu_973_p2);

    top_kernel_mul_32g8j_U310 : component top_kernel_mul_32g8j
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_205_reg_1424,
        din1 => grp_fu_1046_p1,
        ce => grp_fu_1046_ce,
        dout => grp_fu_1046_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((write_2_fu_422_p3 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif (((write_2_fu_422_p3 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state22) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((write_2_fu_422_p3 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                elsif (((write_2_fu_422_p3 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state41) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((write_2_fu_422_p3 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state41)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state41);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
                elsif (((write_2_fu_422_p3 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp2_iter21 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
                end if; 
            end if;
        end if;
    end process;


    done1_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                done1_reg_240 <= ap_const_lv1_0;
            elsif (((done1_reg_240 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                done1_reg_240 <= done13_3_reg_1259;
            end if; 
        end if;
    end process;

    done4_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                done4_reg_288 <= ap_const_lv1_0;
            elsif (((done4_reg_288 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                done4_reg_288 <= done4_3_reg_1353;
            end if; 
        end if;
    end process;

    done_reg_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                done_reg_336 <= ap_const_lv1_0;
            elsif (((done_reg_336 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                done_reg_336 <= done_3_fu_1035_p2;
            end if; 
        end if;
    end process;

    h2_reg_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                h2_reg_264 <= ap_const_lv32_0;
            elsif (((done4_reg_288 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                h2_reg_264 <= h2_2_reg_1338;
            end if; 
        end if;
    end process;

    h7_reg_216_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                h7_reg_216 <= ap_const_lv32_0;
            elsif (((done1_reg_240 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                h7_reg_216 <= h11_2_reg_1244;
            end if; 
        end if;
    end process;

    h_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                h_reg_312 <= ap_const_lv32_0;
            elsif (((done_reg_336 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                h_reg_312 <= h_2_fu_1028_p3;
            end if; 
        end if;
    end process;

    o1_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                o1_reg_252 <= ap_const_lv32_0;
            elsif (((done4_reg_288_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001))) then 
                o1_reg_252 <= o1_3_reg_1343;
            end if; 
        end if;
    end process;

    o7_reg_204_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                o7_reg_204 <= ap_const_lv32_0;
            elsif (((done1_reg_240_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                o7_reg_204 <= o10_3_reg_1249;
            end if; 
        end if;
    end process;

    o_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                o_reg_300 <= ap_const_lv32_0;
            elsif (((done_reg_336_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
                o_reg_300 <= o_3_reg_1404;
            end if; 
        end if;
    end process;

    w3_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                w3_reg_276 <= ap_const_lv32_0;
            elsif (((done4_reg_288 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                w3_reg_276 <= w3_1_reg_1348;
            end if; 
        end if;
    end process;

    w7_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                w7_reg_228 <= ap_const_lv32_0;
            elsif (((done1_reg_240 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                w7_reg_228 <= w12_1_reg_1254;
            end if; 
        end if;
    end process;

    w_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                w_reg_324 <= ap_const_lv32_0;
            elsif (((done_reg_336 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                w_reg_324 <= w_1_reg_1399;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    LAYER_OUT_NUM_T_cast_reg_1131(15 downto 0) <= LAYER_OUT_NUM_T_cast_fu_372_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done_reg_336_pp2_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                cout_buf_0_V_13_reg_1461 <= cout_buf_0_V_13_fu_1094_p3;
                cout_buf_1_V_13_reg_1456 <= cout_buf_1_V_13_fu_1088_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done_reg_336_pp2_iter18_reg = ap_const_lv1_0) and (tmp_538_reg_1440_pp2_iter18_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                cout_buf_0_V_reg_1446 <= cout_buf_0_V_fu_1084_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_538_reg_1440_pp2_iter18_reg = ap_const_lv1_0) and (done_reg_336_pp2_iter18_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1))) then
                cout_buf_1_V_reg_1451 <= cout_burst_buf_V_q0(511 downto 256);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done4_reg_288_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                cout_burst_buf_V_add_1_reg_1373 <= tmp_217_fu_880_p1(13 - 1 downto 0);
                tmp_541_reg_1378 <= local_cout_idx_1_fu_865_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done1_reg_240_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                cout_burst_buf_V_add_2_reg_1279 <= tmp_228_fu_670_p1(13 - 1 downto 0);
                tmp_545_reg_1284 <= local_cout_idx_2_fu_655_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done_reg_336_pp2_iter15_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                cout_burst_buf_V_add_reg_1434 <= tmp_209_fu_1071_p1(13 - 1 downto 0);
                tmp_538_reg_1440 <= local_cout_idx_fu_1056_p2(3 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                cout_burst_buf_V_add_reg_1434_pp2_iter17_reg <= cout_burst_buf_V_add_reg_1434;
                cout_burst_buf_V_add_reg_1434_pp2_iter18_reg <= cout_burst_buf_V_add_reg_1434_pp2_iter17_reg;
                cout_burst_buf_V_add_reg_1434_pp2_iter19_reg <= cout_burst_buf_V_add_reg_1434_pp2_iter18_reg;
                cout_burst_buf_V_add_reg_1434_pp2_iter20_reg <= cout_burst_buf_V_add_reg_1434_pp2_iter19_reg;
                done_reg_336_pp2_iter10_reg <= done_reg_336_pp2_iter9_reg;
                done_reg_336_pp2_iter11_reg <= done_reg_336_pp2_iter10_reg;
                done_reg_336_pp2_iter12_reg <= done_reg_336_pp2_iter11_reg;
                done_reg_336_pp2_iter13_reg <= done_reg_336_pp2_iter12_reg;
                done_reg_336_pp2_iter14_reg <= done_reg_336_pp2_iter13_reg;
                done_reg_336_pp2_iter15_reg <= done_reg_336_pp2_iter14_reg;
                done_reg_336_pp2_iter16_reg <= done_reg_336_pp2_iter15_reg;
                done_reg_336_pp2_iter17_reg <= done_reg_336_pp2_iter16_reg;
                done_reg_336_pp2_iter18_reg <= done_reg_336_pp2_iter17_reg;
                done_reg_336_pp2_iter19_reg <= done_reg_336_pp2_iter18_reg;
                done_reg_336_pp2_iter20_reg <= done_reg_336_pp2_iter19_reg;
                done_reg_336_pp2_iter2_reg <= done_reg_336_pp2_iter1_reg;
                done_reg_336_pp2_iter3_reg <= done_reg_336_pp2_iter2_reg;
                done_reg_336_pp2_iter4_reg <= done_reg_336_pp2_iter3_reg;
                done_reg_336_pp2_iter5_reg <= done_reg_336_pp2_iter4_reg;
                done_reg_336_pp2_iter6_reg <= done_reg_336_pp2_iter5_reg;
                done_reg_336_pp2_iter7_reg <= done_reg_336_pp2_iter6_reg;
                done_reg_336_pp2_iter8_reg <= done_reg_336_pp2_iter7_reg;
                done_reg_336_pp2_iter9_reg <= done_reg_336_pp2_iter8_reg;
                o_reg_300_pp2_iter10_reg <= o_reg_300_pp2_iter9_reg;
                o_reg_300_pp2_iter11_reg <= o_reg_300_pp2_iter10_reg;
                o_reg_300_pp2_iter12_reg <= o_reg_300_pp2_iter11_reg;
                o_reg_300_pp2_iter13_reg <= o_reg_300_pp2_iter12_reg;
                o_reg_300_pp2_iter14_reg <= o_reg_300_pp2_iter13_reg;
                o_reg_300_pp2_iter15_reg <= o_reg_300_pp2_iter14_reg;
                o_reg_300_pp2_iter2_reg <= o_reg_300;
                o_reg_300_pp2_iter3_reg <= o_reg_300_pp2_iter2_reg;
                o_reg_300_pp2_iter4_reg <= o_reg_300_pp2_iter3_reg;
                o_reg_300_pp2_iter5_reg <= o_reg_300_pp2_iter4_reg;
                o_reg_300_pp2_iter6_reg <= o_reg_300_pp2_iter5_reg;
                o_reg_300_pp2_iter7_reg <= o_reg_300_pp2_iter6_reg;
                o_reg_300_pp2_iter8_reg <= o_reg_300_pp2_iter7_reg;
                o_reg_300_pp2_iter9_reg <= o_reg_300_pp2_iter8_reg;
                tmp_538_reg_1440_pp2_iter17_reg <= tmp_538_reg_1440;
                tmp_538_reg_1440_pp2_iter18_reg <= tmp_538_reg_1440_pp2_iter17_reg;
                tmp_538_reg_1440_pp2_iter19_reg <= tmp_538_reg_1440_pp2_iter18_reg;
                w_reg_324_pp2_iter2_reg <= w_reg_324_pp2_iter1_reg;
                w_reg_324_pp2_iter3_reg <= w_reg_324_pp2_iter2_reg;
                w_reg_324_pp2_iter4_reg <= w_reg_324_pp2_iter3_reg;
                w_reg_324_pp2_iter5_reg <= w_reg_324_pp2_iter4_reg;
                w_reg_324_pp2_iter6_reg <= w_reg_324_pp2_iter5_reg;
                w_reg_324_pp2_iter7_reg <= w_reg_324_pp2_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done1_reg_240 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                done13_3_reg_1259 <= done13_3_fu_629_p2;
                o10_3_reg_1249 <= o10_3_fu_616_p3;
                w12_1_reg_1254 <= w12_1_fu_623_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                done1_reg_240_pp0_iter1_reg <= done1_reg_240;
                done1_reg_240_pp0_iter2_reg <= done1_reg_240_pp0_iter1_reg;
                done1_reg_240_pp0_iter3_reg <= done1_reg_240_pp0_iter2_reg;
                done1_reg_240_pp0_iter4_reg <= done1_reg_240_pp0_iter3_reg;
                done1_reg_240_pp0_iter5_reg <= done1_reg_240_pp0_iter4_reg;
                w7_reg_228_pp0_iter1_reg <= w7_reg_228;
                w7_reg_228_pp0_iter2_reg <= w7_reg_228_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done4_reg_288 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                done4_3_reg_1353 <= done4_3_fu_845_p2;
                o1_3_reg_1343 <= o1_3_fu_832_p3;
                w3_1_reg_1348 <= w3_1_fu_839_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                done4_reg_288_pp1_iter1_reg <= done4_reg_288;
                done4_reg_288_pp1_iter2_reg <= done4_reg_288_pp1_iter1_reg;
                done4_reg_288_pp1_iter3_reg <= done4_reg_288_pp1_iter2_reg;
                done4_reg_288_pp1_iter4_reg <= done4_reg_288_pp1_iter3_reg;
                done4_reg_288_pp1_iter5_reg <= done4_reg_288_pp1_iter4_reg;
                w3_reg_276_pp1_iter1_reg <= w3_reg_276;
                w3_reg_276_pp1_iter2_reg <= w3_reg_276_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                done_reg_336_pp2_iter1_reg <= done_reg_336;
                w_reg_324_pp2_iter1_reg <= w_reg_324;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done1_reg_240 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                h11_2_reg_1244 <= h11_2_fu_590_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done4_reg_288 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001))) then
                h2_2_reg_1338 <= h2_2_fu_806_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_done_phi_fu_340_p4 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                h_6_reg_1393 <= h_6_fu_959_p2;
                tmp_241_reg_1386 <= tmp_241_fu_954_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_done4_phi_fu_292_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                h_7_reg_1308 <= h_7_fu_759_p2;
                tmp_218_reg_1292 <= tmp_218_fu_743_p2;
                tmp_234_reg_1297 <= tmp_234_fu_748_p2;
                w_7_reg_1302 <= w_7_fu_753_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_done1_phi_fu_244_p4 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                h_8_reg_1214 <= h_8_fu_543_p2;
                tmp_229_reg_1198 <= tmp_229_fu_527_p2;
                tmp_237_reg_1203 <= tmp_237_fu_532_p2;
                w_8_reg_1208 <= w_8_fu_537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001))) then
                o1_reg_252_pp1_iter1_reg <= o1_reg_252;
                o1_reg_252_pp1_iter2_reg <= o1_reg_252_pp1_iter1_reg;
                o1_reg_252_pp1_iter3_reg <= o1_reg_252_pp1_iter2_reg;
                o1_reg_252_pp1_iter4_reg <= o1_reg_252_pp1_iter3_reg;
                sel_tmp20_reg_1314_pp1_iter1_reg <= sel_tmp20_reg_1314;
                sel_tmp20_reg_1314_pp1_iter2_reg <= sel_tmp20_reg_1314_pp1_iter1_reg;
                sel_tmp20_reg_1314_pp1_iter3_reg <= sel_tmp20_reg_1314_pp1_iter2_reg;
                sel_tmp20_reg_1314_pp1_iter4_reg <= sel_tmp20_reg_1314_pp1_iter3_reg;
                sel_tmp20_reg_1314_pp1_iter5_reg <= sel_tmp20_reg_1314_pp1_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                o7_reg_204_pp0_iter1_reg <= o7_reg_204;
                o7_reg_204_pp0_iter2_reg <= o7_reg_204_pp0_iter1_reg;
                o7_reg_204_pp0_iter3_reg <= o7_reg_204_pp0_iter2_reg;
                o7_reg_204_pp0_iter4_reg <= o7_reg_204_pp0_iter3_reg;
                sel_tmp28_reg_1220_pp0_iter1_reg <= sel_tmp28_reg_1220;
                sel_tmp28_reg_1220_pp0_iter2_reg <= sel_tmp28_reg_1220_pp0_iter1_reg;
                sel_tmp28_reg_1220_pp0_iter3_reg <= sel_tmp28_reg_1220_pp0_iter2_reg;
                sel_tmp28_reg_1220_pp0_iter4_reg <= sel_tmp28_reg_1220_pp0_iter3_reg;
                sel_tmp28_reg_1220_pp0_iter5_reg <= sel_tmp28_reg_1220_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done_reg_336 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                o_3_reg_1404 <= o_3_fu_1014_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done4_reg_288 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001))) then
                o_8_reg_1326 <= o_8_fu_787_p2;
                sel_tmp20_reg_1314 <= sel_tmp20_fu_773_p2;
                sel_tmp24_reg_1332 <= sel_tmp24_fu_793_p2;
                tmp_243_reg_1320 <= tmp_243_fu_779_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done1_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                o_9_reg_1232 <= o_9_fu_571_p2;
                sel_tmp28_reg_1220 <= sel_tmp28_fu_557_p2;
                sel_tmp29_reg_1238 <= sel_tmp29_fu_577_p2;
                tmp_245_reg_1226 <= tmp_245_fu_563_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((done1_reg_240_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((done4_reg_288_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)))) then
                reg_368 <= fifo_cout_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done_reg_336_pp2_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                tmp_204_reg_1419 <= grp_fu_973_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done_reg_336_pp2_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                tmp_205_reg_1424 <= tmp_205_fu_1041_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done_reg_336_pp2_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                tmp_206_reg_1429 <= grp_fu_1046_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done4_reg_288_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_212_reg_1358 <= grp_fu_738_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    tmp_213_cast_reg_1188(12 downto 0) <= tmp_213_cast_fu_514_p1(12 downto 0);
                    tmp_331_reg_1167(30 downto 0) <= tmp_331_fu_468_p1(30 downto 0);
                    tmp_332_reg_1173(30 downto 0) <= tmp_332_fu_482_p1(30 downto 0);
                    tmp_333_reg_1178(30 downto 0) <= tmp_333_fu_496_p1(30 downto 0);
                    tmp_334_reg_1183(30 downto 0) <= tmp_334_fu_510_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done4_reg_288_pp1_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001))) then
                tmp_213_reg_1363 <= tmp_213_fu_850_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done4_reg_288_pp1_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2))) then
                tmp_214_reg_1368 <= grp_fu_855_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    tmp_218_cast_reg_1162(12 downto 0) <= tmp_218_cast_fu_454_p1(12 downto 0);
                    tmp_532_reg_1142(31 downto 1) <= tmp_532_fu_430_p2(31 downto 1);
                    tmp_533_reg_1147(31 downto 1) <= tmp_533_fu_436_p2(31 downto 1);
                    tmp_534_reg_1152(31 downto 1) <= tmp_534_fu_442_p2(31 downto 1);
                    tmp_535_reg_1157(31 downto 1) <= tmp_535_fu_448_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done1_reg_240_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_220_reg_1264 <= grp_fu_522_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done1_reg_240_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_224_reg_1269 <= tmp_224_fu_639_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((done1_reg_240_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_225_reg_1274 <= grp_fu_645_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((write_2_fu_422_p3 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    tmp_cast_reg_1193(12 downto 0) <= tmp_cast_fu_518_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_phi_mux_done_phi_fu_340_p4 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                w_1_reg_1399 <= w_1_fu_965_p3;
            end if;
        end if;
    end process;
    LAYER_OUT_NUM_T_cast_reg_1131(31 downto 16) <= "0000000000000000";
    tmp_532_reg_1142(0) <= '0';
    tmp_533_reg_1147(0) <= '0';
    tmp_534_reg_1152(0) <= '0';
    tmp_535_reg_1157(0) <= '0';
    tmp_218_cast_reg_1162(31 downto 13) <= "0000000000000000000";
    tmp_331_reg_1167(31) <= '0';
    tmp_332_reg_1173(31) <= '0';
    tmp_333_reg_1178(31) <= '0';
    tmp_334_reg_1183(31) <= '0';
    tmp_213_cast_reg_1188(31 downto 13) <= "0000000000000000000";
    tmp_cast_reg_1193(31 downto 13) <= "0000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp2_iter20, ap_enable_reg_pp1_iter5, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, write_2_fu_422_p3, ap_phi_mux_done1_phi_fu_244_p4, ap_enable_reg_pp0_iter0, ap_phi_mux_done4_phi_fu_292_p4, ap_enable_reg_pp1_iter0, ap_phi_mux_done_phi_fu_340_p4, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage2_subdone, ap_enable_reg_pp0_iter6, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_block_pp1_stage2_subdone, ap_enable_reg_pp1_iter6, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter21, ap_block_pp0_stage1_subdone, ap_block_pp1_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((write_2_fu_422_p3 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((write_2_fu_422_p3 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((write_2_fu_422_p3 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((write_2_fu_422_p3 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_phi_mux_done1_phi_fu_244_p4 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_phi_mux_done1_phi_fu_244_p4 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_phi_mux_done4_phi_fu_292_p4 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif ((((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_phi_mux_done4_phi_fu_292_p4 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_phi_mux_done_phi_fu_340_p4 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter20 = ap_const_logic_0) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter20 = ap_const_logic_0) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_phi_mux_done_phi_fu_340_p4 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    LAYER_OUT_NUM_T_cast_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LAYER_OUT_NUM_T),32));
    POOL_ODD_not_fu_402_p0 <= (0=>POOL_ODD, others=>'-');
    POOL_ODD_not_fu_402_p2 <= (ap_const_lv1_1 xor POOL_ODD_not_fu_402_p0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(6);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(7);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state21 <= ap_CS_fsm(4);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone)
    begin
                ap_block_pp0 <= (((ap_ST_fsm_pp0_stage2 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage2_subdone)) or ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone)) or ((ap_ST_fsm_pp0_stage1 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage1_subdone)));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(fifo_cout_V_V_empty_n, ap_enable_reg_pp0_iter5, done1_reg_240_pp0_iter5_reg)
    begin
                ap_block_pp0_stage2_11001 <= ((done1_reg_240_pp0_iter5_reg = ap_const_lv1_0) and (fifo_cout_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(fifo_cout_V_V_empty_n, ap_enable_reg_pp0_iter5, done1_reg_240_pp0_iter5_reg)
    begin
                ap_block_pp0_stage2_subdone <= ((done1_reg_240_pp0_iter5_reg = ap_const_lv1_0) and (fifo_cout_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1));
    end process;


    ap_block_pp1_assign_proc : process(ap_CS_fsm, ap_block_pp1_stage0_subdone, ap_block_pp1_stage2_subdone, ap_block_pp1_stage1_subdone)
    begin
                ap_block_pp1 <= (((ap_const_boolean_1 = ap_block_pp1_stage2_subdone) and (ap_ST_fsm_pp1_stage2 = ap_CS_fsm)) or ((ap_ST_fsm_pp1_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp1_stage0_subdone)) or ((ap_ST_fsm_pp1_stage1 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp1_stage1_subdone)));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage2_11001_assign_proc : process(fifo_cout_V_V_empty_n, ap_enable_reg_pp1_iter5, done4_reg_288_pp1_iter5_reg)
    begin
                ap_block_pp1_stage2_11001 <= ((done4_reg_288_pp1_iter5_reg = ap_const_lv1_0) and (fifo_cout_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage2_subdone_assign_proc : process(fifo_cout_V_V_empty_n, ap_enable_reg_pp1_iter5, done4_reg_288_pp1_iter5_reg)
    begin
                ap_block_pp1_stage2_subdone <= ((done4_reg_288_pp1_iter5_reg = ap_const_lv1_0) and (fifo_cout_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1));
    end process;


    ap_block_pp2_assign_proc : process(ap_CS_fsm, ap_block_pp2_stage0_subdone)
    begin
                ap_block_pp2 <= ((ap_const_boolean_1 = ap_block_pp2_stage0_subdone) and (ap_ST_fsm_pp2_stage0 = ap_CS_fsm));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_11001_assign_proc : process(fifo_cout_V_V_empty_n, ap_enable_reg_pp2_iter20, done_reg_336_pp2_iter19_reg)
    begin
                ap_block_pp2_stage0_11001 <= ((done_reg_336_pp2_iter19_reg = ap_const_lv1_0) and (fifo_cout_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp2_iter20 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(fifo_cout_V_V_empty_n, ap_enable_reg_pp2_iter20, done_reg_336_pp2_iter19_reg)
    begin
                ap_block_pp2_stage0_subdone <= ((done_reg_336_pp2_iter19_reg = ap_const_lv1_0) and (fifo_cout_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp2_iter20 = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_pp0_stage2_iter5_assign_proc : process(fifo_cout_V_V_empty_n, done1_reg_240_pp0_iter5_reg)
    begin
                ap_block_state19_pp0_stage2_iter5 <= ((done1_reg_240_pp0_iter5_reg = ap_const_lv1_0) and (fifo_cout_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state20_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp1_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp1_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp1_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state39_pp1_stage2_iter5_assign_proc : process(fifo_cout_V_V_empty_n, done4_reg_288_pp1_iter5_reg)
    begin
                ap_block_state39_pp1_stage2_iter5 <= ((done4_reg_288_pp1_iter5_reg = ap_const_lv1_0) and (fifo_cout_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp2_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp2_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp2_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp2_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp2_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp2_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp2_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp2_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp2_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp2_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp2_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp2_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state61_pp2_stage0_iter20_assign_proc : process(fifo_cout_V_V_empty_n, done_reg_336_pp2_iter19_reg)
    begin
                ap_block_state61_pp2_stage0_iter20 <= ((done_reg_336_pp2_iter19_reg = ap_const_lv1_0) and (fifo_cout_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state62_pp2_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(ap_phi_mux_done1_phi_fu_244_p4)
    begin
        if ((ap_phi_mux_done1_phi_fu_244_p4 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state22_assign_proc : process(ap_phi_mux_done4_phi_fu_292_p4)
    begin
        if ((ap_phi_mux_done4_phi_fu_292_p4 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state22 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state41_assign_proc : process(ap_phi_mux_done_phi_fu_340_p4)
    begin
        if ((ap_phi_mux_done_phi_fu_340_p4 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state41 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state41 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_enable_operation_277_assign_proc : process(done_reg_336_pp2_iter16_reg)
    begin
                ap_enable_operation_277 <= (done_reg_336_pp2_iter16_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_279_assign_proc : process(done_reg_336_pp2_iter18_reg)
    begin
                ap_enable_operation_279 <= (done_reg_336_pp2_iter18_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_288_assign_proc : process(done_reg_336_pp2_iter20_reg)
    begin
                ap_enable_operation_288 <= (done_reg_336_pp2_iter20_reg = ap_const_lv1_0);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_enable_state58_pp2_iter17_stage0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter17)
    begin
                ap_enable_state58_pp2_iter17_stage0 <= ((ap_enable_reg_pp2_iter17 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0));
    end process;


    ap_enable_state60_pp2_iter19_stage0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter19)
    begin
                ap_enable_state60_pp2_iter19_stage0 <= ((ap_enable_reg_pp2_iter19 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0));
    end process;


    ap_enable_state62_pp2_iter21_stage0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter21)
    begin
                ap_enable_state62_pp2_iter21_stage0 <= ((ap_enable_reg_pp2_iter21 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter6)
    begin
        if (((ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter20, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter19, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter8, ap_enable_reg_pp2_iter9, ap_enable_reg_pp2_iter10, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter13, ap_enable_reg_pp2_iter14, ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter16, ap_enable_reg_pp2_iter17, ap_enable_reg_pp2_iter18, ap_enable_reg_pp2_iter21)
    begin
        if (((ap_enable_reg_pp2_iter21 = ap_const_logic_0) and (ap_enable_reg_pp2_iter18 = ap_const_logic_0) and (ap_enable_reg_pp2_iter17 = ap_const_logic_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_0) and (ap_enable_reg_pp2_iter15 = ap_const_logic_0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_0) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_0) and (ap_enable_reg_pp2_iter9 = ap_const_logic_0) and (ap_enable_reg_pp2_iter8 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter20 = ap_const_logic_0) and (ap_enable_reg_pp2_iter19 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_done1_phi_fu_244_p4_assign_proc : process(done1_reg_240, ap_CS_fsm_pp0_stage0, done13_3_reg_1259, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((done1_reg_240 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_done1_phi_fu_244_p4 <= done13_3_reg_1259;
        else 
            ap_phi_mux_done1_phi_fu_244_p4 <= done1_reg_240;
        end if; 
    end process;


    ap_phi_mux_done4_phi_fu_292_p4_assign_proc : process(done4_reg_288, ap_CS_fsm_pp1_stage0, done4_3_reg_1353, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (done4_reg_288 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_done4_phi_fu_292_p4 <= done4_3_reg_1353;
        else 
            ap_phi_mux_done4_phi_fu_292_p4 <= done4_reg_288;
        end if; 
    end process;


    ap_phi_mux_done_phi_fu_340_p4_assign_proc : process(ap_block_pp2_stage0, done_reg_336, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, done_3_fu_1035_p2)
    begin
        if (((done_reg_336 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_done_phi_fu_340_p4 <= done_3_fu_1035_p2;
        else 
            ap_phi_mux_done_phi_fu_340_p4 <= done_reg_336;
        end if; 
    end process;


    ap_phi_mux_h2_phi_fu_268_p4_assign_proc : process(done4_reg_288, h2_reg_264, ap_CS_fsm_pp1_stage0, h2_2_reg_1338, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (done4_reg_288 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_h2_phi_fu_268_p4 <= h2_2_reg_1338;
        else 
            ap_phi_mux_h2_phi_fu_268_p4 <= h2_reg_264;
        end if; 
    end process;


    ap_phi_mux_h7_phi_fu_220_p4_assign_proc : process(done1_reg_240, h7_reg_216, ap_CS_fsm_pp0_stage0, h11_2_reg_1244, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((done1_reg_240 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_h7_phi_fu_220_p4 <= h11_2_reg_1244;
        else 
            ap_phi_mux_h7_phi_fu_220_p4 <= h7_reg_216;
        end if; 
    end process;


    ap_phi_mux_h_phi_fu_316_p4_assign_proc : process(ap_block_pp2_stage0, done_reg_336, h_reg_312, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, h_2_fu_1028_p3)
    begin
        if (((done_reg_336 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_h_phi_fu_316_p4 <= h_2_fu_1028_p3;
        else 
            ap_phi_mux_h_phi_fu_316_p4 <= h_reg_312;
        end if; 
    end process;


    ap_phi_mux_o1_phi_fu_256_p4_assign_proc : process(o1_reg_252, ap_CS_fsm_pp1_stage1, done4_reg_288_pp1_iter1_reg, o1_3_reg_1343, ap_enable_reg_pp1_iter1, ap_block_pp1_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage1) and (done4_reg_288_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1))) then 
            ap_phi_mux_o1_phi_fu_256_p4 <= o1_3_reg_1343;
        else 
            ap_phi_mux_o1_phi_fu_256_p4 <= o1_reg_252;
        end if; 
    end process;


    ap_phi_mux_o7_phi_fu_208_p4_assign_proc : process(o7_reg_204, ap_CS_fsm_pp0_stage1, done1_reg_240_pp0_iter1_reg, o10_3_reg_1249, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1)
    begin
        if (((done1_reg_240_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_phi_mux_o7_phi_fu_208_p4 <= o10_3_reg_1249;
        else 
            ap_phi_mux_o7_phi_fu_208_p4 <= o7_reg_204;
        end if; 
    end process;


    ap_phi_mux_o_phi_fu_304_p4_assign_proc : process(ap_block_pp2_stage0, o_reg_300, done_reg_336_pp2_iter1_reg, o_3_reg_1404, ap_enable_reg_pp2_iter2)
    begin
        if (((done_reg_336_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_o_phi_fu_304_p4 <= o_3_reg_1404;
        else 
            ap_phi_mux_o_phi_fu_304_p4 <= o_reg_300;
        end if; 
    end process;


    ap_phi_mux_w3_phi_fu_280_p4_assign_proc : process(done4_reg_288, ap_CS_fsm_pp1_stage0, w3_reg_276, w3_1_reg_1348, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (done4_reg_288 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_w3_phi_fu_280_p4 <= w3_1_reg_1348;
        else 
            ap_phi_mux_w3_phi_fu_280_p4 <= w3_reg_276;
        end if; 
    end process;


    ap_phi_mux_w7_phi_fu_232_p4_assign_proc : process(done1_reg_240, ap_CS_fsm_pp0_stage0, w7_reg_228, w12_1_reg_1254, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((done1_reg_240 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_w7_phi_fu_232_p4 <= w12_1_reg_1254;
        else 
            ap_phi_mux_w7_phi_fu_232_p4 <= w7_reg_228;
        end if; 
    end process;


    ap_phi_mux_w_phi_fu_328_p4_assign_proc : process(ap_block_pp2_stage0, done_reg_336, ap_CS_fsm_pp2_stage0, w_reg_324, w_1_reg_1399, ap_enable_reg_pp2_iter1)
    begin
        if (((done_reg_336 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_w_phi_fu_328_p4 <= w_1_reg_1399;
        else 
            ap_phi_mux_w_phi_fu_328_p4 <= w_reg_324;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_388_p0 <= (0=>POOL_ODD, others=>'-');
    brmerge1_fu_388_p2 <= (brmerge_not_fu_382_p2 or brmerge1_fu_388_p0);
    brmerge_fu_376_p0 <= (0=>en, others=>'-');
    brmerge_fu_376_p1 <= (0=>up_sample, others=>'-');
    brmerge_fu_376_p2 <= (brmerge_fu_376_p1 or brmerge_fu_376_p0);
    brmerge_not_fu_382_p2 <= (brmerge_fu_376_p2 xor ap_const_lv1_1);
    cout_buf_0_V_11_fu_708_p3 <= 
        cout_buf_0_V_9_fu_683_p1 when (tmp_545_reg_1284(0) = '1') else 
        reg_368;
    cout_buf_0_V_13_fu_1094_p3 <= 
        cout_buf_0_V_reg_1446 when (tmp_538_reg_1440_pp2_iter19_reg(0) = '1') else 
        fifo_cout_V_V_dout;
    cout_buf_0_V_14_fu_932_p3 <= 
        cout_buf_0_V_7_fu_918_p3 when (sel_tmp20_reg_1314_pp1_iter5_reg(0) = '1') else 
        cout_buf_0_V_4_fu_904_p3;
    cout_buf_0_V_15_fu_722_p3 <= 
        cout_buf_0_V_11_fu_708_p3 when (sel_tmp28_reg_1220_pp0_iter5_reg(0) = '1') else 
        cout_buf_0_V_6_fu_694_p3;
    cout_buf_0_V_3_fu_893_p1 <= cout_burst_buf_V_q0(256 - 1 downto 0);
    cout_buf_0_V_4_fu_904_p3 <= 
        cout_buf_0_V_3_fu_893_p1 when (tmp_541_reg_1378(0) = '1') else 
        ap_const_lv256_lc_1;
    cout_buf_0_V_6_fu_694_p3 <= 
        cout_buf_0_V_9_fu_683_p1 when (tmp_545_reg_1284(0) = '1') else 
        ap_const_lv256_lc_1;
    cout_buf_0_V_7_fu_918_p3 <= 
        cout_buf_0_V_3_fu_893_p1 when (tmp_541_reg_1378(0) = '1') else 
        reg_368;
    cout_buf_0_V_9_fu_683_p1 <= cout_burst_buf_V_q0(256 - 1 downto 0);
    cout_buf_0_V_fu_1084_p1 <= cout_burst_buf_V_q0(256 - 1 downto 0);
    cout_buf_1_V_11_fu_701_p3 <= 
        reg_368 when (tmp_545_reg_1284(0) = '1') else 
        grp_fu_358_p4;
    cout_buf_1_V_13_fu_1088_p3 <= 
        fifo_cout_V_V_dout when (tmp_538_reg_1440_pp2_iter19_reg(0) = '1') else 
        cout_buf_1_V_reg_1451;
    cout_buf_1_V_14_fu_925_p3 <= 
        cout_buf_1_V_8_fu_911_p3 when (sel_tmp20_reg_1314_pp1_iter5_reg(0) = '1') else 
        cout_buf_1_V_5_fu_897_p3;
    cout_buf_1_V_15_fu_715_p3 <= 
        cout_buf_1_V_11_fu_701_p3 when (sel_tmp28_reg_1220_pp0_iter5_reg(0) = '1') else 
        cout_buf_1_V_6_fu_687_p3;
    cout_buf_1_V_5_fu_897_p3 <= 
        ap_const_lv256_lc_1 when (tmp_541_reg_1378(0) = '1') else 
        grp_fu_358_p4;
    cout_buf_1_V_6_fu_687_p3 <= 
        ap_const_lv256_lc_1 when (tmp_545_reg_1284(0) = '1') else 
        grp_fu_358_p4;
    cout_buf_1_V_8_fu_911_p3 <= 
        reg_368 when (tmp_541_reg_1378(0) = '1') else 
        grp_fu_358_p4;

    cout_burst_buf_V_address0_assign_proc : process(ap_block_pp2_stage0, ap_enable_reg_pp1_iter5, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage0, cout_burst_buf_V_add_2_reg_1279, cout_burst_buf_V_add_1_reg_1373, cout_burst_buf_V_add_reg_1434, ap_enable_reg_pp0_iter6, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter17, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp1_stage1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter17 = ap_const_logic_1))) then 
            cout_burst_buf_V_address0 <= cout_burst_buf_V_add_reg_1434;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            cout_burst_buf_V_address0 <= cout_burst_buf_V_add_1_reg_1373;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            cout_burst_buf_V_address0 <= cout_burst_buf_V_add_2_reg_1279;
        else 
            cout_burst_buf_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    cout_burst_buf_V_address1 <= cout_burst_buf_V_add_reg_1434_pp2_iter20_reg;

    cout_burst_buf_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter5, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_block_pp2_stage0_11001, ap_block_pp0_stage2_11001, ap_block_pp1_stage2_11001, ap_enable_reg_pp2_iter19, ap_enable_reg_pp0_iter6, ap_enable_reg_pp1_iter6, ap_enable_reg_pp2_iter17, ap_enable_reg_pp2_iter18)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter18 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter17 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            cout_burst_buf_V_ce0 <= ap_const_logic_1;
        else 
            cout_burst_buf_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cout_burst_buf_V_ce1_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter21)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1))) then 
            cout_burst_buf_V_ce1 <= ap_const_logic_1;
        else 
            cout_burst_buf_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cout_burst_buf_V_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp1_iter6, ap_block_pp0_stage0, ap_block_pp1_stage0, p_Result_2_fu_729_p3, p_Result_1_fu_939_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cout_burst_buf_V_d0 <= p_Result_1_fu_939_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            cout_burst_buf_V_d0 <= p_Result_2_fu_729_p3;
        else 
            cout_burst_buf_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    cout_burst_buf_V_d1 <= (cout_buf_1_V_13_reg_1456 & cout_buf_0_V_13_reg_1461);

    cout_burst_buf_V_we0_assign_proc : process(done4_reg_288_pp1_iter5_reg, done1_reg_240_pp0_iter5_reg, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter6, ap_enable_reg_pp1_iter6)
    begin
        if ((((done1_reg_240_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((done4_reg_288_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            cout_burst_buf_V_we0 <= ap_const_logic_1;
        else 
            cout_burst_buf_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cout_burst_buf_V_we1_assign_proc : process(ap_block_pp2_stage0_11001, done_reg_336_pp2_iter20_reg, ap_enable_reg_pp2_iter21)
    begin
        if (((done_reg_336_pp2_iter20_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1))) then 
            cout_burst_buf_V_we1 <= ap_const_logic_1;
        else 
            cout_burst_buf_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    done13_3_fu_629_p2 <= (tmp_251_fu_598_p2 and sel_tmp29_reg_1238);
    done4_3_fu_845_p2 <= (tmp_250_fu_814_p2 and sel_tmp24_reg_1332);
    done_3_fu_1035_p2 <= (tmp_249_fu_988_p2 and sel_tmp4_fu_1001_p2);

    fifo_cout_V_V_blk_n_assign_proc : process(fifo_cout_V_V_empty_n, ap_enable_reg_pp2_iter20, ap_block_pp2_stage0, done_reg_336_pp2_iter19_reg, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter5, ap_block_pp1_stage2, done4_reg_288_pp1_iter5_reg, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter5, ap_block_pp0_stage2, done1_reg_240_pp0_iter5_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (done1_reg_240_pp0_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp1_stage2) and (done4_reg_288_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((done_reg_336_pp2_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter20 = ap_const_logic_1)))) then 
            fifo_cout_V_V_blk_n <= fifo_cout_V_V_empty_n;
        else 
            fifo_cout_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_cout_V_V_read_assign_proc : process(ap_enable_reg_pp2_iter20, done_reg_336_pp2_iter19_reg, ap_CS_fsm_pp1_stage2, ap_enable_reg_pp1_iter5, done4_reg_288_pp1_iter5_reg, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter5, done1_reg_240_pp0_iter5_reg, ap_block_pp2_stage0_11001, ap_block_pp0_stage2_11001, ap_block_pp1_stage2_11001)
    begin
        if ((((done1_reg_240_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((done4_reg_288_pp1_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((done_reg_336_pp2_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter20 = ap_const_logic_1)))) then 
            fifo_cout_V_V_read <= ap_const_logic_1;
        else 
            fifo_cout_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1046_ce_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1046_ce <= ap_const_logic_1;
        else 
            grp_fu_1046_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1046_p1 <= LAYER_OUT_NUM_T_cast_reg_1131(16 - 1 downto 0);
    grp_fu_348_p4 <= LAYER_OUT_NUM_T(15 downto 3);
    grp_fu_358_p4 <= cout_burst_buf_V_q0(511 downto 256);

    grp_fu_522_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_522_ce <= ap_const_logic_1;
        else 
            grp_fu_522_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_645_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_645_ce <= ap_const_logic_1;
        else 
            grp_fu_645_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_645_p1 <= LAYER_OUT_NUM_T_cast_reg_1131(16 - 1 downto 0);

    grp_fu_738_ce_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001)))) then 
            grp_fu_738_ce <= ap_const_logic_1;
        else 
            grp_fu_738_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_738_p0 <= tmp_331_reg_1167(31 - 1 downto 0);

    grp_fu_855_ce_assign_proc : process(ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_block_pp1_stage2_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001)))) then 
            grp_fu_855_ce <= ap_const_logic_1;
        else 
            grp_fu_855_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_855_p1 <= LAYER_OUT_NUM_T_cast_reg_1131(16 - 1 downto 0);

    grp_fu_973_ce_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_973_ce <= ap_const_logic_1;
        else 
            grp_fu_973_ce <= ap_const_logic_0;
        end if; 
    end process;

    h11_2_fu_590_p3 <= 
        sel_tmp31_fu_583_p3 when (tmp_245_fu_563_p2(0) = '1') else 
        h7_reg_216;
    h2_2_fu_806_p3 <= 
        sel_tmp27_fu_799_p3 when (tmp_243_fu_779_p2(0) = '1') else 
        h2_reg_264;
    h_2_fu_1028_p3 <= 
        sel_tmp9_fu_1021_p3 when (tmp_241_reg_1386(0) = '1') else 
        h_reg_312;
    h_6_fu_959_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_h_phi_fu_316_p4));
    h_7_fu_759_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_h2_phi_fu_268_p4));
    h_8_fu_543_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_h7_phi_fu_220_p4));
    local_cout_idx_1_fu_865_p2 <= std_logic_vector(unsigned(tmp_539_fu_859_p2) + unsigned(tmp_214_reg_1368));
    local_cout_idx_2_fu_655_p2 <= std_logic_vector(unsigned(tmp_543_fu_649_p2) + unsigned(tmp_225_reg_1274));
    local_cout_idx_fu_1056_p2 <= std_logic_vector(unsigned(tmp_536_fu_1050_p2) + unsigned(tmp_206_reg_1429));
    o10_3_fu_616_p3 <= 
        sel_tmp30_fu_609_p3 when (tmp_245_reg_1226(0) = '1') else 
        o7_reg_204;
    o1_3_fu_832_p3 <= 
        sel_tmp25_fu_825_p3 when (tmp_243_reg_1320(0) = '1') else 
        o1_reg_252;
    o_3_fu_1014_p3 <= 
        sel_tmp5_fu_1006_p3 when (tmp_241_reg_1386(0) = '1') else 
        ap_phi_mux_o_phi_fu_304_p4;
    o_7_fu_982_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_o_phi_fu_304_p4));
    o_8_fu_787_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_o1_phi_fu_256_p4));
    o_9_fu_571_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_o7_phi_fu_208_p4));
    p_1_fu_993_p3 <= 
        ap_const_lv32_0 when (tmp_249_fu_988_p2(0) = '1') else 
        o_7_fu_982_p2;
    p_2_fu_818_p3 <= 
        ap_const_lv32_0 when (tmp_250_fu_814_p2(0) = '1') else 
        o_8_reg_1326;
    p_3_fu_602_p3 <= 
        ap_const_lv32_0 when (tmp_251_fu_598_p2(0) = '1') else 
        o_9_reg_1232;
    p_Result_1_fu_939_p3 <= (cout_buf_1_V_14_fu_925_p3 & cout_buf_0_V_14_fu_932_p3);
    p_Result_2_fu_729_p3 <= (cout_buf_1_V_15_fu_715_p3 & cout_buf_0_V_15_fu_722_p3);
    p_s_fu_394_p0 <= (0=>up_sample, others=>'-');
    p_s_fu_394_p3 <= 
        ap_const_lv2_2 when (p_s_fu_394_p0(0) = '1') else 
        ap_const_lv2_0;
    sel_tmp20_fu_773_p2 <= (tmp_235_fu_769_p2 and tmp_219_fu_765_p2);
    sel_tmp24_fu_793_p2 <= (tmp_247_fu_783_p2 and tmp_243_fu_779_p2);
    sel_tmp25_fu_825_p3 <= 
        p_2_fu_818_p3 when (sel_tmp24_reg_1332(0) = '1') else 
        o1_reg_252;
    sel_tmp26_fu_414_p3 <= 
        p_s_fu_394_p3 when (sel_tmp_fu_408_p2(0) = '1') else 
        ap_const_lv2_1;
    sel_tmp27_fu_799_p3 <= 
        ap_const_lv32_0 when (sel_tmp24_fu_793_p2(0) = '1') else 
        h_7_reg_1308;
    sel_tmp28_fu_557_p2 <= (tmp_238_fu_553_p2 and tmp_230_fu_549_p2);
    sel_tmp29_fu_577_p2 <= (tmp_248_fu_567_p2 and tmp_245_fu_563_p2);
    sel_tmp30_fu_609_p3 <= 
        p_3_fu_602_p3 when (sel_tmp29_reg_1238(0) = '1') else 
        o7_reg_204;
    sel_tmp31_fu_583_p3 <= 
        ap_const_lv32_0 when (sel_tmp29_fu_577_p2(0) = '1') else 
        h_8_reg_1214;
    sel_tmp4_fu_1001_p2 <= (tmp_246_fu_978_p2 and tmp_241_reg_1386);
    sel_tmp5_fu_1006_p3 <= 
        p_1_fu_993_p3 when (sel_tmp4_fu_1001_p2(0) = '1') else 
        ap_phi_mux_o_phi_fu_304_p4;
    sel_tmp9_fu_1021_p3 <= 
        ap_const_lv32_0 when (sel_tmp4_fu_1001_p2(0) = '1') else 
        h_6_reg_1393;
    sel_tmp_fu_408_p0 <= (0=>up_sample, others=>'-');
    sel_tmp_fu_408_p2 <= (sel_tmp_fu_408_p0 and POOL_ODD_not_fu_402_p2);
    tmp_195_fu_472_p4 <= in_h_iter(31 downto 1);
    tmp_196_fu_486_p4 <= in_w_iter(31 downto 1);
    tmp_197_fu_500_p4 <= LAYER_IN_H_T(31 downto 1);
    tmp_205_fu_1041_p2 <= std_logic_vector(unsigned(w_reg_324_pp2_iter7_reg) + unsigned(tmp_204_reg_1419));
    tmp_208_fu_1061_p4 <= local_cout_idx_fu_1056_p2(31 downto 4);
    tmp_209_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_208_fu_1061_p4),64));
    tmp_213_cast_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_348_p4),32));
    tmp_213_fu_850_p2 <= std_logic_vector(unsigned(w3_reg_276_pp1_iter2_reg) + unsigned(tmp_212_reg_1358));
    tmp_216_fu_870_p4 <= local_cout_idx_1_fu_865_p2(31 downto 4);
    tmp_217_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_216_fu_870_p4),64));
    tmp_218_cast_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_348_p4),32));
    tmp_218_fu_743_p2 <= std_logic_vector(unsigned(tmp_332_reg_1173) + unsigned(ap_phi_mux_h2_phi_fu_268_p4));
    tmp_219_fu_765_p2 <= "1" when (unsigned(tmp_218_reg_1292) < unsigned(LAYER_OUT_H)) else "0";
    tmp_224_fu_639_p2 <= std_logic_vector(unsigned(w7_reg_228_pp0_iter2_reg) + unsigned(tmp_542_fu_634_p2));
    tmp_227_fu_660_p4 <= local_cout_idx_2_fu_655_p2(31 downto 4);
    tmp_228_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_227_fu_660_p4),64));
    tmp_229_fu_527_p2 <= std_logic_vector(unsigned(tmp_533_reg_1147) + unsigned(ap_phi_mux_h7_phi_fu_220_p4));
    tmp_230_fu_549_p2 <= "1" when (unsigned(tmp_229_reg_1198) < unsigned(LAYER_OUT_H)) else "0";
    tmp_234_fu_748_p2 <= std_logic_vector(unsigned(ap_phi_mux_w3_phi_fu_280_p4) + unsigned(tmp_333_reg_1178));
    tmp_235_fu_769_p2 <= "1" when (unsigned(tmp_234_reg_1297) < unsigned(LAYER_OUT_W)) else "0";
    tmp_237_fu_532_p2 <= std_logic_vector(unsigned(ap_phi_mux_w7_phi_fu_232_p4) + unsigned(tmp_534_reg_1152));
    tmp_238_fu_553_p2 <= "1" when (unsigned(tmp_237_reg_1203) < unsigned(LAYER_OUT_W)) else "0";
    tmp_241_fu_954_p1 <= LAYER_IN_W_T;
    tmp_241_fu_954_p2 <= "1" when (w_6_fu_948_p2 = tmp_241_fu_954_p1) else "0";
    tmp_243_fu_779_p2 <= "1" when (w_7_reg_1302 = tmp_331_reg_1167) else "0";
    tmp_245_fu_563_p2 <= "1" when (w_8_reg_1208 = tmp_532_reg_1142) else "0";
    tmp_246_fu_978_p2 <= "1" when (h_6_reg_1393 = LAYER_IN_H_T) else "0";
    tmp_247_fu_783_p2 <= "1" when (h_7_reg_1308 = tmp_334_reg_1183) else "0";
    tmp_248_fu_567_p2 <= "1" when (h_8_reg_1214 = tmp_535_reg_1157) else "0";
    tmp_249_fu_988_p2 <= "1" when (o_7_fu_982_p2 = tmp_cast_reg_1193) else "0";
    tmp_250_fu_814_p2 <= "1" when (o_8_reg_1326 = tmp_213_cast_reg_1188) else "0";
    tmp_251_fu_598_p2 <= "1" when (o_9_reg_1232 = tmp_218_cast_reg_1162) else "0";
    tmp_331_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_458_p4),32));
    tmp_332_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_195_fu_472_p4),32));
    tmp_333_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_196_fu_486_p4),32));
    tmp_334_fu_510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_197_fu_500_p4),32));
    tmp_532_fu_430_p0 <= LAYER_IN_W_T;
    tmp_532_fu_430_p2 <= std_logic_vector(shift_left(unsigned(tmp_532_fu_430_p0),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_533_fu_436_p2 <= std_logic_vector(shift_left(unsigned(in_h_iter),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_534_fu_442_p2 <= std_logic_vector(shift_left(unsigned(in_w_iter),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_535_fu_448_p2 <= std_logic_vector(shift_left(unsigned(LAYER_IN_H_T),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_536_fu_1050_p2 <= std_logic_vector(shift_left(unsigned(o_reg_300_pp2_iter15_reg),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    tmp_539_fu_859_p2 <= std_logic_vector(shift_left(unsigned(o1_reg_252_pp1_iter4_reg),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    tmp_542_fu_634_p2 <= std_logic_vector(shift_left(unsigned(tmp_220_reg_1264),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    tmp_543_fu_649_p2 <= std_logic_vector(shift_left(unsigned(o7_reg_204_pp0_iter4_reg),to_integer(unsigned('0' & ap_const_lv32_3(31-1 downto 0)))));
    tmp_cast_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_348_p4),32));
    tmp_s_fu_458_p1 <= LAYER_IN_W_T;
    tmp_s_fu_458_p4 <= tmp_s_fu_458_p1(31 downto 1);
    w12_1_fu_623_p3 <= 
        ap_const_lv32_0 when (tmp_245_reg_1226(0) = '1') else 
        w_8_reg_1208;
    w3_1_fu_839_p3 <= 
        ap_const_lv32_0 when (tmp_243_reg_1320(0) = '1') else 
        w_7_reg_1302;
    w_1_fu_965_p3 <= 
        ap_const_lv32_0 when (tmp_241_fu_954_p2(0) = '1') else 
        w_6_fu_948_p2;
    w_6_fu_948_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_w_phi_fu_328_p4));
    w_7_fu_753_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_w3_phi_fu_280_p4));
    w_8_fu_537_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(ap_phi_mux_w7_phi_fu_232_p4));
    write_2_fu_422_p3 <= 
        ap_const_lv2_0 when (brmerge1_fu_388_p2(0) = '1') else 
        sel_tmp26_fu_414_p3;
end behav;
