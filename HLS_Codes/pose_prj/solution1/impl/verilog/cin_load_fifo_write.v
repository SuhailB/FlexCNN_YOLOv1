// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cin_load_fifo_write (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cin_burst_buf_V_address0,
        cin_burst_buf_V_ce0,
        cin_burst_buf_V_q0,
        fifo_cin_V_V_din,
        fifo_cin_V_V_full_n,
        fifo_cin_V_V_write,
        LAYER_IN_NUM_T,
        LAYER_IN_H_T,
        LAYER_IN_W_T,
        FILTER_S
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state24 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] cin_burst_buf_V_address0;
output   cin_burst_buf_V_ce0;
input  [511:0] cin_burst_buf_V_q0;
output  [255:0] fifo_cin_V_V_din;
input   fifo_cin_V_V_full_n;
output   fifo_cin_V_V_write;
input  [31:0] LAYER_IN_NUM_T;
input  [31:0] LAYER_IN_H_T;
input  [31:0] LAYER_IN_W_T;
input  [31:0] FILTER_S;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cin_burst_buf_V_ce0;
reg fifo_cin_V_V_write;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_cin_V_V_blk_n;
reg    ap_enable_reg_pp0_iter20;
wire    ap_block_pp0_stage0;
reg   [0:0] done_reg_152;
reg   [0:0] done_reg_152_pp0_iter19_reg;
reg   [31:0] ii_reg_116;
reg   [31:0] ii_reg_116_pp0_iter2_reg;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
wire    ap_block_state12_pp0_stage0_iter9;
wire    ap_block_state13_pp0_stage0_iter10;
wire    ap_block_state14_pp0_stage0_iter11;
wire    ap_block_state15_pp0_stage0_iter12;
wire    ap_block_state16_pp0_stage0_iter13;
wire    ap_block_state17_pp0_stage0_iter14;
wire    ap_block_state18_pp0_stage0_iter15;
wire    ap_block_state19_pp0_stage0_iter16;
wire    ap_block_state20_pp0_stage0_iter17;
wire    ap_block_state21_pp0_stage0_iter18;
wire    ap_block_state22_pp0_stage0_iter19;
reg    ap_block_state23_pp0_stage0_iter20;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] ii_reg_116_pp0_iter3_reg;
reg   [31:0] ii_reg_116_pp0_iter4_reg;
reg   [31:0] ii_reg_116_pp0_iter5_reg;
reg   [31:0] ii_reg_116_pp0_iter6_reg;
reg   [31:0] ii_reg_116_pp0_iter7_reg;
reg   [31:0] ii_reg_116_pp0_iter8_reg;
reg   [31:0] ii_reg_116_pp0_iter9_reg;
reg   [31:0] ii_reg_116_pp0_iter10_reg;
reg   [31:0] ii_reg_116_pp0_iter11_reg;
reg   [31:0] ii_reg_116_pp0_iter12_reg;
reg   [31:0] ii_reg_116_pp0_iter13_reg;
reg   [31:0] ii_reg_116_pp0_iter14_reg;
reg   [31:0] ii_reg_116_pp0_iter15_reg;
reg  signed [31:0] hh_reg_128;
wire    ap_CS_fsm_pp0_stage0;
reg   [31:0] ww_reg_140;
reg   [31:0] ww_reg_140_pp0_iter1_reg;
reg   [31:0] ww_reg_140_pp0_iter2_reg;
reg   [31:0] ww_reg_140_pp0_iter3_reg;
reg   [31:0] ww_reg_140_pp0_iter4_reg;
reg   [31:0] ww_reg_140_pp0_iter5_reg;
reg   [31:0] ww_reg_140_pp0_iter6_reg;
reg   [31:0] ww_reg_140_pp0_iter7_reg;
reg   [0:0] done_reg_152_pp0_iter1_reg;
reg   [0:0] done_reg_152_pp0_iter2_reg;
reg   [0:0] done_reg_152_pp0_iter3_reg;
reg   [0:0] done_reg_152_pp0_iter4_reg;
reg   [0:0] done_reg_152_pp0_iter5_reg;
reg   [0:0] done_reg_152_pp0_iter6_reg;
reg   [0:0] done_reg_152_pp0_iter7_reg;
reg   [0:0] done_reg_152_pp0_iter8_reg;
reg   [0:0] done_reg_152_pp0_iter9_reg;
reg   [0:0] done_reg_152_pp0_iter10_reg;
reg   [0:0] done_reg_152_pp0_iter11_reg;
reg   [0:0] done_reg_152_pp0_iter12_reg;
reg   [0:0] done_reg_152_pp0_iter13_reg;
reg   [0:0] done_reg_152_pp0_iter14_reg;
reg   [0:0] done_reg_152_pp0_iter15_reg;
reg   [0:0] done_reg_152_pp0_iter16_reg;
reg   [0:0] done_reg_152_pp0_iter17_reg;
reg   [0:0] done_reg_152_pp0_iter18_reg;
wire   [31:0] tmp16_fu_174_p2;
reg   [31:0] tmp16_reg_353;
wire    ap_CS_fsm_state2;
wire  signed [31:0] tmp_s_fu_180_p2;
reg  signed [31:0] tmp_s_reg_364;
wire   [31:0] tmp_389_fu_185_p2;
reg   [31:0] tmp_389_reg_370;
wire   [31:0] tmp_fu_200_p1;
reg   [31:0] tmp_reg_375;
wire   [0:0] tmp_396_fu_210_p2;
reg   [0:0] tmp_396_reg_380;
reg   [0:0] ap_phi_mux_done_phi_fu_156_p4;
wire   [31:0] hh_5_fu_215_p2;
reg   [31:0] hh_5_reg_387;
wire   [31:0] ww_1_fu_221_p3;
reg   [31:0] ww_1_reg_393;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] ii_3_fu_270_p3;
reg   [31:0] ii_3_reg_398;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] hh_2_fu_284_p3;
wire   [0:0] done_3_fu_291_p2;
wire   [31:0] grp_fu_229_p2;
reg   [31:0] tmp_391_reg_413;
wire  signed [31:0] tmp_392_fu_297_p2;
reg  signed [31:0] tmp_392_reg_418;
wire   [31:0] grp_fu_302_p2;
reg   [31:0] tmp_393_reg_423;
reg   [27:0] bus_cin_idx_reg_428;
reg   [0:0] tmp_591_reg_433;
reg   [0:0] tmp_591_reg_433_pp0_iter17_reg;
reg   [0:0] tmp_591_reg_433_pp0_iter18_reg;
reg   [0:0] tmp_591_reg_433_pp0_iter19_reg;
reg   [511:0] bus_cin_data_V_reg_442;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg   [31:0] ap_phi_mux_ii_phi_fu_120_p4;
reg  signed [31:0] ap_phi_mux_hh_phi_fu_132_p4;
reg   [31:0] ap_phi_mux_ww_phi_fu_144_p4;
reg   [255:0] ap_phi_mux_tmp_V_phi_fu_167_p4;
wire   [255:0] ap_phi_reg_pp0_iter20_tmp_V_reg_164;
wire   [255:0] fifo_cin_data_V_1_fu_339_p1;
wire   [63:0] tmp_395_fu_335_p1;
reg    ap_block_pp0_stage0_01001;
wire  signed [31:0] tmp_390_fu_190_p1;
wire   [28:0] tmp_390_fu_190_p4;
wire   [31:0] ww_2_fu_204_p2;
wire   [31:0] ii_4_fu_238_p2;
wire   [0:0] tmp_398_fu_244_p2;
wire   [0:0] tmp_397_fu_234_p2;
wire   [0:0] sel_tmp_fu_257_p2;
wire   [31:0] p_s_fu_249_p3;
wire   [31:0] sel_tmp1_fu_262_p3;
wire   [31:0] sel_tmp5_fu_277_p3;
wire   [31:0] tmp_590_fu_306_p2;
wire   [31:0] local_cin_idx_fu_312_p2;
reg    grp_fu_229_ce;
reg    grp_fu_302_ce;
wire    ap_CS_fsm_state24;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_50;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
end

top_kernel_mul_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_32bkb_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_364),
    .din1(hh_reg_128),
    .ce(grp_fu_229_ce),
    .dout(grp_fu_229_p2)
);

top_kernel_mul_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_32bkb_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(LAYER_IN_NUM_T),
    .din1(tmp_392_reg_418),
    .ce(grp_fu_302_ce),
    .dout(grp_fu_302_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter20 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        done_reg_152 <= done_3_fu_291_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        done_reg_152 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hh_reg_128 <= hh_2_fu_284_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        hh_reg_128 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ii_reg_116 <= ii_3_reg_398;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ii_reg_116 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ww_reg_140 <= ww_1_reg_393;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        ww_reg_140 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152_pp0_iter18_reg == 1'd0))) begin
        bus_cin_data_V_reg_442 <= cin_burst_buf_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152_pp0_iter15_reg == 1'd0))) begin
        bus_cin_idx_reg_428 <= {{local_cin_idx_fu_312_p2[31:4]}};
        tmp_591_reg_433 <= local_cin_idx_fu_312_p2[32'd3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        done_reg_152_pp0_iter10_reg <= done_reg_152_pp0_iter9_reg;
        done_reg_152_pp0_iter11_reg <= done_reg_152_pp0_iter10_reg;
        done_reg_152_pp0_iter12_reg <= done_reg_152_pp0_iter11_reg;
        done_reg_152_pp0_iter13_reg <= done_reg_152_pp0_iter12_reg;
        done_reg_152_pp0_iter14_reg <= done_reg_152_pp0_iter13_reg;
        done_reg_152_pp0_iter15_reg <= done_reg_152_pp0_iter14_reg;
        done_reg_152_pp0_iter16_reg <= done_reg_152_pp0_iter15_reg;
        done_reg_152_pp0_iter17_reg <= done_reg_152_pp0_iter16_reg;
        done_reg_152_pp0_iter18_reg <= done_reg_152_pp0_iter17_reg;
        done_reg_152_pp0_iter19_reg <= done_reg_152_pp0_iter18_reg;
        done_reg_152_pp0_iter2_reg <= done_reg_152_pp0_iter1_reg;
        done_reg_152_pp0_iter3_reg <= done_reg_152_pp0_iter2_reg;
        done_reg_152_pp0_iter4_reg <= done_reg_152_pp0_iter3_reg;
        done_reg_152_pp0_iter5_reg <= done_reg_152_pp0_iter4_reg;
        done_reg_152_pp0_iter6_reg <= done_reg_152_pp0_iter5_reg;
        done_reg_152_pp0_iter7_reg <= done_reg_152_pp0_iter6_reg;
        done_reg_152_pp0_iter8_reg <= done_reg_152_pp0_iter7_reg;
        done_reg_152_pp0_iter9_reg <= done_reg_152_pp0_iter8_reg;
        ii_reg_116_pp0_iter10_reg <= ii_reg_116_pp0_iter9_reg;
        ii_reg_116_pp0_iter11_reg <= ii_reg_116_pp0_iter10_reg;
        ii_reg_116_pp0_iter12_reg <= ii_reg_116_pp0_iter11_reg;
        ii_reg_116_pp0_iter13_reg <= ii_reg_116_pp0_iter12_reg;
        ii_reg_116_pp0_iter14_reg <= ii_reg_116_pp0_iter13_reg;
        ii_reg_116_pp0_iter15_reg <= ii_reg_116_pp0_iter14_reg;
        ii_reg_116_pp0_iter2_reg <= ii_reg_116;
        ii_reg_116_pp0_iter3_reg <= ii_reg_116_pp0_iter2_reg;
        ii_reg_116_pp0_iter4_reg <= ii_reg_116_pp0_iter3_reg;
        ii_reg_116_pp0_iter5_reg <= ii_reg_116_pp0_iter4_reg;
        ii_reg_116_pp0_iter6_reg <= ii_reg_116_pp0_iter5_reg;
        ii_reg_116_pp0_iter7_reg <= ii_reg_116_pp0_iter6_reg;
        ii_reg_116_pp0_iter8_reg <= ii_reg_116_pp0_iter7_reg;
        ii_reg_116_pp0_iter9_reg <= ii_reg_116_pp0_iter8_reg;
        tmp_591_reg_433_pp0_iter17_reg <= tmp_591_reg_433;
        tmp_591_reg_433_pp0_iter18_reg <= tmp_591_reg_433_pp0_iter17_reg;
        tmp_591_reg_433_pp0_iter19_reg <= tmp_591_reg_433_pp0_iter18_reg;
        ww_reg_140_pp0_iter2_reg <= ww_reg_140_pp0_iter1_reg;
        ww_reg_140_pp0_iter3_reg <= ww_reg_140_pp0_iter2_reg;
        ww_reg_140_pp0_iter4_reg <= ww_reg_140_pp0_iter3_reg;
        ww_reg_140_pp0_iter5_reg <= ww_reg_140_pp0_iter4_reg;
        ww_reg_140_pp0_iter6_reg <= ww_reg_140_pp0_iter5_reg;
        ww_reg_140_pp0_iter7_reg <= ww_reg_140_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        done_reg_152_pp0_iter1_reg <= done_reg_152;
        ww_reg_140_pp0_iter1_reg <= ww_reg_140;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_done_phi_fu_156_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hh_5_reg_387 <= hh_5_fu_215_p2;
        tmp_396_reg_380 <= tmp_396_fu_210_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ii_3_reg_398 <= ii_3_fu_270_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp16_reg_353 <= tmp16_fu_174_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_389_reg_370 <= tmp_389_fu_185_p2;
        tmp_reg_375[28 : 0] <= tmp_fu_200_p1[28 : 0];
        tmp_s_reg_364 <= tmp_s_fu_180_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152_pp0_iter6_reg == 1'd0))) begin
        tmp_391_reg_413 <= grp_fu_229_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152_pp0_iter7_reg == 1'd0))) begin
        tmp_392_reg_418 <= tmp_392_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152_pp0_iter14_reg == 1'd0))) begin
        tmp_393_reg_423 <= grp_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_phi_mux_done_phi_fu_156_p4 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ww_1_reg_393 <= ww_1_fu_221_p3;
    end
end

always @ (*) begin
    if ((ap_phi_mux_done_phi_fu_156_p4 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((done_reg_152 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_done_phi_fu_156_p4 = done_3_fu_291_p2;
    end else begin
        ap_phi_mux_done_phi_fu_156_p4 = done_reg_152;
    end
end

always @ (*) begin
    if (((done_reg_152 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_hh_phi_fu_132_p4 = hh_2_fu_284_p3;
    end else begin
        ap_phi_mux_hh_phi_fu_132_p4 = hh_reg_128;
    end
end

always @ (*) begin
    if (((done_reg_152_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_ii_phi_fu_120_p4 = ii_3_reg_398;
    end else begin
        ap_phi_mux_ii_phi_fu_120_p4 = ii_reg_116;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_50)) begin
        if ((tmp_591_reg_433_pp0_iter19_reg == 1'd0)) begin
            ap_phi_mux_tmp_V_phi_fu_167_p4 = fifo_cin_data_V_1_fu_339_p1;
        end else if ((tmp_591_reg_433_pp0_iter19_reg == 1'd1)) begin
            ap_phi_mux_tmp_V_phi_fu_167_p4 = {{bus_cin_data_V_reg_442[511:256]}};
        end else begin
            ap_phi_mux_tmp_V_phi_fu_167_p4 = ap_phi_reg_pp0_iter20_tmp_V_reg_164;
        end
    end else begin
        ap_phi_mux_tmp_V_phi_fu_167_p4 = ap_phi_reg_pp0_iter20_tmp_V_reg_164;
    end
end

always @ (*) begin
    if (((done_reg_152 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_ww_phi_fu_144_p4 = ww_1_reg_393;
    end else begin
        ap_phi_mux_ww_phi_fu_144_p4 = ww_reg_140;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter19 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter18 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1)))) begin
        cin_burst_buf_V_ce0 = 1'b1;
    end else begin
        cin_burst_buf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((done_reg_152_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        fifo_cin_V_V_blk_n = fifo_cin_V_V_full_n;
    end else begin
        fifo_cin_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (done_reg_152_pp0_iter19_reg == 1'd0) & (ap_enable_reg_pp0_iter20 == 1'b1))) begin
        fifo_cin_V_V_write = 1'b1;
    end else begin
        fifo_cin_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_229_ce = 1'b1;
    end else begin
        grp_fu_229_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_302_ce = 1'b1;
    end else begin
        grp_fu_302_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_phi_mux_done_phi_fu_156_p4 == 1'd1)) & ~((ap_enable_reg_pp0_iter19 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter20 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter19 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter20 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_phi_mux_done_phi_fu_156_p4 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((done_reg_152_pp0_iter19_reg == 1'd0) & (fifo_cin_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((done_reg_152_pp0_iter19_reg == 1'd0) & (fifo_cin_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((done_reg_152_pp0_iter19_reg == 1'd0) & (fifo_cin_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp0_stage0_iter20 = ((done_reg_152_pp0_iter19_reg == 1'd0) & (fifo_cin_V_V_full_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_50 = ((done_reg_152_pp0_iter19_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter20 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter20_tmp_V_reg_164 = 'bx;

assign cin_burst_buf_V_address0 = tmp_395_fu_335_p1;

assign done_3_fu_291_p2 = (tmp_398_fu_244_p2 & sel_tmp_fu_257_p2);

assign fifo_cin_V_V_din = ap_phi_mux_tmp_V_phi_fu_167_p4;

assign fifo_cin_data_V_1_fu_339_p1 = bus_cin_data_V_reg_442[255:0];

assign hh_2_fu_284_p3 = ((tmp_396_reg_380[0:0] === 1'b1) ? sel_tmp5_fu_277_p3 : hh_reg_128);

assign hh_5_fu_215_p2 = ($signed(ap_phi_mux_hh_phi_fu_132_p4) + $signed(32'd1));

assign ii_3_fu_270_p3 = ((tmp_396_reg_380[0:0] === 1'b1) ? sel_tmp1_fu_262_p3 : ap_phi_mux_ii_phi_fu_120_p4);

assign ii_4_fu_238_p2 = (ap_phi_mux_ii_phi_fu_120_p4 + 32'd1);

assign local_cin_idx_fu_312_p2 = (tmp_590_fu_306_p2 + tmp_393_reg_423);

assign p_s_fu_249_p3 = ((tmp_398_fu_244_p2[0:0] === 1'b1) ? 32'd0 : ii_4_fu_238_p2);

assign sel_tmp1_fu_262_p3 = ((sel_tmp_fu_257_p2[0:0] === 1'b1) ? p_s_fu_249_p3 : ap_phi_mux_ii_phi_fu_120_p4);

assign sel_tmp5_fu_277_p3 = ((sel_tmp_fu_257_p2[0:0] === 1'b1) ? 32'd0 : hh_5_reg_387);

assign sel_tmp_fu_257_p2 = (tmp_397_fu_234_p2 & tmp_396_reg_380);

assign tmp16_fu_174_p2 = ($signed(FILTER_S) + $signed(32'd4294967295));

assign tmp_389_fu_185_p2 = (tmp16_reg_353 + LAYER_IN_H_T);

assign tmp_390_fu_190_p1 = LAYER_IN_NUM_T;

assign tmp_390_fu_190_p4 = {{tmp_390_fu_190_p1[31:3]}};

assign tmp_392_fu_297_p2 = (ww_reg_140_pp0_iter7_reg + tmp_391_reg_413);

assign tmp_395_fu_335_p1 = bus_cin_idx_reg_428;

assign tmp_396_fu_210_p2 = ((ww_2_fu_204_p2 == tmp_s_reg_364) ? 1'b1 : 1'b0);

assign tmp_397_fu_234_p2 = ((hh_5_reg_387 == tmp_389_reg_370) ? 1'b1 : 1'b0);

assign tmp_398_fu_244_p2 = ((ii_4_fu_238_p2 == tmp_reg_375) ? 1'b1 : 1'b0);

assign tmp_590_fu_306_p2 = ii_reg_116_pp0_iter15_reg << 32'd3;

assign tmp_fu_200_p1 = tmp_390_fu_190_p4;

assign tmp_s_fu_180_p2 = (tmp16_reg_353 + LAYER_IN_W_T);

assign ww_1_fu_221_p3 = ((tmp_396_fu_210_p2[0:0] === 1'b1) ? 32'd0 : ww_2_fu_204_p2);

assign ww_2_fu_204_p2 = (ap_phi_mux_ww_phi_fu_144_p4 + 32'd1);

always @ (posedge ap_clk) begin
    tmp_reg_375[31:29] <= 3'b000;
end

endmodule //cin_load_fifo_write
