// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_core (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cin_0_address0,
        cin_0_ce0,
        cin_0_q0,
        cin_1_address0,
        cin_1_ce0,
        cin_1_q0,
        cin_2_address0,
        cin_2_ce0,
        cin_2_q0,
        cin_3_address0,
        cin_3_ce0,
        cin_3_q0,
        cin_4_address0,
        cin_4_ce0,
        cin_4_q0,
        cin_5_address0,
        cin_5_ce0,
        cin_5_q0,
        cin_6_address0,
        cin_6_ce0,
        cin_6_q0,
        cin_7_address0,
        cin_7_ce0,
        cin_7_q0,
        weight_0_address0,
        weight_0_ce0,
        weight_0_q0,
        weight_1_address0,
        weight_1_ce0,
        weight_1_q0,
        weight_2_address0,
        weight_2_ce0,
        weight_2_q0,
        weight_3_address0,
        weight_3_ce0,
        weight_3_q0,
        weight_4_address0,
        weight_4_ce0,
        weight_4_q0,
        weight_5_address0,
        weight_5_ce0,
        weight_5_q0,
        weight_6_address0,
        weight_6_ce0,
        weight_6_q0,
        weight_7_address0,
        weight_7_ce0,
        weight_7_q0,
        cout_kernel_0_address0,
        cout_kernel_0_ce0,
        cout_kernel_0_we0,
        cout_kernel_0_d0,
        cout_kernel_0_q0,
        cout_kernel_1_address0,
        cout_kernel_1_ce0,
        cout_kernel_1_we0,
        cout_kernel_1_d0,
        cout_kernel_1_q0,
        cout_kernel_2_address0,
        cout_kernel_2_ce0,
        cout_kernel_2_we0,
        cout_kernel_2_d0,
        cout_kernel_2_q0,
        cout_kernel_3_address0,
        cout_kernel_3_ce0,
        cout_kernel_3_we0,
        cout_kernel_3_d0,
        cout_kernel_3_q0,
        cout_kernel_4_address0,
        cout_kernel_4_ce0,
        cout_kernel_4_we0,
        cout_kernel_4_d0,
        cout_kernel_4_q0,
        cout_kernel_5_address0,
        cout_kernel_5_ce0,
        cout_kernel_5_we0,
        cout_kernel_5_d0,
        cout_kernel_5_q0,
        cout_kernel_6_address0,
        cout_kernel_6_ce0,
        cout_kernel_6_we0,
        cout_kernel_6_d0,
        cout_kernel_6_q0,
        cout_kernel_7_address0,
        cout_kernel_7_ce0,
        cout_kernel_7_we0,
        cout_kernel_7_d0,
        cout_kernel_7_q0,
        init,
        LAYER_IN_NUM_T,
        LAYER_OUT_NUM_T,
        LAYER_IN_H_T,
        LAYER_IN_W_T,
        FILTER_S,
        STRIDE
);

parameter    ap_ST_fsm_state1 = 109'd1;
parameter    ap_ST_fsm_state2 = 109'd2;
parameter    ap_ST_fsm_state3 = 109'd4;
parameter    ap_ST_fsm_state4 = 109'd8;
parameter    ap_ST_fsm_state5 = 109'd16;
parameter    ap_ST_fsm_state6 = 109'd32;
parameter    ap_ST_fsm_state7 = 109'd64;
parameter    ap_ST_fsm_state8 = 109'd128;
parameter    ap_ST_fsm_state9 = 109'd256;
parameter    ap_ST_fsm_state10 = 109'd512;
parameter    ap_ST_fsm_state11 = 109'd1024;
parameter    ap_ST_fsm_state12 = 109'd2048;
parameter    ap_ST_fsm_state13 = 109'd4096;
parameter    ap_ST_fsm_state14 = 109'd8192;
parameter    ap_ST_fsm_state15 = 109'd16384;
parameter    ap_ST_fsm_state16 = 109'd32768;
parameter    ap_ST_fsm_state17 = 109'd65536;
parameter    ap_ST_fsm_state18 = 109'd131072;
parameter    ap_ST_fsm_state19 = 109'd262144;
parameter    ap_ST_fsm_state20 = 109'd524288;
parameter    ap_ST_fsm_state21 = 109'd1048576;
parameter    ap_ST_fsm_state22 = 109'd2097152;
parameter    ap_ST_fsm_state23 = 109'd4194304;
parameter    ap_ST_fsm_state24 = 109'd8388608;
parameter    ap_ST_fsm_state25 = 109'd16777216;
parameter    ap_ST_fsm_state26 = 109'd33554432;
parameter    ap_ST_fsm_state27 = 109'd67108864;
parameter    ap_ST_fsm_state28 = 109'd134217728;
parameter    ap_ST_fsm_state29 = 109'd268435456;
parameter    ap_ST_fsm_state30 = 109'd536870912;
parameter    ap_ST_fsm_state31 = 109'd1073741824;
parameter    ap_ST_fsm_state32 = 109'd2147483648;
parameter    ap_ST_fsm_state33 = 109'd4294967296;
parameter    ap_ST_fsm_state34 = 109'd8589934592;
parameter    ap_ST_fsm_state35 = 109'd17179869184;
parameter    ap_ST_fsm_state36 = 109'd34359738368;
parameter    ap_ST_fsm_state37 = 109'd68719476736;
parameter    ap_ST_fsm_state38 = 109'd137438953472;
parameter    ap_ST_fsm_state39 = 109'd274877906944;
parameter    ap_ST_fsm_state40 = 109'd549755813888;
parameter    ap_ST_fsm_state41 = 109'd1099511627776;
parameter    ap_ST_fsm_state42 = 109'd2199023255552;
parameter    ap_ST_fsm_state43 = 109'd4398046511104;
parameter    ap_ST_fsm_state44 = 109'd8796093022208;
parameter    ap_ST_fsm_state45 = 109'd17592186044416;
parameter    ap_ST_fsm_state46 = 109'd35184372088832;
parameter    ap_ST_fsm_state47 = 109'd70368744177664;
parameter    ap_ST_fsm_state48 = 109'd140737488355328;
parameter    ap_ST_fsm_state49 = 109'd281474976710656;
parameter    ap_ST_fsm_state50 = 109'd562949953421312;
parameter    ap_ST_fsm_state51 = 109'd1125899906842624;
parameter    ap_ST_fsm_state52 = 109'd2251799813685248;
parameter    ap_ST_fsm_state53 = 109'd4503599627370496;
parameter    ap_ST_fsm_state54 = 109'd9007199254740992;
parameter    ap_ST_fsm_state55 = 109'd18014398509481984;
parameter    ap_ST_fsm_state56 = 109'd36028797018963968;
parameter    ap_ST_fsm_state57 = 109'd72057594037927936;
parameter    ap_ST_fsm_state58 = 109'd144115188075855872;
parameter    ap_ST_fsm_state59 = 109'd288230376151711744;
parameter    ap_ST_fsm_state60 = 109'd576460752303423488;
parameter    ap_ST_fsm_state61 = 109'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 109'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 109'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 109'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 109'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 109'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 109'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 109'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 109'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 109'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 109'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 109'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 109'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 109'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 109'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 109'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 109'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 109'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 109'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 109'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 109'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 109'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 109'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 109'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 109'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 109'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 109'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 109'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 109'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 109'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 109'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 109'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 109'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 109'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 109'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 109'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 109'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 109'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 109'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 109'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 109'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 109'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 109'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 109'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 109'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 109'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 109'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 109'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 109'd324518553658426726783156020576256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] cin_0_address0;
output   cin_0_ce0;
input  [31:0] cin_0_q0;
output  [12:0] cin_1_address0;
output   cin_1_ce0;
input  [31:0] cin_1_q0;
output  [12:0] cin_2_address0;
output   cin_2_ce0;
input  [31:0] cin_2_q0;
output  [12:0] cin_3_address0;
output   cin_3_ce0;
input  [31:0] cin_3_q0;
output  [12:0] cin_4_address0;
output   cin_4_ce0;
input  [31:0] cin_4_q0;
output  [12:0] cin_5_address0;
output   cin_5_ce0;
input  [31:0] cin_5_q0;
output  [12:0] cin_6_address0;
output   cin_6_ce0;
input  [31:0] cin_6_q0;
output  [12:0] cin_7_address0;
output   cin_7_ce0;
input  [31:0] cin_7_q0;
output  [12:0] weight_0_address0;
output   weight_0_ce0;
input  [31:0] weight_0_q0;
output  [12:0] weight_1_address0;
output   weight_1_ce0;
input  [31:0] weight_1_q0;
output  [12:0] weight_2_address0;
output   weight_2_ce0;
input  [31:0] weight_2_q0;
output  [12:0] weight_3_address0;
output   weight_3_ce0;
input  [31:0] weight_3_q0;
output  [12:0] weight_4_address0;
output   weight_4_ce0;
input  [31:0] weight_4_q0;
output  [12:0] weight_5_address0;
output   weight_5_ce0;
input  [31:0] weight_5_q0;
output  [12:0] weight_6_address0;
output   weight_6_ce0;
input  [31:0] weight_6_q0;
output  [12:0] weight_7_address0;
output   weight_7_ce0;
input  [31:0] weight_7_q0;
output  [12:0] cout_kernel_0_address0;
output   cout_kernel_0_ce0;
output   cout_kernel_0_we0;
output  [31:0] cout_kernel_0_d0;
input  [31:0] cout_kernel_0_q0;
output  [12:0] cout_kernel_1_address0;
output   cout_kernel_1_ce0;
output   cout_kernel_1_we0;
output  [31:0] cout_kernel_1_d0;
input  [31:0] cout_kernel_1_q0;
output  [12:0] cout_kernel_2_address0;
output   cout_kernel_2_ce0;
output   cout_kernel_2_we0;
output  [31:0] cout_kernel_2_d0;
input  [31:0] cout_kernel_2_q0;
output  [12:0] cout_kernel_3_address0;
output   cout_kernel_3_ce0;
output   cout_kernel_3_we0;
output  [31:0] cout_kernel_3_d0;
input  [31:0] cout_kernel_3_q0;
output  [12:0] cout_kernel_4_address0;
output   cout_kernel_4_ce0;
output   cout_kernel_4_we0;
output  [31:0] cout_kernel_4_d0;
input  [31:0] cout_kernel_4_q0;
output  [12:0] cout_kernel_5_address0;
output   cout_kernel_5_ce0;
output   cout_kernel_5_we0;
output  [31:0] cout_kernel_5_d0;
input  [31:0] cout_kernel_5_q0;
output  [12:0] cout_kernel_6_address0;
output   cout_kernel_6_ce0;
output   cout_kernel_6_we0;
output  [31:0] cout_kernel_6_d0;
input  [31:0] cout_kernel_6_q0;
output  [12:0] cout_kernel_7_address0;
output   cout_kernel_7_ce0;
output   cout_kernel_7_we0;
output  [31:0] cout_kernel_7_d0;
input  [31:0] cout_kernel_7_q0;
input   init;
input  [15:0] LAYER_IN_NUM_T;
input  [15:0] LAYER_OUT_NUM_T;
input  [31:0] LAYER_IN_H_T;
input  [31:0] LAYER_IN_W_T;
input  [15:0] FILTER_S;
input  [31:0] STRIDE;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cin_0_ce0;
reg cin_1_ce0;
reg cin_2_ce0;
reg cin_3_ce0;
reg cin_4_ce0;
reg cin_5_ce0;
reg cin_6_ce0;
reg cin_7_ce0;
reg weight_0_ce0;
reg weight_1_ce0;
reg weight_2_ce0;
reg weight_3_ce0;
reg weight_4_ce0;
reg weight_5_ce0;
reg weight_6_ce0;
reg weight_7_ce0;
reg[12:0] cout_kernel_0_address0;
reg cout_kernel_0_ce0;
reg cout_kernel_0_we0;
reg[31:0] cout_kernel_0_d0;
reg[12:0] cout_kernel_1_address0;
reg cout_kernel_1_ce0;
reg cout_kernel_1_we0;
reg[31:0] cout_kernel_1_d0;
reg[12:0] cout_kernel_2_address0;
reg cout_kernel_2_ce0;
reg cout_kernel_2_we0;
reg[31:0] cout_kernel_2_d0;
reg[12:0] cout_kernel_3_address0;
reg cout_kernel_3_ce0;
reg cout_kernel_3_we0;
reg[31:0] cout_kernel_3_d0;
reg[12:0] cout_kernel_4_address0;
reg cout_kernel_4_ce0;
reg cout_kernel_4_we0;
reg[31:0] cout_kernel_4_d0;
reg[12:0] cout_kernel_5_address0;
reg cout_kernel_5_ce0;
reg cout_kernel_5_we0;
reg[31:0] cout_kernel_5_d0;
reg[12:0] cout_kernel_6_address0;
reg cout_kernel_6_ce0;
reg cout_kernel_6_we0;
reg[31:0] cout_kernel_6_d0;
reg[12:0] cout_kernel_7_address0;
reg cout_kernel_7_ce0;
reg cout_kernel_7_we0;
reg[31:0] cout_kernel_7_d0;

(* fsm_encoding = "none" *) reg   [108:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
wire   [0:0] init_read_read_fu_166_p2;
wire   [31:0] tmp_fu_671_p2;
reg   [31:0] tmp_reg_1149;
wire   [31:0] grp_fu_1095_p2;
reg   [31:0] bound_reg_1155;
wire   [15:0] o_10_fu_682_p2;
reg   [15:0] o_10_reg_1163;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_688_p2;
reg   [31:0] tmp_s_reg_1168;
wire    ap_CS_fsm_state39;
wire  signed [19:0] tmp_356_cast_fu_714_p1;
reg  signed [19:0] tmp_356_cast_reg_1173;
wire   [2:0] tmp_544_fu_718_p1;
reg   [2:0] tmp_544_reg_1178;
wire   [13:0] newIndex7_cast_fu_732_p1;
reg   [13:0] newIndex7_cast_reg_1182;
wire   [31:0] arrayNo1_fu_736_p1;
reg   [31:0] arrayNo1_reg_1188;
wire   [31:0] next_mul4_fu_740_p2;
reg   [31:0] next_mul4_reg_1193;
wire    ap_CS_fsm_state40;
wire   [37:0] next_mul5_fu_745_p2;
reg   [37:0] next_mul5_reg_1198;
wire   [31:0] h_9_fu_756_p2;
reg   [31:0] h_9_reg_1206;
wire   [31:0] grp_fu_762_p2;
reg   [31:0] tmp_334_reg_1211;
wire    ap_CS_fsm_state75;
wire   [31:0] next_mul_fu_766_p2;
reg   [31:0] next_mul_reg_1216;
wire    ap_CS_fsm_state76;
wire   [31:0] w_9_fu_776_p2;
reg   [31:0] w_9_reg_1224;
wire   [10:0] tmp_548_fu_790_p2;
reg   [10:0] tmp_548_reg_1229;
wire   [0:0] tmp_337_fu_771_p2;
reg   [12:0] cout_kernel_0_addr_reg_1234;
wire    ap_CS_fsm_state77;
reg   [12:0] cout_kernel_1_addr_reg_1239;
reg   [12:0] cout_kernel_2_addr_reg_1244;
reg   [12:0] cout_kernel_3_addr_reg_1249;
reg   [12:0] cout_kernel_4_addr_reg_1254;
reg   [12:0] cout_kernel_5_addr_reg_1259;
reg   [12:0] cout_kernel_6_addr_reg_1264;
reg   [12:0] cout_kernel_7_addr_reg_1269;
wire   [10:0] tmp_551_fu_828_p2;
reg   [10:0] tmp_551_reg_1274;
wire    ap_CS_fsm_state78;
reg   [12:0] cout_kernel_0_addr_1_reg_1279;
wire    ap_CS_fsm_state79;
reg   [12:0] cout_kernel_1_addr_1_reg_1284;
reg   [12:0] cout_kernel_2_addr_1_reg_1289;
reg   [12:0] cout_kernel_3_addr_1_reg_1294;
reg   [12:0] cout_kernel_4_addr_1_reg_1299;
reg   [12:0] cout_kernel_5_addr_1_reg_1304;
reg   [12:0] cout_kernel_6_addr_1_reg_1309;
reg   [12:0] cout_kernel_7_addr_1_reg_1314;
wire   [31:0] indvar_flatten_next_fu_863_p2;
reg   [31:0] indvar_flatten_next_reg_1322;
wire    ap_CS_fsm_state80;
wire   [15:0] p_mid2_fu_880_p3;
reg   [15:0] p_mid2_reg_1327;
wire   [0:0] exitcond_flatten_fu_858_p2;
wire   [15:0] arrayNo_mid2_v_v_fu_888_p3;
reg   [15:0] arrayNo_mid2_v_v_reg_1334;
wire   [2:0] tmp_552_fu_896_p1;
reg   [2:0] tmp_552_reg_1339;
reg   [12:0] tmp_553_reg_1344;
wire  signed [10:0] tmp_554_fu_924_p1;
reg  signed [10:0] tmp_554_reg_1349;
wire    ap_CS_fsm_state81;
wire   [10:0] tmp_555_fu_936_p1;
reg   [10:0] tmp_555_reg_1354;
wire   [8:0] tmp_556_fu_940_p1;
reg   [8:0] tmp_556_reg_1359;
wire   [10:0] tmp_369_fu_951_p2;
reg   [10:0] tmp_369_reg_1364;
wire    ap_CS_fsm_state82;
wire   [31:0] arrayNo_mid2_fu_956_p1;
reg   [31:0] arrayNo_mid2_reg_1369;
wire    ap_CS_fsm_state84;
wire   [13:0] newIndex1_mid2_cast_fu_959_p1;
reg   [13:0] newIndex1_mid2_cast_reg_1375;
wire  signed [10:0] grp_fu_1101_p2;
reg  signed [10:0] tmp_366_reg_1381;
wire   [15:0] q_2_fu_971_p2;
reg   [15:0] q_2_reg_1389;
wire    ap_CS_fsm_state85;
wire   [10:0] tmp_557_fu_988_p1;
reg   [10:0] tmp_557_reg_1394;
wire   [0:0] exitcond_fu_966_p2;
wire   [10:0] tmp_374_fu_996_p2;
reg   [10:0] tmp_374_reg_1399;
wire   [15:0] p_2_fu_1001_p2;
(* use_dsp48 = "no" *) wire   [10:0] tmp_370_fu_1006_p2;
reg   [10:0] tmp_370_reg_1409;
wire    ap_CS_fsm_state86;
wire   [13:0] tmp_373_fu_1017_p2;
reg   [13:0] tmp_373_reg_1414;
wire    ap_CS_fsm_state87;
wire   [13:0] tmp_377_fu_1029_p2;
reg   [13:0] tmp_377_reg_1419;
wire    ap_CS_fsm_state88;
reg   [31:0] cin_0_load_reg_1504;
wire    ap_CS_fsm_state89;
reg   [31:0] cin_1_load_reg_1509;
reg   [31:0] cin_2_load_reg_1514;
reg   [31:0] cin_3_load_reg_1519;
reg   [31:0] cin_4_load_reg_1524;
reg   [31:0] cin_5_load_reg_1529;
reg   [31:0] cin_6_load_reg_1534;
reg   [31:0] cin_7_load_reg_1539;
reg   [31:0] weight_0_load_reg_1544;
reg   [31:0] weight_1_load_reg_1549;
reg   [31:0] weight_2_load_reg_1554;
reg   [31:0] weight_3_load_reg_1559;
reg   [31:0] weight_4_load_reg_1564;
reg   [31:0] weight_5_load_reg_1569;
reg   [31:0] weight_6_load_reg_1574;
reg   [31:0] weight_7_load_reg_1579;
wire   [31:0] tmp_479_fu_1056_p10;
reg   [31:0] tmp_479_reg_1584;
wire    ap_CS_fsm_state90;
wire   [31:0] tmp_480_fu_1069_p10;
reg   [31:0] tmp_480_reg_1589;
reg   [31:0] cout_kernel_0_load_reg_1594;
wire    ap_CS_fsm_state96;
reg   [31:0] cout_kernel_1_load_reg_1599;
reg   [31:0] cout_kernel_2_load_reg_1604;
reg   [31:0] cout_kernel_3_load_reg_1609;
reg   [31:0] cout_kernel_4_load_reg_1614;
reg   [31:0] cout_kernel_5_load_reg_1619;
reg   [31:0] cout_kernel_6_load_reg_1624;
reg   [31:0] cout_kernel_7_load_reg_1629;
wire   [31:0] grp_fu_659_p2;
reg   [31:0] tmp_347_reg_1634;
wire    ap_CS_fsm_state97;
wire   [31:0] tmp_481_fu_1082_p10;
reg   [31:0] tmp_481_reg_1639;
wire   [31:0] grp_fu_655_p2;
reg   [31:0] tmp_348_reg_1644;
wire    ap_CS_fsm_state108;
reg   [15:0] o_reg_540;
wire   [0:0] tmp_333_fu_751_p2;
reg   [31:0] h_reg_552;
reg   [37:0] phi_mul4_reg_563;
reg   [31:0] phi_mul5_reg_575;
reg   [31:0] w_reg_587;
reg   [31:0] phi_mul_reg_599;
reg   [31:0] indvar_flatten_reg_611;
reg   [15:0] i_reg_622;
reg   [15:0] p_reg_633;
reg   [15:0] q_reg_644;
wire    ap_CS_fsm_state109;
wire   [63:0] tmp_361_cast_fu_808_p1;
wire   [63:0] tmp_365_cast_fu_846_p1;
wire   [63:0] tmp_373_cast_fu_1034_p1;
wire   [63:0] tmp_377_cast_fu_1045_p1;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state91;
wire   [17:0] tmp_355_fu_696_p3;
wire   [18:0] p_shl_cast_fu_704_p1;
wire   [18:0] tmp_332_cast_fu_692_p1;
wire   [18:0] tmp_356_fu_708_p2;
wire   [12:0] tmp_545_fu_722_p4;
wire   [10:0] tmp_547_fu_786_p1;
wire   [10:0] tmp_546_fu_782_p1;
wire   [13:0] tmp_360_cast_fu_796_p3;
wire   [13:0] tmp_361_fu_803_p2;
wire   [10:0] tmp_550_fu_824_p1;
wire   [10:0] tmp_549_fu_820_p1;
wire   [13:0] tmp_364_cast_fu_834_p3;
wire   [13:0] tmp_365_fu_841_p2;
wire   [0:0] exitcond1_fu_875_p2;
wire   [15:0] i_2_fu_869_p2;
wire   [31:0] p_cast4_mid2_cast_fu_910_p1;
wire   [31:0] tmp1_fu_913_p2;
wire   [31:0] tmp_341_fu_918_p2;
wire   [19:0] tmp_343_cast_fu_928_p1;
wire   [19:0] tmp_367_fu_931_p2;
wire   [10:0] p_shl_fu_944_p3;
wire   [31:0] q_cast3_fu_962_p1;
wire   [31:0] tmp2_fu_977_p2;
wire   [31:0] tmp_344_fu_983_p2;
wire   [10:0] tmp_558_fu_992_p1;
wire   [13:0] tmp_372_cast_fu_1010_p3;
wire   [13:0] tmp_376_cast_fu_1022_p3;
wire   [15:0] grp_fu_1095_p0;
wire   [15:0] grp_fu_1095_p1;
wire   [6:0] grp_fu_1101_p1;
wire   [0:0] exitcond3_fu_677_p2;
reg    grp_fu_688_ap_start;
wire    grp_fu_688_ap_done;
reg    grp_fu_762_ap_start;
wire    grp_fu_762_ap_done;
reg   [108:0] ap_NS_fsm;
wire   [31:0] grp_fu_1095_p00;
wire   [31:0] grp_fu_1095_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 109'd1;
end

top_kernel_fadd_3rcU #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_fadd_3rcU_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_481_reg_1639),
    .din1(tmp_347_reg_1634),
    .ce(1'b1),
    .dout(grp_fu_655_p2)
);

top_kernel_fmul_3sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_fmul_3sc4_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_479_reg_1584),
    .din1(tmp_480_reg_1589),
    .ce(1'b1),
    .dout(grp_fu_659_p2)
);

top_kernel_udiv_3kbM #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_udiv_3kbM_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_688_ap_start),
    .done(grp_fu_688_ap_done),
    .din0(LAYER_IN_H_T),
    .din1(STRIDE),
    .ce(1'b1),
    .dout(grp_fu_688_p2)
);

top_kernel_udiv_3kbM #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_udiv_3kbM_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_762_ap_start),
    .done(grp_fu_762_ap_done),
    .din0(LAYER_IN_W_T),
    .din1(STRIDE),
    .ce(1'b1),
    .dout(grp_fu_762_p2)
);

top_kernel_mux_83tde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mux_83tde_U99(
    .din0(cin_0_load_reg_1504),
    .din1(cin_1_load_reg_1509),
    .din2(cin_2_load_reg_1514),
    .din3(cin_3_load_reg_1519),
    .din4(cin_4_load_reg_1524),
    .din5(cin_5_load_reg_1529),
    .din6(cin_6_load_reg_1534),
    .din7(cin_7_load_reg_1539),
    .din8(arrayNo_mid2_reg_1369),
    .dout(tmp_479_fu_1056_p10)
);

top_kernel_mux_83tde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mux_83tde_U100(
    .din0(weight_0_load_reg_1544),
    .din1(weight_1_load_reg_1549),
    .din2(weight_2_load_reg_1554),
    .din3(weight_3_load_reg_1559),
    .din4(weight_4_load_reg_1564),
    .din5(weight_5_load_reg_1569),
    .din6(weight_6_load_reg_1574),
    .din7(weight_7_load_reg_1579),
    .din8(arrayNo_mid2_reg_1369),
    .dout(tmp_480_fu_1069_p10)
);

top_kernel_mux_83tde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mux_83tde_U101(
    .din0(cout_kernel_0_load_reg_1594),
    .din1(cout_kernel_1_load_reg_1599),
    .din2(cout_kernel_2_load_reg_1604),
    .din3(cout_kernel_3_load_reg_1609),
    .din4(cout_kernel_4_load_reg_1614),
    .din5(cout_kernel_5_load_reg_1619),
    .din6(cout_kernel_6_load_reg_1624),
    .din7(cout_kernel_7_load_reg_1629),
    .din8(arrayNo1_reg_1188),
    .dout(tmp_481_fu_1082_p10)
);

top_kernel_mul_muocq #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_muocq_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1095_p0),
    .din1(grp_fu_1095_p1),
    .ce(1'b1),
    .dout(grp_fu_1095_p2)
);

top_kernel_mul_muudo #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
top_kernel_mul_muudo_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_554_reg_1349),
    .din1(grp_fu_1101_p1),
    .ce(1'b1),
    .dout(grp_fu_1101_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_337_fu_771_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        h_reg_552 <= h_9_reg_1206;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        h_reg_552 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_966_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        i_reg_622 <= arrayNo_mid2_v_v_reg_1334;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        i_reg_622 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_966_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        indvar_flatten_reg_611 <= indvar_flatten_next_reg_1322;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        indvar_flatten_reg_611 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_333_fu_751_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        o_reg_540 <= o_10_reg_1163;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        o_reg_540 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_966_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        p_reg_633 <= p_2_fu_1001_p2;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        p_reg_633 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_337_fu_771_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        phi_mul4_reg_563 <= next_mul5_reg_1198;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        phi_mul4_reg_563 <= 38'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_337_fu_771_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        phi_mul5_reg_575 <= next_mul4_reg_1193;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        phi_mul5_reg_575 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_858_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        phi_mul_reg_599 <= next_mul_reg_1216;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        phi_mul_reg_599 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        q_reg_644 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        q_reg_644 <= q_2_reg_1389;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_858_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        w_reg_587 <= w_9_reg_1224;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        w_reg_587 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        arrayNo1_reg_1188[2 : 0] <= arrayNo1_fu_736_p1[2 : 0];
        newIndex7_cast_reg_1182[12 : 0] <= newIndex7_cast_fu_732_p1[12 : 0];
        tmp_356_cast_reg_1173 <= tmp_356_cast_fu_714_p1;
        tmp_544_reg_1178 <= tmp_544_fu_718_p1;
        tmp_s_reg_1168 <= grp_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        arrayNo_mid2_reg_1369[2 : 0] <= arrayNo_mid2_fu_956_p1[2 : 0];
        newIndex1_mid2_cast_reg_1375[12 : 0] <= newIndex1_mid2_cast_fu_959_p1[12 : 0];
        tmp_366_reg_1381 <= grp_fu_1101_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_858_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        arrayNo_mid2_v_v_reg_1334 <= arrayNo_mid2_v_v_fu_888_p3;
        p_mid2_reg_1327 <= p_mid2_fu_880_p3;
        tmp_552_reg_1339 <= tmp_552_fu_896_p1;
        tmp_553_reg_1344 <= {{arrayNo_mid2_v_v_fu_888_p3[15:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_1155 <= grp_fu_1095_p2;
        tmp_reg_1149 <= tmp_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        cin_0_load_reg_1504 <= cin_0_q0;
        cin_1_load_reg_1509 <= cin_1_q0;
        cin_2_load_reg_1514 <= cin_2_q0;
        cin_3_load_reg_1519 <= cin_3_q0;
        cin_4_load_reg_1524 <= cin_4_q0;
        cin_5_load_reg_1529 <= cin_5_q0;
        cin_6_load_reg_1534 <= cin_6_q0;
        cin_7_load_reg_1539 <= cin_7_q0;
        weight_0_load_reg_1544 <= weight_0_q0;
        weight_1_load_reg_1549 <= weight_1_q0;
        weight_2_load_reg_1554 <= weight_2_q0;
        weight_3_load_reg_1559 <= weight_3_q0;
        weight_4_load_reg_1564 <= weight_4_q0;
        weight_5_load_reg_1569 <= weight_5_q0;
        weight_6_load_reg_1574 <= weight_6_q0;
        weight_7_load_reg_1579 <= weight_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        cout_kernel_0_addr_1_reg_1279 <= tmp_365_cast_fu_846_p1;
        cout_kernel_1_addr_1_reg_1284 <= tmp_365_cast_fu_846_p1;
        cout_kernel_2_addr_1_reg_1289 <= tmp_365_cast_fu_846_p1;
        cout_kernel_3_addr_1_reg_1294 <= tmp_365_cast_fu_846_p1;
        cout_kernel_4_addr_1_reg_1299 <= tmp_365_cast_fu_846_p1;
        cout_kernel_5_addr_1_reg_1304 <= tmp_365_cast_fu_846_p1;
        cout_kernel_6_addr_1_reg_1309 <= tmp_365_cast_fu_846_p1;
        cout_kernel_7_addr_1_reg_1314 <= tmp_365_cast_fu_846_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        cout_kernel_0_addr_reg_1234 <= tmp_361_cast_fu_808_p1;
        cout_kernel_1_addr_reg_1239 <= tmp_361_cast_fu_808_p1;
        cout_kernel_2_addr_reg_1244 <= tmp_361_cast_fu_808_p1;
        cout_kernel_3_addr_reg_1249 <= tmp_361_cast_fu_808_p1;
        cout_kernel_4_addr_reg_1254 <= tmp_361_cast_fu_808_p1;
        cout_kernel_5_addr_reg_1259 <= tmp_361_cast_fu_808_p1;
        cout_kernel_6_addr_reg_1264 <= tmp_361_cast_fu_808_p1;
        cout_kernel_7_addr_reg_1269 <= tmp_361_cast_fu_808_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        cout_kernel_0_load_reg_1594 <= cout_kernel_0_q0;
        cout_kernel_1_load_reg_1599 <= cout_kernel_1_q0;
        cout_kernel_2_load_reg_1604 <= cout_kernel_2_q0;
        cout_kernel_3_load_reg_1609 <= cout_kernel_3_q0;
        cout_kernel_4_load_reg_1614 <= cout_kernel_4_q0;
        cout_kernel_5_load_reg_1619 <= cout_kernel_5_q0;
        cout_kernel_6_load_reg_1624 <= cout_kernel_6_q0;
        cout_kernel_7_load_reg_1629 <= cout_kernel_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        h_9_reg_1206 <= h_9_fu_756_p2;
        next_mul4_reg_1193 <= next_mul4_fu_740_p2;
        next_mul5_reg_1198 <= next_mul5_fu_745_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        indvar_flatten_next_reg_1322 <= indvar_flatten_next_fu_863_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        next_mul_reg_1216 <= next_mul_fu_766_p2;
        w_9_reg_1224 <= w_9_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        o_10_reg_1163 <= o_10_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        q_2_reg_1389 <= q_2_fu_971_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        tmp_334_reg_1211 <= grp_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        tmp_347_reg_1634 <= grp_fu_659_p2;
        tmp_481_reg_1639 <= tmp_481_fu_1082_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        tmp_348_reg_1644 <= grp_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        tmp_369_reg_1364 <= tmp_369_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        tmp_370_reg_1409 <= tmp_370_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        tmp_373_reg_1414 <= tmp_373_fu_1017_p2;
        tmp_377_reg_1419 <= tmp_377_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_966_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state85))) begin
        tmp_374_reg_1399 <= tmp_374_fu_996_p2;
        tmp_557_reg_1394 <= tmp_557_fu_988_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        tmp_479_reg_1584 <= tmp_479_fu_1056_p10;
        tmp_480_reg_1589 <= tmp_480_fu_1069_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_337_fu_771_p2 == 1'd1) & (init_read_read_fu_166_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        tmp_548_reg_1229 <= tmp_548_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        tmp_551_reg_1274 <= tmp_551_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        tmp_554_reg_1349 <= tmp_554_fu_924_p1;
        tmp_555_reg_1354 <= tmp_555_fu_936_p1;
        tmp_556_reg_1359 <= tmp_556_fu_940_p1;
    end
end

always @ (*) begin
    if ((((exitcond3_fu_677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_fu_677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_0_ce0 = 1'b1;
    end else begin
        cin_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_1_ce0 = 1'b1;
    end else begin
        cin_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_2_ce0 = 1'b1;
    end else begin
        cin_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_3_ce0 = 1'b1;
    end else begin
        cin_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_4_ce0 = 1'b1;
    end else begin
        cin_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_5_ce0 = 1'b1;
    end else begin
        cin_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_6_ce0 = 1'b1;
    end else begin
        cin_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_7_ce0 = 1'b1;
    end else begin
        cin_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_0_address0 = cout_kernel_0_addr_1_reg_1279;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_0_address0 = cout_kernel_0_addr_reg_1234;
    end else begin
        cout_kernel_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_0_ce0 = 1'b1;
    end else begin
        cout_kernel_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_0_d0 = tmp_348_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_0_d0 = 32'd0;
    end else begin
        cout_kernel_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_544_reg_1178 == 3'd0) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_544_reg_1178 == 3'd0) & (init_read_read_fu_166_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_0_we0 = 1'b1;
    end else begin
        cout_kernel_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_1_address0 = cout_kernel_1_addr_1_reg_1284;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_1_address0 = cout_kernel_1_addr_reg_1239;
    end else begin
        cout_kernel_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_1_ce0 = 1'b1;
    end else begin
        cout_kernel_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_1_d0 = tmp_348_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_1_d0 = 32'd0;
    end else begin
        cout_kernel_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_544_reg_1178 == 3'd1) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_544_reg_1178 == 3'd1) & (init_read_read_fu_166_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_1_we0 = 1'b1;
    end else begin
        cout_kernel_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_2_address0 = cout_kernel_2_addr_1_reg_1289;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_2_address0 = cout_kernel_2_addr_reg_1244;
    end else begin
        cout_kernel_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_2_ce0 = 1'b1;
    end else begin
        cout_kernel_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_2_d0 = tmp_348_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_2_d0 = 32'd0;
    end else begin
        cout_kernel_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_544_reg_1178 == 3'd2) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_544_reg_1178 == 3'd2) & (init_read_read_fu_166_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_2_we0 = 1'b1;
    end else begin
        cout_kernel_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_3_address0 = cout_kernel_3_addr_1_reg_1294;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_3_address0 = cout_kernel_3_addr_reg_1249;
    end else begin
        cout_kernel_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_3_ce0 = 1'b1;
    end else begin
        cout_kernel_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_3_d0 = tmp_348_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_3_d0 = 32'd0;
    end else begin
        cout_kernel_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_544_reg_1178 == 3'd3) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_544_reg_1178 == 3'd3) & (init_read_read_fu_166_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_3_we0 = 1'b1;
    end else begin
        cout_kernel_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_4_address0 = cout_kernel_4_addr_1_reg_1299;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_4_address0 = cout_kernel_4_addr_reg_1254;
    end else begin
        cout_kernel_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_4_ce0 = 1'b1;
    end else begin
        cout_kernel_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_4_d0 = tmp_348_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_4_d0 = 32'd0;
    end else begin
        cout_kernel_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_544_reg_1178 == 3'd4) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_544_reg_1178 == 3'd4) & (init_read_read_fu_166_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_4_we0 = 1'b1;
    end else begin
        cout_kernel_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_5_address0 = cout_kernel_5_addr_1_reg_1304;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_5_address0 = cout_kernel_5_addr_reg_1259;
    end else begin
        cout_kernel_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_5_ce0 = 1'b1;
    end else begin
        cout_kernel_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_5_d0 = tmp_348_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_5_d0 = 32'd0;
    end else begin
        cout_kernel_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_544_reg_1178 == 3'd5) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_544_reg_1178 == 3'd5) & (init_read_read_fu_166_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_5_we0 = 1'b1;
    end else begin
        cout_kernel_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_6_address0 = cout_kernel_6_addr_1_reg_1309;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_6_address0 = cout_kernel_6_addr_reg_1264;
    end else begin
        cout_kernel_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_6_ce0 = 1'b1;
    end else begin
        cout_kernel_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_6_d0 = tmp_348_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_6_d0 = 32'd0;
    end else begin
        cout_kernel_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_544_reg_1178 == 3'd6) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_544_reg_1178 == 3'd6) & (init_read_read_fu_166_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_6_we0 = 1'b1;
    end else begin
        cout_kernel_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_7_address0 = cout_kernel_7_addr_1_reg_1314;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_7_address0 = cout_kernel_7_addr_reg_1269;
    end else begin
        cout_kernel_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_7_ce0 = 1'b1;
    end else begin
        cout_kernel_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_7_d0 = tmp_348_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_7_d0 = 32'd0;
    end else begin
        cout_kernel_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_544_reg_1178 == 3'd7) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_544_reg_1178 == 3'd7) & (init_read_read_fu_166_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_7_we0 = 1'b1;
    end else begin
        cout_kernel_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_fu_677_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_688_ap_start = 1'b1;
    end else begin
        grp_fu_688_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_333_fu_751_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_762_ap_start = 1'b1;
    end else begin
        grp_fu_762_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_0_ce0 = 1'b1;
    end else begin
        weight_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_1_ce0 = 1'b1;
    end else begin
        weight_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_2_ce0 = 1'b1;
    end else begin
        weight_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_3_ce0 = 1'b1;
    end else begin
        weight_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_4_ce0 = 1'b1;
    end else begin
        weight_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_5_ce0 = 1'b1;
    end else begin
        weight_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_6_ce0 = 1'b1;
    end else begin
        weight_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_7_ce0 = 1'b1;
    end else begin
        weight_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond3_fu_677_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((tmp_333_fu_751_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((tmp_337_fu_771_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else if (((tmp_337_fu_771_p2 == 1'd1) & (init_read_read_fu_166_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((exitcond_flatten_fu_858_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            if (((exitcond_fu_966_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign arrayNo1_fu_736_p1 = tmp_544_fu_718_p1;

assign arrayNo_mid2_fu_956_p1 = tmp_552_reg_1339;

assign arrayNo_mid2_v_v_fu_888_p3 = ((exitcond1_fu_875_p2[0:0] === 1'b1) ? i_2_fu_869_p2 : i_reg_622);

assign cin_0_address0 = tmp_373_cast_fu_1034_p1;

assign cin_1_address0 = tmp_373_cast_fu_1034_p1;

assign cin_2_address0 = tmp_373_cast_fu_1034_p1;

assign cin_3_address0 = tmp_373_cast_fu_1034_p1;

assign cin_4_address0 = tmp_373_cast_fu_1034_p1;

assign cin_5_address0 = tmp_373_cast_fu_1034_p1;

assign cin_6_address0 = tmp_373_cast_fu_1034_p1;

assign cin_7_address0 = tmp_373_cast_fu_1034_p1;

assign exitcond1_fu_875_p2 = ((p_reg_633 == FILTER_S) ? 1'b1 : 1'b0);

assign exitcond3_fu_677_p2 = ((o_reg_540 == LAYER_OUT_NUM_T) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_858_p2 = ((indvar_flatten_reg_611 == bound_reg_1155) ? 1'b1 : 1'b0);

assign exitcond_fu_966_p2 = ((q_reg_644 == FILTER_S) ? 1'b1 : 1'b0);

assign grp_fu_1095_p0 = grp_fu_1095_p00;

assign grp_fu_1095_p00 = FILTER_S;

assign grp_fu_1095_p1 = grp_fu_1095_p10;

assign grp_fu_1095_p10 = LAYER_IN_NUM_T;

assign grp_fu_1101_p1 = 11'd54;

assign h_9_fu_756_p2 = (h_reg_552 + 32'd1);

assign i_2_fu_869_p2 = (i_reg_622 + 16'd1);

assign indvar_flatten_next_fu_863_p2 = (indvar_flatten_reg_611 + 32'd1);

assign init_read_read_fu_166_p2 = init;

assign newIndex1_mid2_cast_fu_959_p1 = tmp_553_reg_1344;

assign newIndex7_cast_fu_732_p1 = tmp_545_fu_722_p4;

assign next_mul4_fu_740_p2 = (phi_mul5_reg_575 + STRIDE);

assign next_mul5_fu_745_p2 = (phi_mul4_reg_563 + 38'd52);

assign next_mul_fu_766_p2 = (phi_mul_reg_599 + STRIDE);

assign o_10_fu_682_p2 = (o_reg_540 + 16'd1);

assign p_2_fu_1001_p2 = (p_mid2_reg_1327 + 16'd1);

assign p_cast4_mid2_cast_fu_910_p1 = p_mid2_reg_1327;

assign p_mid2_fu_880_p3 = ((exitcond1_fu_875_p2[0:0] === 1'b1) ? 16'd0 : p_reg_633);

assign p_shl_cast_fu_704_p1 = tmp_355_fu_696_p3;

assign p_shl_fu_944_p3 = {{tmp_556_reg_1359}, {2'd0}};

assign q_2_fu_971_p2 = (q_reg_644 + 16'd1);

assign q_cast3_fu_962_p1 = q_reg_644;

assign tmp1_fu_913_p2 = (tmp_reg_1149 + p_cast4_mid2_cast_fu_910_p1);

assign tmp2_fu_977_p2 = (q_cast3_fu_962_p1 + phi_mul_reg_599);

assign tmp_332_cast_fu_692_p1 = o_reg_540;

assign tmp_333_fu_751_p2 = ((h_reg_552 < tmp_s_reg_1168) ? 1'b1 : 1'b0);

assign tmp_337_fu_771_p2 = ((w_reg_587 < tmp_334_reg_1211) ? 1'b1 : 1'b0);

assign tmp_341_fu_918_p2 = (tmp1_fu_913_p2 + phi_mul5_reg_575);

assign tmp_343_cast_fu_928_p1 = p_mid2_reg_1327;

assign tmp_344_fu_983_p2 = (tmp_reg_1149 + tmp2_fu_977_p2);

assign tmp_355_fu_696_p3 = {{o_reg_540}, {2'd0}};

assign tmp_356_cast_fu_714_p1 = $signed(tmp_356_fu_708_p2);

assign tmp_356_fu_708_p2 = (p_shl_cast_fu_704_p1 - tmp_332_cast_fu_692_p1);

assign tmp_360_cast_fu_796_p3 = {{tmp_548_reg_1229}, {3'd0}};

assign tmp_361_cast_fu_808_p1 = tmp_361_fu_803_p2;

assign tmp_361_fu_803_p2 = (tmp_360_cast_fu_796_p3 + newIndex7_cast_reg_1182);

assign tmp_364_cast_fu_834_p3 = {{tmp_551_reg_1274}, {3'd0}};

assign tmp_365_cast_fu_846_p1 = tmp_365_fu_841_p2;

assign tmp_365_fu_841_p2 = (tmp_364_cast_fu_834_p3 + newIndex7_cast_reg_1182);

assign tmp_367_fu_931_p2 = ($signed(tmp_343_cast_fu_928_p1) + $signed(tmp_356_cast_reg_1173));

assign tmp_369_fu_951_p2 = (p_shl_fu_944_p3 - tmp_555_reg_1354);

assign tmp_370_fu_1006_p2 = ($signed(tmp_366_reg_1381) + $signed(tmp_557_reg_1394));

assign tmp_372_cast_fu_1010_p3 = {{tmp_370_reg_1409}, {3'd0}};

assign tmp_373_cast_fu_1034_p1 = tmp_373_reg_1414;

assign tmp_373_fu_1017_p2 = (tmp_372_cast_fu_1010_p3 + newIndex1_mid2_cast_reg_1375);

assign tmp_374_fu_996_p2 = (tmp_369_reg_1364 + tmp_558_fu_992_p1);

assign tmp_376_cast_fu_1022_p3 = {{tmp_374_reg_1399}, {3'd0}};

assign tmp_377_cast_fu_1045_p1 = tmp_377_reg_1419;

assign tmp_377_fu_1029_p2 = (tmp_376_cast_fu_1022_p3 + newIndex1_mid2_cast_reg_1375);

assign tmp_544_fu_718_p1 = o_reg_540[2:0];

assign tmp_545_fu_722_p4 = {{o_reg_540[15:3]}};

assign tmp_546_fu_782_p1 = w_reg_587[10:0];

assign tmp_547_fu_786_p1 = phi_mul4_reg_563[10:0];

assign tmp_548_fu_790_p2 = (tmp_547_fu_786_p1 + tmp_546_fu_782_p1);

assign tmp_549_fu_820_p1 = w_reg_587[10:0];

assign tmp_550_fu_824_p1 = phi_mul4_reg_563[10:0];

assign tmp_551_fu_828_p2 = (tmp_550_fu_824_p1 + tmp_549_fu_820_p1);

assign tmp_552_fu_896_p1 = arrayNo_mid2_v_v_fu_888_p3[2:0];

assign tmp_554_fu_924_p1 = tmp_341_fu_918_p2[10:0];

assign tmp_555_fu_936_p1 = tmp_367_fu_931_p2[10:0];

assign tmp_556_fu_940_p1 = tmp_367_fu_931_p2[8:0];

assign tmp_557_fu_988_p1 = tmp_344_fu_983_p2[10:0];

assign tmp_558_fu_992_p1 = q_reg_644[10:0];

assign tmp_fu_671_p2 = ($signed(STRIDE) + $signed(32'd4294967295));

assign w_9_fu_776_p2 = (w_reg_587 + 32'd1);

assign weight_0_address0 = tmp_377_cast_fu_1045_p1;

assign weight_1_address0 = tmp_377_cast_fu_1045_p1;

assign weight_2_address0 = tmp_377_cast_fu_1045_p1;

assign weight_3_address0 = tmp_377_cast_fu_1045_p1;

assign weight_4_address0 = tmp_377_cast_fu_1045_p1;

assign weight_5_address0 = tmp_377_cast_fu_1045_p1;

assign weight_6_address0 = tmp_377_cast_fu_1045_p1;

assign weight_7_address0 = tmp_377_cast_fu_1045_p1;

always @ (posedge ap_clk) begin
    newIndex7_cast_reg_1182[13] <= 1'b0;
    arrayNo1_reg_1188[31:3] <= 29'b00000000000000000000000000000;
    arrayNo_mid2_reg_1369[31:3] <= 29'b00000000000000000000000000000;
    newIndex1_mid2_cast_reg_1375[13] <= 1'b0;
end

endmodule //conv_core
