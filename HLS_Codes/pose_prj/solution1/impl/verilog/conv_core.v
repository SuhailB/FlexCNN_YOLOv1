// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_core (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cin_0_address0,
        cin_0_ce0,
        cin_0_q0,
        cin_1_address0,
        cin_1_ce0,
        cin_1_q0,
        cin_2_address0,
        cin_2_ce0,
        cin_2_q0,
        cin_3_address0,
        cin_3_ce0,
        cin_3_q0,
        cin_4_address0,
        cin_4_ce0,
        cin_4_q0,
        cin_5_address0,
        cin_5_ce0,
        cin_5_q0,
        cin_6_address0,
        cin_6_ce0,
        cin_6_q0,
        cin_7_address0,
        cin_7_ce0,
        cin_7_q0,
        weight_0_address0,
        weight_0_ce0,
        weight_0_q0,
        weight_1_address0,
        weight_1_ce0,
        weight_1_q0,
        weight_2_address0,
        weight_2_ce0,
        weight_2_q0,
        weight_3_address0,
        weight_3_ce0,
        weight_3_q0,
        weight_4_address0,
        weight_4_ce0,
        weight_4_q0,
        weight_5_address0,
        weight_5_ce0,
        weight_5_q0,
        weight_6_address0,
        weight_6_ce0,
        weight_6_q0,
        weight_7_address0,
        weight_7_ce0,
        weight_7_q0,
        cout_kernel_0_address0,
        cout_kernel_0_ce0,
        cout_kernel_0_we0,
        cout_kernel_0_d0,
        cout_kernel_0_q0,
        cout_kernel_1_address0,
        cout_kernel_1_ce0,
        cout_kernel_1_we0,
        cout_kernel_1_d0,
        cout_kernel_1_q0,
        cout_kernel_2_address0,
        cout_kernel_2_ce0,
        cout_kernel_2_we0,
        cout_kernel_2_d0,
        cout_kernel_2_q0,
        cout_kernel_3_address0,
        cout_kernel_3_ce0,
        cout_kernel_3_we0,
        cout_kernel_3_d0,
        cout_kernel_3_q0,
        cout_kernel_4_address0,
        cout_kernel_4_ce0,
        cout_kernel_4_we0,
        cout_kernel_4_d0,
        cout_kernel_4_q0,
        cout_kernel_5_address0,
        cout_kernel_5_ce0,
        cout_kernel_5_we0,
        cout_kernel_5_d0,
        cout_kernel_5_q0,
        cout_kernel_6_address0,
        cout_kernel_6_ce0,
        cout_kernel_6_we0,
        cout_kernel_6_d0,
        cout_kernel_6_q0,
        cout_kernel_7_address0,
        cout_kernel_7_ce0,
        cout_kernel_7_we0,
        cout_kernel_7_d0,
        cout_kernel_7_q0,
        init,
        LAYER_IN_NUM_T,
        LAYER_OUT_NUM_T,
        LAYER_IN_H_T,
        LAYER_IN_W_T,
        FILTER_S,
        STRIDE
);

parameter    ap_ST_fsm_state1 = 109'd1;
parameter    ap_ST_fsm_state2 = 109'd2;
parameter    ap_ST_fsm_state3 = 109'd4;
parameter    ap_ST_fsm_state4 = 109'd8;
parameter    ap_ST_fsm_state5 = 109'd16;
parameter    ap_ST_fsm_state6 = 109'd32;
parameter    ap_ST_fsm_state7 = 109'd64;
parameter    ap_ST_fsm_state8 = 109'd128;
parameter    ap_ST_fsm_state9 = 109'd256;
parameter    ap_ST_fsm_state10 = 109'd512;
parameter    ap_ST_fsm_state11 = 109'd1024;
parameter    ap_ST_fsm_state12 = 109'd2048;
parameter    ap_ST_fsm_state13 = 109'd4096;
parameter    ap_ST_fsm_state14 = 109'd8192;
parameter    ap_ST_fsm_state15 = 109'd16384;
parameter    ap_ST_fsm_state16 = 109'd32768;
parameter    ap_ST_fsm_state17 = 109'd65536;
parameter    ap_ST_fsm_state18 = 109'd131072;
parameter    ap_ST_fsm_state19 = 109'd262144;
parameter    ap_ST_fsm_state20 = 109'd524288;
parameter    ap_ST_fsm_state21 = 109'd1048576;
parameter    ap_ST_fsm_state22 = 109'd2097152;
parameter    ap_ST_fsm_state23 = 109'd4194304;
parameter    ap_ST_fsm_state24 = 109'd8388608;
parameter    ap_ST_fsm_state25 = 109'd16777216;
parameter    ap_ST_fsm_state26 = 109'd33554432;
parameter    ap_ST_fsm_state27 = 109'd67108864;
parameter    ap_ST_fsm_state28 = 109'd134217728;
parameter    ap_ST_fsm_state29 = 109'd268435456;
parameter    ap_ST_fsm_state30 = 109'd536870912;
parameter    ap_ST_fsm_state31 = 109'd1073741824;
parameter    ap_ST_fsm_state32 = 109'd2147483648;
parameter    ap_ST_fsm_state33 = 109'd4294967296;
parameter    ap_ST_fsm_state34 = 109'd8589934592;
parameter    ap_ST_fsm_state35 = 109'd17179869184;
parameter    ap_ST_fsm_state36 = 109'd34359738368;
parameter    ap_ST_fsm_state37 = 109'd68719476736;
parameter    ap_ST_fsm_state38 = 109'd137438953472;
parameter    ap_ST_fsm_state39 = 109'd274877906944;
parameter    ap_ST_fsm_state40 = 109'd549755813888;
parameter    ap_ST_fsm_state41 = 109'd1099511627776;
parameter    ap_ST_fsm_state42 = 109'd2199023255552;
parameter    ap_ST_fsm_state43 = 109'd4398046511104;
parameter    ap_ST_fsm_state44 = 109'd8796093022208;
parameter    ap_ST_fsm_state45 = 109'd17592186044416;
parameter    ap_ST_fsm_state46 = 109'd35184372088832;
parameter    ap_ST_fsm_state47 = 109'd70368744177664;
parameter    ap_ST_fsm_state48 = 109'd140737488355328;
parameter    ap_ST_fsm_state49 = 109'd281474976710656;
parameter    ap_ST_fsm_state50 = 109'd562949953421312;
parameter    ap_ST_fsm_state51 = 109'd1125899906842624;
parameter    ap_ST_fsm_state52 = 109'd2251799813685248;
parameter    ap_ST_fsm_state53 = 109'd4503599627370496;
parameter    ap_ST_fsm_state54 = 109'd9007199254740992;
parameter    ap_ST_fsm_state55 = 109'd18014398509481984;
parameter    ap_ST_fsm_state56 = 109'd36028797018963968;
parameter    ap_ST_fsm_state57 = 109'd72057594037927936;
parameter    ap_ST_fsm_state58 = 109'd144115188075855872;
parameter    ap_ST_fsm_state59 = 109'd288230376151711744;
parameter    ap_ST_fsm_state60 = 109'd576460752303423488;
parameter    ap_ST_fsm_state61 = 109'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 109'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 109'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 109'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 109'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 109'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 109'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 109'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 109'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 109'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 109'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 109'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 109'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 109'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 109'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 109'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 109'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 109'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 109'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 109'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 109'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 109'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 109'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 109'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 109'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 109'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 109'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 109'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 109'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 109'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 109'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 109'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 109'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 109'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 109'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 109'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 109'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 109'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 109'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 109'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 109'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 109'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 109'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 109'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 109'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 109'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 109'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 109'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 109'd324518553658426726783156020576256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] cin_0_address0;
output   cin_0_ce0;
input  [31:0] cin_0_q0;
output  [13:0] cin_1_address0;
output   cin_1_ce0;
input  [31:0] cin_1_q0;
output  [13:0] cin_2_address0;
output   cin_2_ce0;
input  [31:0] cin_2_q0;
output  [13:0] cin_3_address0;
output   cin_3_ce0;
input  [31:0] cin_3_q0;
output  [13:0] cin_4_address0;
output   cin_4_ce0;
input  [31:0] cin_4_q0;
output  [13:0] cin_5_address0;
output   cin_5_ce0;
input  [31:0] cin_5_q0;
output  [13:0] cin_6_address0;
output   cin_6_ce0;
input  [31:0] cin_6_q0;
output  [13:0] cin_7_address0;
output   cin_7_ce0;
input  [31:0] cin_7_q0;
output  [12:0] weight_0_address0;
output   weight_0_ce0;
input  [31:0] weight_0_q0;
output  [12:0] weight_1_address0;
output   weight_1_ce0;
input  [31:0] weight_1_q0;
output  [12:0] weight_2_address0;
output   weight_2_ce0;
input  [31:0] weight_2_q0;
output  [12:0] weight_3_address0;
output   weight_3_ce0;
input  [31:0] weight_3_q0;
output  [12:0] weight_4_address0;
output   weight_4_ce0;
input  [31:0] weight_4_q0;
output  [12:0] weight_5_address0;
output   weight_5_ce0;
input  [31:0] weight_5_q0;
output  [12:0] weight_6_address0;
output   weight_6_ce0;
input  [31:0] weight_6_q0;
output  [12:0] weight_7_address0;
output   weight_7_ce0;
input  [31:0] weight_7_q0;
output  [13:0] cout_kernel_0_address0;
output   cout_kernel_0_ce0;
output   cout_kernel_0_we0;
output  [31:0] cout_kernel_0_d0;
input  [31:0] cout_kernel_0_q0;
output  [13:0] cout_kernel_1_address0;
output   cout_kernel_1_ce0;
output   cout_kernel_1_we0;
output  [31:0] cout_kernel_1_d0;
input  [31:0] cout_kernel_1_q0;
output  [13:0] cout_kernel_2_address0;
output   cout_kernel_2_ce0;
output   cout_kernel_2_we0;
output  [31:0] cout_kernel_2_d0;
input  [31:0] cout_kernel_2_q0;
output  [13:0] cout_kernel_3_address0;
output   cout_kernel_3_ce0;
output   cout_kernel_3_we0;
output  [31:0] cout_kernel_3_d0;
input  [31:0] cout_kernel_3_q0;
output  [13:0] cout_kernel_4_address0;
output   cout_kernel_4_ce0;
output   cout_kernel_4_we0;
output  [31:0] cout_kernel_4_d0;
input  [31:0] cout_kernel_4_q0;
output  [13:0] cout_kernel_5_address0;
output   cout_kernel_5_ce0;
output   cout_kernel_5_we0;
output  [31:0] cout_kernel_5_d0;
input  [31:0] cout_kernel_5_q0;
output  [13:0] cout_kernel_6_address0;
output   cout_kernel_6_ce0;
output   cout_kernel_6_we0;
output  [31:0] cout_kernel_6_d0;
input  [31:0] cout_kernel_6_q0;
output  [13:0] cout_kernel_7_address0;
output   cout_kernel_7_ce0;
output   cout_kernel_7_we0;
output  [31:0] cout_kernel_7_d0;
input  [31:0] cout_kernel_7_q0;
input   init;
input  [15:0] LAYER_IN_NUM_T;
input  [15:0] LAYER_OUT_NUM_T;
input  [31:0] LAYER_IN_H_T;
input  [31:0] LAYER_IN_W_T;
input  [15:0] FILTER_S;
input  [31:0] STRIDE;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg cin_0_ce0;
reg cin_1_ce0;
reg cin_2_ce0;
reg cin_3_ce0;
reg cin_4_ce0;
reg cin_5_ce0;
reg cin_6_ce0;
reg cin_7_ce0;
reg weight_0_ce0;
reg weight_1_ce0;
reg weight_2_ce0;
reg weight_3_ce0;
reg weight_4_ce0;
reg weight_5_ce0;
reg weight_6_ce0;
reg weight_7_ce0;
reg[13:0] cout_kernel_0_address0;
reg cout_kernel_0_ce0;
reg cout_kernel_0_we0;
reg[31:0] cout_kernel_0_d0;
reg[13:0] cout_kernel_1_address0;
reg cout_kernel_1_ce0;
reg cout_kernel_1_we0;
reg[31:0] cout_kernel_1_d0;
reg[13:0] cout_kernel_2_address0;
reg cout_kernel_2_ce0;
reg cout_kernel_2_we0;
reg[31:0] cout_kernel_2_d0;
reg[13:0] cout_kernel_3_address0;
reg cout_kernel_3_ce0;
reg cout_kernel_3_we0;
reg[31:0] cout_kernel_3_d0;
reg[13:0] cout_kernel_4_address0;
reg cout_kernel_4_ce0;
reg cout_kernel_4_we0;
reg[31:0] cout_kernel_4_d0;
reg[13:0] cout_kernel_5_address0;
reg cout_kernel_5_ce0;
reg cout_kernel_5_we0;
reg[31:0] cout_kernel_5_d0;
reg[13:0] cout_kernel_6_address0;
reg cout_kernel_6_ce0;
reg cout_kernel_6_we0;
reg[31:0] cout_kernel_6_d0;
reg[13:0] cout_kernel_7_address0;
reg cout_kernel_7_ce0;
reg cout_kernel_7_we0;
reg[31:0] cout_kernel_7_d0;

(* fsm_encoding = "none" *) reg   [108:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state3;
wire   [0:0] init_read_read_fu_172_p2;
wire   [31:0] tmp_fu_666_p2;
reg   [31:0] tmp_reg_1169;
wire   [31:0] grp_fu_1115_p2;
reg   [31:0] bound_reg_1175;
wire   [15:0] o_10_fu_677_p2;
reg   [15:0] o_10_reg_1183;
wire    ap_CS_fsm_state4;
wire   [31:0] grp_fu_683_p2;
reg   [31:0] tmp_s_reg_1188;
wire    ap_CS_fsm_state39;
wire  signed [19:0] tmp_382_cast_fu_709_p1;
reg  signed [19:0] tmp_382_cast_reg_1193;
wire   [2:0] tmp_570_fu_713_p1;
reg   [2:0] tmp_570_reg_1198;
wire   [14:0] newIndex7_cast_fu_727_p1;
reg   [14:0] newIndex7_cast_reg_1202;
wire   [31:0] arrayNo1_fu_731_p1;
reg   [31:0] arrayNo1_reg_1208;
wire   [31:0] next_mul3_fu_735_p2;
reg   [31:0] next_mul3_reg_1213;
wire    ap_CS_fsm_state40;
wire   [31:0] h_9_fu_745_p2;
reg   [31:0] h_9_reg_1221;
wire   [31:0] grp_fu_751_p2;
reg   [31:0] tmp_359_reg_1226;
wire    ap_CS_fsm_state75;
wire   [39:0] tmp_385_fu_779_p2;
reg   [39:0] tmp_385_reg_1231;
wire   [31:0] next_mul_fu_785_p2;
reg   [31:0] next_mul_reg_1237;
wire    ap_CS_fsm_state76;
wire   [31:0] w_9_fu_795_p2;
reg   [31:0] w_9_reg_1245;
wire   [11:0] tmp_574_fu_808_p2;
reg   [11:0] tmp_574_reg_1250;
wire   [0:0] tmp_362_fu_790_p2;
reg   [13:0] cout_kernel_0_addr_reg_1255;
wire    ap_CS_fsm_state77;
reg   [13:0] cout_kernel_1_addr_reg_1260;
reg   [13:0] cout_kernel_2_addr_reg_1265;
reg   [13:0] cout_kernel_3_addr_reg_1270;
reg   [13:0] cout_kernel_4_addr_reg_1275;
reg   [13:0] cout_kernel_5_addr_reg_1280;
reg   [13:0] cout_kernel_6_addr_reg_1285;
reg   [13:0] cout_kernel_7_addr_reg_1290;
wire   [11:0] tmp_577_fu_845_p2;
reg   [11:0] tmp_577_reg_1295;
wire    ap_CS_fsm_state78;
reg   [13:0] cout_kernel_0_addr_1_reg_1300;
wire    ap_CS_fsm_state79;
reg   [13:0] cout_kernel_1_addr_1_reg_1305;
reg   [13:0] cout_kernel_2_addr_1_reg_1310;
reg   [13:0] cout_kernel_3_addr_1_reg_1315;
reg   [13:0] cout_kernel_4_addr_1_reg_1320;
reg   [13:0] cout_kernel_5_addr_1_reg_1325;
reg   [13:0] cout_kernel_6_addr_1_reg_1330;
reg   [13:0] cout_kernel_7_addr_1_reg_1335;
wire   [31:0] indvar_flatten_next_fu_880_p2;
reg   [31:0] indvar_flatten_next_reg_1343;
wire    ap_CS_fsm_state80;
wire   [15:0] p_mid2_fu_897_p3;
reg   [15:0] p_mid2_reg_1348;
wire   [0:0] exitcond_flatten_fu_875_p2;
wire   [15:0] arrayNo_mid2_v_v_fu_905_p3;
reg   [15:0] arrayNo_mid2_v_v_reg_1355;
wire   [2:0] tmp_578_fu_913_p1;
reg   [2:0] tmp_578_reg_1360;
reg   [12:0] tmp_579_reg_1365;
wire  signed [11:0] tmp_580_fu_941_p1;
reg  signed [11:0] tmp_580_reg_1371;
wire    ap_CS_fsm_state81;
wire   [10:0] tmp_581_fu_953_p1;
reg   [10:0] tmp_581_reg_1376;
wire   [8:0] tmp_582_fu_957_p1;
reg   [8:0] tmp_582_reg_1381;
wire   [10:0] tmp_397_fu_968_p2;
reg   [10:0] tmp_397_reg_1386;
wire    ap_CS_fsm_state82;
wire   [31:0] arrayNo_mid2_fu_973_p1;
reg   [31:0] arrayNo_mid2_reg_1391;
wire    ap_CS_fsm_state84;
wire   [13:0] newIndex1_mid2_cast1_fu_976_p1;
reg   [13:0] newIndex1_mid2_cast1_reg_1397;
wire   [14:0] newIndex1_mid2_cast_fu_979_p1;
reg   [14:0] newIndex1_mid2_cast_reg_1402;
wire  signed [11:0] grp_fu_1121_p2;
reg  signed [11:0] tmp_394_reg_1407;
wire   [15:0] q_2_fu_991_p2;
reg   [15:0] q_2_reg_1415;
wire    ap_CS_fsm_state85;
wire   [11:0] tmp_583_fu_1008_p1;
reg   [11:0] tmp_583_reg_1420;
wire   [0:0] exitcond_fu_986_p2;
wire   [10:0] tmp_402_fu_1016_p2;
reg   [10:0] tmp_402_reg_1425;
wire   [15:0] p_2_fu_1021_p2;
(* use_dsp48 = "no" *) wire   [11:0] tmp_398_fu_1026_p2;
reg   [11:0] tmp_398_reg_1435;
wire    ap_CS_fsm_state86;
wire   [13:0] tmp_405_fu_1037_p2;
reg   [13:0] tmp_405_reg_1440;
wire   [14:0] tmp_401_fu_1049_p2;
reg   [14:0] tmp_401_reg_1445;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state88;
reg   [31:0] cin_0_load_reg_1530;
wire    ap_CS_fsm_state89;
reg   [31:0] cin_1_load_reg_1535;
reg   [31:0] cin_2_load_reg_1540;
reg   [31:0] cin_3_load_reg_1545;
reg   [31:0] cin_4_load_reg_1550;
reg   [31:0] cin_5_load_reg_1555;
reg   [31:0] cin_6_load_reg_1560;
reg   [31:0] cin_7_load_reg_1565;
reg   [31:0] weight_0_load_reg_1570;
reg   [31:0] weight_1_load_reg_1575;
reg   [31:0] weight_2_load_reg_1580;
reg   [31:0] weight_3_load_reg_1585;
reg   [31:0] weight_4_load_reg_1590;
reg   [31:0] weight_5_load_reg_1595;
reg   [31:0] weight_6_load_reg_1600;
reg   [31:0] weight_7_load_reg_1605;
wire   [31:0] tmp_505_fu_1076_p10;
reg   [31:0] tmp_505_reg_1610;
wire    ap_CS_fsm_state90;
wire   [31:0] tmp_506_fu_1089_p10;
reg   [31:0] tmp_506_reg_1615;
reg   [31:0] cout_kernel_0_load_reg_1620;
wire    ap_CS_fsm_state96;
reg   [31:0] cout_kernel_1_load_reg_1625;
reg   [31:0] cout_kernel_2_load_reg_1630;
reg   [31:0] cout_kernel_3_load_reg_1635;
reg   [31:0] cout_kernel_4_load_reg_1640;
reg   [31:0] cout_kernel_5_load_reg_1645;
reg   [31:0] cout_kernel_6_load_reg_1650;
reg   [31:0] cout_kernel_7_load_reg_1655;
wire   [31:0] grp_fu_654_p2;
reg   [31:0] tmp_372_reg_1660;
wire    ap_CS_fsm_state97;
wire   [31:0] tmp_507_fu_1102_p10;
reg   [31:0] tmp_507_reg_1665;
wire   [31:0] grp_fu_650_p2;
reg   [31:0] tmp_373_reg_1670;
wire    ap_CS_fsm_state108;
reg   [15:0] o_reg_546;
wire   [0:0] tmp_358_fu_740_p2;
reg   [31:0] h_reg_558;
reg   [31:0] phi_mul3_reg_570;
reg   [31:0] w_reg_582;
reg   [31:0] phi_mul_reg_594;
reg   [31:0] indvar_flatten_reg_606;
reg   [15:0] i_reg_617;
reg   [15:0] p_reg_628;
reg   [15:0] q_reg_639;
wire    ap_CS_fsm_state109;
wire   [63:0] tmp_389_cast_fu_826_p1;
wire   [63:0] tmp_393_cast_fu_863_p1;
wire   [63:0] tmp_401_cast_fu_1054_p1;
wire   [63:0] tmp_405_cast_fu_1065_p1;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state91;
wire   [17:0] tmp_381_fu_691_p3;
wire   [18:0] p_shl_cast_fu_699_p1;
wire   [18:0] tmp_357_cast_fu_687_p1;
wire   [18:0] tmp_382_fu_703_p2;
wire   [12:0] tmp_571_fu_717_p4;
wire   [38:0] tmp_383_fu_755_p3;
wire   [36:0] tmp_384_fu_767_p3;
wire  signed [39:0] p_shl1_cast_fu_763_p1;
wire  signed [39:0] p_shl2_cast_fu_775_p1;
wire   [11:0] tmp_573_fu_805_p1;
wire   [11:0] tmp_572_fu_801_p1;
wire   [14:0] tmp_388_cast_fu_814_p3;
wire   [14:0] tmp_389_fu_821_p2;
wire   [11:0] tmp_576_fu_842_p1;
wire   [11:0] tmp_575_fu_838_p1;
wire   [14:0] tmp_392_cast_fu_851_p3;
wire   [14:0] tmp_393_fu_858_p2;
wire   [0:0] exitcond1_fu_892_p2;
wire   [15:0] i_2_fu_886_p2;
wire   [31:0] p_cast4_mid2_cast_fu_927_p1;
wire   [31:0] tmp1_fu_930_p2;
wire   [31:0] tmp_366_fu_935_p2;
wire   [19:0] tmp_368_cast_fu_945_p1;
wire   [19:0] tmp_395_fu_948_p2;
wire   [10:0] p_shl_fu_961_p3;
wire   [31:0] q_cast3_fu_982_p1;
wire   [31:0] tmp2_fu_997_p2;
wire   [31:0] tmp_369_fu_1003_p2;
wire   [10:0] tmp_584_fu_1012_p1;
wire   [13:0] tmp_404_cast_fu_1030_p3;
wire   [14:0] tmp_400_cast_fu_1042_p3;
wire   [15:0] grp_fu_1115_p0;
wire   [15:0] grp_fu_1115_p1;
wire   [7:0] grp_fu_1121_p1;
wire   [0:0] exitcond3_fu_672_p2;
reg    grp_fu_683_ap_start;
wire    grp_fu_683_ap_done;
reg    grp_fu_751_ap_start;
wire    grp_fu_751_ap_done;
reg   [108:0] ap_NS_fsm;
wire   [31:0] grp_fu_1115_p00;
wire   [31:0] grp_fu_1115_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 109'd1;
end

top_kernel_fadd_3rcU #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_fadd_3rcU_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_507_reg_1665),
    .din1(tmp_372_reg_1660),
    .ce(1'b1),
    .dout(grp_fu_650_p2)
);

top_kernel_fmul_3sc4 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_fmul_3sc4_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_505_reg_1610),
    .din1(tmp_506_reg_1615),
    .ce(1'b1),
    .dout(grp_fu_654_p2)
);

top_kernel_udiv_3kbM #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_udiv_3kbM_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_683_ap_start),
    .done(grp_fu_683_ap_done),
    .din0(LAYER_IN_H_T),
    .din1(STRIDE),
    .ce(1'b1),
    .dout(grp_fu_683_p2)
);

top_kernel_udiv_3kbM #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_udiv_3kbM_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_751_ap_start),
    .done(grp_fu_751_ap_done),
    .din0(LAYER_IN_W_T),
    .din1(STRIDE),
    .ce(1'b1),
    .dout(grp_fu_751_p2)
);

top_kernel_mux_83tde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mux_83tde_U99(
    .din0(cin_0_load_reg_1530),
    .din1(cin_1_load_reg_1535),
    .din2(cin_2_load_reg_1540),
    .din3(cin_3_load_reg_1545),
    .din4(cin_4_load_reg_1550),
    .din5(cin_5_load_reg_1555),
    .din6(cin_6_load_reg_1560),
    .din7(cin_7_load_reg_1565),
    .din8(arrayNo_mid2_reg_1391),
    .dout(tmp_505_fu_1076_p10)
);

top_kernel_mux_83tde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mux_83tde_U100(
    .din0(weight_0_load_reg_1570),
    .din1(weight_1_load_reg_1575),
    .din2(weight_2_load_reg_1580),
    .din3(weight_3_load_reg_1585),
    .din4(weight_4_load_reg_1590),
    .din5(weight_5_load_reg_1595),
    .din6(weight_6_load_reg_1600),
    .din7(weight_7_load_reg_1605),
    .din8(arrayNo_mid2_reg_1391),
    .dout(tmp_506_fu_1089_p10)
);

top_kernel_mux_83tde #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mux_83tde_U101(
    .din0(cout_kernel_0_load_reg_1620),
    .din1(cout_kernel_1_load_reg_1625),
    .din2(cout_kernel_2_load_reg_1630),
    .din3(cout_kernel_3_load_reg_1635),
    .din4(cout_kernel_4_load_reg_1640),
    .din5(cout_kernel_5_load_reg_1645),
    .din6(cout_kernel_6_load_reg_1650),
    .din7(cout_kernel_7_load_reg_1655),
    .din8(arrayNo1_reg_1208),
    .dout(tmp_507_fu_1102_p10)
);

top_kernel_mul_muocq #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_muocq_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1115_p0),
    .din1(grp_fu_1115_p1),
    .ce(1'b1),
    .dout(grp_fu_1115_p2)
);

top_kernel_mul_muudo #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 12 ))
top_kernel_mul_muudo_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_580_reg_1371),
    .din1(grp_fu_1121_p1),
    .ce(1'b1),
    .dout(grp_fu_1121_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_362_fu_790_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        h_reg_558 <= h_9_reg_1221;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        h_reg_558 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        i_reg_617 <= arrayNo_mid2_v_v_reg_1355;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        i_reg_617 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        indvar_flatten_reg_606 <= indvar_flatten_next_reg_1343;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        indvar_flatten_reg_606 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_358_fu_740_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
        o_reg_546 <= o_10_reg_1183;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        o_reg_546 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        p_reg_628 <= p_2_fu_1021_p2;
    end else if ((1'b1 == ap_CS_fsm_state79)) begin
        p_reg_628 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_362_fu_790_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
        phi_mul3_reg_570 <= next_mul3_reg_1213;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        phi_mul3_reg_570 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_875_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        phi_mul_reg_594 <= next_mul_reg_1237;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        phi_mul_reg_594 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        q_reg_639 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        q_reg_639 <= q_2_reg_1415;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_875_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
        w_reg_582 <= w_9_reg_1245;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        w_reg_582 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        arrayNo1_reg_1208[2 : 0] <= arrayNo1_fu_731_p1[2 : 0];
        newIndex7_cast_reg_1202[12 : 0] <= newIndex7_cast_fu_727_p1[12 : 0];
        tmp_382_cast_reg_1193 <= tmp_382_cast_fu_709_p1;
        tmp_570_reg_1198 <= tmp_570_fu_713_p1;
        tmp_s_reg_1188 <= grp_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        arrayNo_mid2_reg_1391[2 : 0] <= arrayNo_mid2_fu_973_p1[2 : 0];
        newIndex1_mid2_cast1_reg_1397[12 : 0] <= newIndex1_mid2_cast1_fu_976_p1[12 : 0];
        newIndex1_mid2_cast_reg_1402[12 : 0] <= newIndex1_mid2_cast_fu_979_p1[12 : 0];
        tmp_394_reg_1407 <= grp_fu_1121_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_875_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state80))) begin
        arrayNo_mid2_v_v_reg_1355 <= arrayNo_mid2_v_v_fu_905_p3;
        p_mid2_reg_1348 <= p_mid2_fu_897_p3;
        tmp_578_reg_1360 <= tmp_578_fu_913_p1;
        tmp_579_reg_1365 <= {{arrayNo_mid2_v_v_fu_905_p3[15:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound_reg_1175 <= grp_fu_1115_p2;
        tmp_reg_1169 <= tmp_fu_666_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        cin_0_load_reg_1530 <= cin_0_q0;
        cin_1_load_reg_1535 <= cin_1_q0;
        cin_2_load_reg_1540 <= cin_2_q0;
        cin_3_load_reg_1545 <= cin_3_q0;
        cin_4_load_reg_1550 <= cin_4_q0;
        cin_5_load_reg_1555 <= cin_5_q0;
        cin_6_load_reg_1560 <= cin_6_q0;
        cin_7_load_reg_1565 <= cin_7_q0;
        weight_0_load_reg_1570 <= weight_0_q0;
        weight_1_load_reg_1575 <= weight_1_q0;
        weight_2_load_reg_1580 <= weight_2_q0;
        weight_3_load_reg_1585 <= weight_3_q0;
        weight_4_load_reg_1590 <= weight_4_q0;
        weight_5_load_reg_1595 <= weight_5_q0;
        weight_6_load_reg_1600 <= weight_6_q0;
        weight_7_load_reg_1605 <= weight_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        cout_kernel_0_addr_1_reg_1300 <= tmp_393_cast_fu_863_p1;
        cout_kernel_1_addr_1_reg_1305 <= tmp_393_cast_fu_863_p1;
        cout_kernel_2_addr_1_reg_1310 <= tmp_393_cast_fu_863_p1;
        cout_kernel_3_addr_1_reg_1315 <= tmp_393_cast_fu_863_p1;
        cout_kernel_4_addr_1_reg_1320 <= tmp_393_cast_fu_863_p1;
        cout_kernel_5_addr_1_reg_1325 <= tmp_393_cast_fu_863_p1;
        cout_kernel_6_addr_1_reg_1330 <= tmp_393_cast_fu_863_p1;
        cout_kernel_7_addr_1_reg_1335 <= tmp_393_cast_fu_863_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        cout_kernel_0_addr_reg_1255 <= tmp_389_cast_fu_826_p1;
        cout_kernel_1_addr_reg_1260 <= tmp_389_cast_fu_826_p1;
        cout_kernel_2_addr_reg_1265 <= tmp_389_cast_fu_826_p1;
        cout_kernel_3_addr_reg_1270 <= tmp_389_cast_fu_826_p1;
        cout_kernel_4_addr_reg_1275 <= tmp_389_cast_fu_826_p1;
        cout_kernel_5_addr_reg_1280 <= tmp_389_cast_fu_826_p1;
        cout_kernel_6_addr_reg_1285 <= tmp_389_cast_fu_826_p1;
        cout_kernel_7_addr_reg_1290 <= tmp_389_cast_fu_826_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        cout_kernel_0_load_reg_1620 <= cout_kernel_0_q0;
        cout_kernel_1_load_reg_1625 <= cout_kernel_1_q0;
        cout_kernel_2_load_reg_1630 <= cout_kernel_2_q0;
        cout_kernel_3_load_reg_1635 <= cout_kernel_3_q0;
        cout_kernel_4_load_reg_1640 <= cout_kernel_4_q0;
        cout_kernel_5_load_reg_1645 <= cout_kernel_5_q0;
        cout_kernel_6_load_reg_1650 <= cout_kernel_6_q0;
        cout_kernel_7_load_reg_1655 <= cout_kernel_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        h_9_reg_1221 <= h_9_fu_745_p2;
        next_mul3_reg_1213 <= next_mul3_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        indvar_flatten_next_reg_1343 <= indvar_flatten_next_fu_880_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        next_mul_reg_1237 <= next_mul_fu_785_p2;
        w_9_reg_1245 <= w_9_fu_795_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        o_10_reg_1183 <= o_10_fu_677_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        q_2_reg_1415 <= q_2_fu_991_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        tmp_359_reg_1226 <= grp_fu_751_p2;
        tmp_385_reg_1231[39 : 5] <= tmp_385_fu_779_p2[39 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        tmp_372_reg_1660 <= grp_fu_654_p2;
        tmp_507_reg_1665 <= tmp_507_fu_1102_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        tmp_373_reg_1670 <= grp_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        tmp_397_reg_1386 <= tmp_397_fu_968_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        tmp_398_reg_1435 <= tmp_398_fu_1026_p2;
        tmp_405_reg_1440 <= tmp_405_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        tmp_401_reg_1445 <= tmp_401_fu_1049_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_986_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state85))) begin
        tmp_402_reg_1425 <= tmp_402_fu_1016_p2;
        tmp_583_reg_1420 <= tmp_583_fu_1008_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        tmp_505_reg_1610 <= tmp_505_fu_1076_p10;
        tmp_506_reg_1615 <= tmp_506_fu_1089_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_362_fu_790_p2 == 1'd1) & (init_read_read_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state76))) begin
        tmp_574_reg_1250 <= tmp_574_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        tmp_577_reg_1295 <= tmp_577_fu_845_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        tmp_580_reg_1371 <= tmp_580_fu_941_p1;
        tmp_581_reg_1376 <= tmp_581_fu_953_p1;
        tmp_582_reg_1381 <= tmp_582_fu_957_p1;
    end
end

always @ (*) begin
    if ((((exitcond3_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_0_ce0 = 1'b1;
    end else begin
        cin_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_1_ce0 = 1'b1;
    end else begin
        cin_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_2_ce0 = 1'b1;
    end else begin
        cin_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_3_ce0 = 1'b1;
    end else begin
        cin_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_4_ce0 = 1'b1;
    end else begin
        cin_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_5_ce0 = 1'b1;
    end else begin
        cin_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_6_ce0 = 1'b1;
    end else begin
        cin_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        cin_7_ce0 = 1'b1;
    end else begin
        cin_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_0_address0 = cout_kernel_0_addr_1_reg_1300;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_0_address0 = cout_kernel_0_addr_reg_1255;
    end else begin
        cout_kernel_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_0_ce0 = 1'b1;
    end else begin
        cout_kernel_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_0_d0 = tmp_373_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_0_d0 = 32'd0;
    end else begin
        cout_kernel_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_570_reg_1198 == 3'd0) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_570_reg_1198 == 3'd0) & (init_read_read_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_0_we0 = 1'b1;
    end else begin
        cout_kernel_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_1_address0 = cout_kernel_1_addr_1_reg_1305;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_1_address0 = cout_kernel_1_addr_reg_1260;
    end else begin
        cout_kernel_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_1_ce0 = 1'b1;
    end else begin
        cout_kernel_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_1_d0 = tmp_373_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_1_d0 = 32'd0;
    end else begin
        cout_kernel_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_570_reg_1198 == 3'd1) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_570_reg_1198 == 3'd1) & (init_read_read_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_1_we0 = 1'b1;
    end else begin
        cout_kernel_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_2_address0 = cout_kernel_2_addr_1_reg_1310;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_2_address0 = cout_kernel_2_addr_reg_1265;
    end else begin
        cout_kernel_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_2_ce0 = 1'b1;
    end else begin
        cout_kernel_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_2_d0 = tmp_373_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_2_d0 = 32'd0;
    end else begin
        cout_kernel_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_570_reg_1198 == 3'd2) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_570_reg_1198 == 3'd2) & (init_read_read_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_2_we0 = 1'b1;
    end else begin
        cout_kernel_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_3_address0 = cout_kernel_3_addr_1_reg_1315;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_3_address0 = cout_kernel_3_addr_reg_1270;
    end else begin
        cout_kernel_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_3_ce0 = 1'b1;
    end else begin
        cout_kernel_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_3_d0 = tmp_373_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_3_d0 = 32'd0;
    end else begin
        cout_kernel_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_570_reg_1198 == 3'd3) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_570_reg_1198 == 3'd3) & (init_read_read_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_3_we0 = 1'b1;
    end else begin
        cout_kernel_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_4_address0 = cout_kernel_4_addr_1_reg_1320;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_4_address0 = cout_kernel_4_addr_reg_1275;
    end else begin
        cout_kernel_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_4_ce0 = 1'b1;
    end else begin
        cout_kernel_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_4_d0 = tmp_373_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_4_d0 = 32'd0;
    end else begin
        cout_kernel_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_570_reg_1198 == 3'd4) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_570_reg_1198 == 3'd4) & (init_read_read_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_4_we0 = 1'b1;
    end else begin
        cout_kernel_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_5_address0 = cout_kernel_5_addr_1_reg_1325;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_5_address0 = cout_kernel_5_addr_reg_1280;
    end else begin
        cout_kernel_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_5_ce0 = 1'b1;
    end else begin
        cout_kernel_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_5_d0 = tmp_373_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_5_d0 = 32'd0;
    end else begin
        cout_kernel_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_570_reg_1198 == 3'd5) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_570_reg_1198 == 3'd5) & (init_read_read_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_5_we0 = 1'b1;
    end else begin
        cout_kernel_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_6_address0 = cout_kernel_6_addr_1_reg_1330;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_6_address0 = cout_kernel_6_addr_reg_1285;
    end else begin
        cout_kernel_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_6_ce0 = 1'b1;
    end else begin
        cout_kernel_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_6_d0 = tmp_373_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_6_d0 = 32'd0;
    end else begin
        cout_kernel_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_570_reg_1198 == 3'd6) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_570_reg_1198 == 3'd6) & (init_read_read_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_6_we0 = 1'b1;
    end else begin
        cout_kernel_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109))) begin
        cout_kernel_7_address0 = cout_kernel_7_addr_1_reg_1335;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_7_address0 = cout_kernel_7_addr_reg_1290;
    end else begin
        cout_kernel_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state78))) begin
        cout_kernel_7_ce0 = 1'b1;
    end else begin
        cout_kernel_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        cout_kernel_7_d0 = tmp_373_reg_1670;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        cout_kernel_7_d0 = 32'd0;
    end else begin
        cout_kernel_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_570_reg_1198 == 3'd7) & (1'b1 == ap_CS_fsm_state109)) | ((tmp_570_reg_1198 == 3'd7) & (init_read_read_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state78)))) begin
        cout_kernel_7_we0 = 1'b1;
    end else begin
        cout_kernel_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond3_fu_672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        grp_fu_683_ap_start = 1'b1;
    end else begin
        grp_fu_683_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_358_fu_740_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state40))) begin
        grp_fu_751_ap_start = 1'b1;
    end else begin
        grp_fu_751_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_0_ce0 = 1'b1;
    end else begin
        weight_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_1_ce0 = 1'b1;
    end else begin
        weight_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_2_ce0 = 1'b1;
    end else begin
        weight_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_3_ce0 = 1'b1;
    end else begin
        weight_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_4_ce0 = 1'b1;
    end else begin
        weight_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_5_ce0 = 1'b1;
    end else begin
        weight_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_6_ce0 = 1'b1;
    end else begin
        weight_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        weight_7_ce0 = 1'b1;
    end else begin
        weight_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond3_fu_672_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((tmp_358_fu_740_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((tmp_362_fu_790_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else if (((tmp_362_fu_790_p2 == 1'd1) & (init_read_read_fu_172_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((exitcond_flatten_fu_875_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            if (((exitcond_fu_986_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign arrayNo1_fu_731_p1 = tmp_570_fu_713_p1;

assign arrayNo_mid2_fu_973_p1 = tmp_578_reg_1360;

assign arrayNo_mid2_v_v_fu_905_p3 = ((exitcond1_fu_892_p2[0:0] === 1'b1) ? i_2_fu_886_p2 : i_reg_617);

assign cin_0_address0 = tmp_401_cast_fu_1054_p1;

assign cin_1_address0 = tmp_401_cast_fu_1054_p1;

assign cin_2_address0 = tmp_401_cast_fu_1054_p1;

assign cin_3_address0 = tmp_401_cast_fu_1054_p1;

assign cin_4_address0 = tmp_401_cast_fu_1054_p1;

assign cin_5_address0 = tmp_401_cast_fu_1054_p1;

assign cin_6_address0 = tmp_401_cast_fu_1054_p1;

assign cin_7_address0 = tmp_401_cast_fu_1054_p1;

assign exitcond1_fu_892_p2 = ((p_reg_628 == FILTER_S) ? 1'b1 : 1'b0);

assign exitcond3_fu_672_p2 = ((o_reg_546 == LAYER_OUT_NUM_T) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_875_p2 = ((indvar_flatten_reg_606 == bound_reg_1175) ? 1'b1 : 1'b0);

assign exitcond_fu_986_p2 = ((q_reg_639 == FILTER_S) ? 1'b1 : 1'b0);

assign grp_fu_1115_p0 = grp_fu_1115_p00;

assign grp_fu_1115_p00 = FILTER_S;

assign grp_fu_1115_p1 = grp_fu_1115_p10;

assign grp_fu_1115_p10 = LAYER_IN_NUM_T;

assign grp_fu_1121_p1 = 12'd98;

assign h_9_fu_745_p2 = (h_reg_558 + 32'd1);

assign i_2_fu_886_p2 = (i_reg_617 + 16'd1);

assign indvar_flatten_next_fu_880_p2 = (indvar_flatten_reg_606 + 32'd1);

assign init_read_read_fu_172_p2 = init;

assign newIndex1_mid2_cast1_fu_976_p1 = tmp_579_reg_1365;

assign newIndex1_mid2_cast_fu_979_p1 = tmp_579_reg_1365;

assign newIndex7_cast_fu_727_p1 = tmp_571_fu_717_p4;

assign next_mul3_fu_735_p2 = (phi_mul3_reg_570 + STRIDE);

assign next_mul_fu_785_p2 = (phi_mul_reg_594 + STRIDE);

assign o_10_fu_677_p2 = (o_reg_546 + 16'd1);

assign p_2_fu_1021_p2 = (p_mid2_reg_1348 + 16'd1);

assign p_cast4_mid2_cast_fu_927_p1 = p_mid2_reg_1348;

assign p_mid2_fu_897_p3 = ((exitcond1_fu_892_p2[0:0] === 1'b1) ? 16'd0 : p_reg_628);

assign p_shl1_cast_fu_763_p1 = $signed(tmp_383_fu_755_p3);

assign p_shl2_cast_fu_775_p1 = $signed(tmp_384_fu_767_p3);

assign p_shl_cast_fu_699_p1 = tmp_381_fu_691_p3;

assign p_shl_fu_961_p3 = {{tmp_582_reg_1381}, {2'd0}};

assign q_2_fu_991_p2 = (q_reg_639 + 16'd1);

assign q_cast3_fu_982_p1 = q_reg_639;

assign tmp1_fu_930_p2 = (tmp_reg_1169 + p_cast4_mid2_cast_fu_927_p1);

assign tmp2_fu_997_p2 = (q_cast3_fu_982_p1 + phi_mul_reg_594);

assign tmp_357_cast_fu_687_p1 = o_reg_546;

assign tmp_358_fu_740_p2 = ((h_reg_558 < tmp_s_reg_1188) ? 1'b1 : 1'b0);

assign tmp_362_fu_790_p2 = ((w_reg_582 < tmp_359_reg_1226) ? 1'b1 : 1'b0);

assign tmp_366_fu_935_p2 = (tmp1_fu_930_p2 + phi_mul3_reg_570);

assign tmp_368_cast_fu_945_p1 = p_mid2_reg_1348;

assign tmp_369_fu_1003_p2 = (tmp_reg_1169 + tmp2_fu_997_p2);

assign tmp_381_fu_691_p3 = {{o_reg_546}, {2'd0}};

assign tmp_382_cast_fu_709_p1 = $signed(tmp_382_fu_703_p2);

assign tmp_382_fu_703_p2 = (p_shl_cast_fu_699_p1 - tmp_357_cast_fu_687_p1);

assign tmp_383_fu_755_p3 = {{h_reg_558}, {7'd0}};

assign tmp_384_fu_767_p3 = {{h_reg_558}, {5'd0}};

assign tmp_385_fu_779_p2 = ($signed(p_shl1_cast_fu_763_p1) - $signed(p_shl2_cast_fu_775_p1));

assign tmp_388_cast_fu_814_p3 = {{tmp_574_reg_1250}, {3'd0}};

assign tmp_389_cast_fu_826_p1 = tmp_389_fu_821_p2;

assign tmp_389_fu_821_p2 = (tmp_388_cast_fu_814_p3 + newIndex7_cast_reg_1202);

assign tmp_392_cast_fu_851_p3 = {{tmp_577_reg_1295}, {3'd0}};

assign tmp_393_cast_fu_863_p1 = tmp_393_fu_858_p2;

assign tmp_393_fu_858_p2 = (tmp_392_cast_fu_851_p3 + newIndex7_cast_reg_1202);

assign tmp_395_fu_948_p2 = ($signed(tmp_368_cast_fu_945_p1) + $signed(tmp_382_cast_reg_1193));

assign tmp_397_fu_968_p2 = (p_shl_fu_961_p3 - tmp_581_reg_1376);

assign tmp_398_fu_1026_p2 = ($signed(tmp_394_reg_1407) + $signed(tmp_583_reg_1420));

assign tmp_400_cast_fu_1042_p3 = {{tmp_398_reg_1435}, {3'd0}};

assign tmp_401_cast_fu_1054_p1 = tmp_401_reg_1445;

assign tmp_401_fu_1049_p2 = (tmp_400_cast_fu_1042_p3 + newIndex1_mid2_cast_reg_1402);

assign tmp_402_fu_1016_p2 = (tmp_397_reg_1386 + tmp_584_fu_1012_p1);

assign tmp_404_cast_fu_1030_p3 = {{tmp_402_reg_1425}, {3'd0}};

assign tmp_405_cast_fu_1065_p1 = tmp_405_reg_1440;

assign tmp_405_fu_1037_p2 = (tmp_404_cast_fu_1030_p3 + newIndex1_mid2_cast1_reg_1397);

assign tmp_570_fu_713_p1 = o_reg_546[2:0];

assign tmp_571_fu_717_p4 = {{o_reg_546[15:3]}};

assign tmp_572_fu_801_p1 = w_reg_582[11:0];

assign tmp_573_fu_805_p1 = tmp_385_reg_1231[11:0];

assign tmp_574_fu_808_p2 = (tmp_573_fu_805_p1 + tmp_572_fu_801_p1);

assign tmp_575_fu_838_p1 = w_reg_582[11:0];

assign tmp_576_fu_842_p1 = tmp_385_reg_1231[11:0];

assign tmp_577_fu_845_p2 = (tmp_576_fu_842_p1 + tmp_575_fu_838_p1);

assign tmp_578_fu_913_p1 = arrayNo_mid2_v_v_fu_905_p3[2:0];

assign tmp_580_fu_941_p1 = tmp_366_fu_935_p2[11:0];

assign tmp_581_fu_953_p1 = tmp_395_fu_948_p2[10:0];

assign tmp_582_fu_957_p1 = tmp_395_fu_948_p2[8:0];

assign tmp_583_fu_1008_p1 = tmp_369_fu_1003_p2[11:0];

assign tmp_584_fu_1012_p1 = q_reg_639[10:0];

assign tmp_fu_666_p2 = ($signed(STRIDE) + $signed(32'd4294967295));

assign w_9_fu_795_p2 = (w_reg_582 + 32'd1);

assign weight_0_address0 = tmp_405_cast_fu_1065_p1;

assign weight_1_address0 = tmp_405_cast_fu_1065_p1;

assign weight_2_address0 = tmp_405_cast_fu_1065_p1;

assign weight_3_address0 = tmp_405_cast_fu_1065_p1;

assign weight_4_address0 = tmp_405_cast_fu_1065_p1;

assign weight_5_address0 = tmp_405_cast_fu_1065_p1;

assign weight_6_address0 = tmp_405_cast_fu_1065_p1;

assign weight_7_address0 = tmp_405_cast_fu_1065_p1;

always @ (posedge ap_clk) begin
    newIndex7_cast_reg_1202[14:13] <= 2'b00;
    arrayNo1_reg_1208[31:3] <= 29'b00000000000000000000000000000;
    tmp_385_reg_1231[4:0] <= 5'b00000;
    arrayNo_mid2_reg_1391[31:3] <= 29'b00000000000000000000000000000;
    newIndex1_mid2_cast1_reg_1397[13] <= 1'b0;
    newIndex1_mid2_cast_reg_1402[14:13] <= 2'b00;
end

endmodule //conv_core
