// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module weight_load (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        m_axi_global_weight_V_AWVALID,
        m_axi_global_weight_V_AWREADY,
        m_axi_global_weight_V_AWADDR,
        m_axi_global_weight_V_AWID,
        m_axi_global_weight_V_AWLEN,
        m_axi_global_weight_V_AWSIZE,
        m_axi_global_weight_V_AWBURST,
        m_axi_global_weight_V_AWLOCK,
        m_axi_global_weight_V_AWCACHE,
        m_axi_global_weight_V_AWPROT,
        m_axi_global_weight_V_AWQOS,
        m_axi_global_weight_V_AWREGION,
        m_axi_global_weight_V_AWUSER,
        m_axi_global_weight_V_WVALID,
        m_axi_global_weight_V_WREADY,
        m_axi_global_weight_V_WDATA,
        m_axi_global_weight_V_WSTRB,
        m_axi_global_weight_V_WLAST,
        m_axi_global_weight_V_WID,
        m_axi_global_weight_V_WUSER,
        m_axi_global_weight_V_ARVALID,
        m_axi_global_weight_V_ARREADY,
        m_axi_global_weight_V_ARADDR,
        m_axi_global_weight_V_ARID,
        m_axi_global_weight_V_ARLEN,
        m_axi_global_weight_V_ARSIZE,
        m_axi_global_weight_V_ARBURST,
        m_axi_global_weight_V_ARLOCK,
        m_axi_global_weight_V_ARCACHE,
        m_axi_global_weight_V_ARPROT,
        m_axi_global_weight_V_ARQOS,
        m_axi_global_weight_V_ARREGION,
        m_axi_global_weight_V_ARUSER,
        m_axi_global_weight_V_RVALID,
        m_axi_global_weight_V_RREADY,
        m_axi_global_weight_V_RDATA,
        m_axi_global_weight_V_RLAST,
        m_axi_global_weight_V_RID,
        m_axi_global_weight_V_RUSER,
        m_axi_global_weight_V_RRESP,
        m_axi_global_weight_V_BVALID,
        m_axi_global_weight_V_BREADY,
        m_axi_global_weight_V_BRESP,
        m_axi_global_weight_V_BID,
        m_axi_global_weight_V_BUSER,
        global_weight_V_offset_dout,
        global_weight_V_offset_empty_n,
        global_weight_V_offset_read,
        global_bias_V_offset_dout,
        global_bias_V_offset_empty_n,
        global_bias_V_offset_read,
        fifo_config_in_V_V_dout,
        fifo_config_in_V_V_empty_n,
        fifo_config_in_V_V_read,
        fifo_conv_weight_V_V_din,
        fifo_conv_weight_V_V_full_n,
        fifo_conv_weight_V_V_write,
        fifo_gamma_conv_V_V_din,
        fifo_gamma_conv_V_V_full_n,
        fifo_gamma_conv_V_V_write,
        fifo_beta_conv_V_V_din,
        fifo_beta_conv_V_V_full_n,
        fifo_beta_conv_V_V_write,
        fifo_config_out_V_V_din,
        fifo_config_out_V_V_full_n,
        fifo_config_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 101'd1;
parameter    ap_ST_fsm_state2 = 101'd2;
parameter    ap_ST_fsm_state3 = 101'd4;
parameter    ap_ST_fsm_state4 = 101'd8;
parameter    ap_ST_fsm_state5 = 101'd16;
parameter    ap_ST_fsm_state6 = 101'd32;
parameter    ap_ST_fsm_state7 = 101'd64;
parameter    ap_ST_fsm_state8 = 101'd128;
parameter    ap_ST_fsm_state9 = 101'd256;
parameter    ap_ST_fsm_state10 = 101'd512;
parameter    ap_ST_fsm_state11 = 101'd1024;
parameter    ap_ST_fsm_state12 = 101'd2048;
parameter    ap_ST_fsm_state13 = 101'd4096;
parameter    ap_ST_fsm_state14 = 101'd8192;
parameter    ap_ST_fsm_state15 = 101'd16384;
parameter    ap_ST_fsm_state16 = 101'd32768;
parameter    ap_ST_fsm_state17 = 101'd65536;
parameter    ap_ST_fsm_state18 = 101'd131072;
parameter    ap_ST_fsm_state19 = 101'd262144;
parameter    ap_ST_fsm_state20 = 101'd524288;
parameter    ap_ST_fsm_state21 = 101'd1048576;
parameter    ap_ST_fsm_state22 = 101'd2097152;
parameter    ap_ST_fsm_state23 = 101'd4194304;
parameter    ap_ST_fsm_state24 = 101'd8388608;
parameter    ap_ST_fsm_state25 = 101'd16777216;
parameter    ap_ST_fsm_state26 = 101'd33554432;
parameter    ap_ST_fsm_state27 = 101'd67108864;
parameter    ap_ST_fsm_state28 = 101'd134217728;
parameter    ap_ST_fsm_state29 = 101'd268435456;
parameter    ap_ST_fsm_state30 = 101'd536870912;
parameter    ap_ST_fsm_state31 = 101'd1073741824;
parameter    ap_ST_fsm_state32 = 101'd2147483648;
parameter    ap_ST_fsm_state33 = 101'd4294967296;
parameter    ap_ST_fsm_state34 = 101'd8589934592;
parameter    ap_ST_fsm_state35 = 101'd17179869184;
parameter    ap_ST_fsm_pp0_stage0 = 101'd34359738368;
parameter    ap_ST_fsm_state39 = 101'd68719476736;
parameter    ap_ST_fsm_state40 = 101'd137438953472;
parameter    ap_ST_fsm_state41 = 101'd274877906944;
parameter    ap_ST_fsm_state42 = 101'd549755813888;
parameter    ap_ST_fsm_state43 = 101'd1099511627776;
parameter    ap_ST_fsm_state44 = 101'd2199023255552;
parameter    ap_ST_fsm_state45 = 101'd4398046511104;
parameter    ap_ST_fsm_state46 = 101'd8796093022208;
parameter    ap_ST_fsm_state47 = 101'd17592186044416;
parameter    ap_ST_fsm_pp1_stage0 = 101'd35184372088832;
parameter    ap_ST_fsm_state51 = 101'd70368744177664;
parameter    ap_ST_fsm_state52 = 101'd140737488355328;
parameter    ap_ST_fsm_state53 = 101'd281474976710656;
parameter    ap_ST_fsm_state54 = 101'd562949953421312;
parameter    ap_ST_fsm_state55 = 101'd1125899906842624;
parameter    ap_ST_fsm_state56 = 101'd2251799813685248;
parameter    ap_ST_fsm_state57 = 101'd4503599627370496;
parameter    ap_ST_fsm_state58 = 101'd9007199254740992;
parameter    ap_ST_fsm_state59 = 101'd18014398509481984;
parameter    ap_ST_fsm_state60 = 101'd36028797018963968;
parameter    ap_ST_fsm_state61 = 101'd72057594037927936;
parameter    ap_ST_fsm_pp3_stage0 = 101'd144115188075855872;
parameter    ap_ST_fsm_state65 = 101'd288230376151711744;
parameter    ap_ST_fsm_state66 = 101'd576460752303423488;
parameter    ap_ST_fsm_state67 = 101'd1152921504606846976;
parameter    ap_ST_fsm_state68 = 101'd2305843009213693952;
parameter    ap_ST_fsm_state69 = 101'd4611686018427387904;
parameter    ap_ST_fsm_state70 = 101'd9223372036854775808;
parameter    ap_ST_fsm_state71 = 101'd18446744073709551616;
parameter    ap_ST_fsm_state72 = 101'd36893488147419103232;
parameter    ap_ST_fsm_state73 = 101'd73786976294838206464;
parameter    ap_ST_fsm_state74 = 101'd147573952589676412928;
parameter    ap_ST_fsm_state75 = 101'd295147905179352825856;
parameter    ap_ST_fsm_state76 = 101'd590295810358705651712;
parameter    ap_ST_fsm_state77 = 101'd1180591620717411303424;
parameter    ap_ST_fsm_state78 = 101'd2361183241434822606848;
parameter    ap_ST_fsm_state79 = 101'd4722366482869645213696;
parameter    ap_ST_fsm_state80 = 101'd9444732965739290427392;
parameter    ap_ST_fsm_state81 = 101'd18889465931478580854784;
parameter    ap_ST_fsm_state82 = 101'd37778931862957161709568;
parameter    ap_ST_fsm_state83 = 101'd75557863725914323419136;
parameter    ap_ST_fsm_state84 = 101'd151115727451828646838272;
parameter    ap_ST_fsm_state85 = 101'd302231454903657293676544;
parameter    ap_ST_fsm_state86 = 101'd604462909807314587353088;
parameter    ap_ST_fsm_state87 = 101'd1208925819614629174706176;
parameter    ap_ST_fsm_state88 = 101'd2417851639229258349412352;
parameter    ap_ST_fsm_state89 = 101'd4835703278458516698824704;
parameter    ap_ST_fsm_pp4_stage0 = 101'd9671406556917033397649408;
parameter    ap_ST_fsm_state93 = 101'd19342813113834066795298816;
parameter    ap_ST_fsm_state94 = 101'd38685626227668133590597632;
parameter    ap_ST_fsm_state95 = 101'd77371252455336267181195264;
parameter    ap_ST_fsm_state96 = 101'd154742504910672534362390528;
parameter    ap_ST_fsm_state97 = 101'd309485009821345068724781056;
parameter    ap_ST_fsm_state98 = 101'd618970019642690137449562112;
parameter    ap_ST_fsm_state99 = 101'd1237940039285380274899124224;
parameter    ap_ST_fsm_state100 = 101'd2475880078570760549798248448;
parameter    ap_ST_fsm_state101 = 101'd4951760157141521099596496896;
parameter    ap_ST_fsm_state102 = 101'd9903520314283042199192993792;
parameter    ap_ST_fsm_state103 = 101'd19807040628566084398385987584;
parameter    ap_ST_fsm_pp5_stage0 = 101'd39614081257132168796771975168;
parameter    ap_ST_fsm_state107 = 101'd79228162514264337593543950336;
parameter    ap_ST_fsm_state108 = 101'd158456325028528675187087900672;
parameter    ap_ST_fsm_state109 = 101'd316912650057057350374175801344;
parameter    ap_ST_fsm_state110 = 101'd633825300114114700748351602688;
parameter    ap_ST_fsm_state111 = 101'd1267650600228229401496703205376;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output   m_axi_global_weight_V_AWVALID;
input   m_axi_global_weight_V_AWREADY;
output  [63:0] m_axi_global_weight_V_AWADDR;
output  [0:0] m_axi_global_weight_V_AWID;
output  [31:0] m_axi_global_weight_V_AWLEN;
output  [2:0] m_axi_global_weight_V_AWSIZE;
output  [1:0] m_axi_global_weight_V_AWBURST;
output  [1:0] m_axi_global_weight_V_AWLOCK;
output  [3:0] m_axi_global_weight_V_AWCACHE;
output  [2:0] m_axi_global_weight_V_AWPROT;
output  [3:0] m_axi_global_weight_V_AWQOS;
output  [3:0] m_axi_global_weight_V_AWREGION;
output  [0:0] m_axi_global_weight_V_AWUSER;
output   m_axi_global_weight_V_WVALID;
input   m_axi_global_weight_V_WREADY;
output  [511:0] m_axi_global_weight_V_WDATA;
output  [63:0] m_axi_global_weight_V_WSTRB;
output   m_axi_global_weight_V_WLAST;
output  [0:0] m_axi_global_weight_V_WID;
output  [0:0] m_axi_global_weight_V_WUSER;
output   m_axi_global_weight_V_ARVALID;
input   m_axi_global_weight_V_ARREADY;
output  [63:0] m_axi_global_weight_V_ARADDR;
output  [0:0] m_axi_global_weight_V_ARID;
output  [31:0] m_axi_global_weight_V_ARLEN;
output  [2:0] m_axi_global_weight_V_ARSIZE;
output  [1:0] m_axi_global_weight_V_ARBURST;
output  [1:0] m_axi_global_weight_V_ARLOCK;
output  [3:0] m_axi_global_weight_V_ARCACHE;
output  [2:0] m_axi_global_weight_V_ARPROT;
output  [3:0] m_axi_global_weight_V_ARQOS;
output  [3:0] m_axi_global_weight_V_ARREGION;
output  [0:0] m_axi_global_weight_V_ARUSER;
input   m_axi_global_weight_V_RVALID;
output   m_axi_global_weight_V_RREADY;
input  [511:0] m_axi_global_weight_V_RDATA;
input   m_axi_global_weight_V_RLAST;
input  [0:0] m_axi_global_weight_V_RID;
input  [0:0] m_axi_global_weight_V_RUSER;
input  [1:0] m_axi_global_weight_V_RRESP;
input   m_axi_global_weight_V_BVALID;
output   m_axi_global_weight_V_BREADY;
input  [1:0] m_axi_global_weight_V_BRESP;
input  [0:0] m_axi_global_weight_V_BID;
input  [0:0] m_axi_global_weight_V_BUSER;
input  [57:0] global_weight_V_offset_dout;
input   global_weight_V_offset_empty_n;
output   global_weight_V_offset_read;
input  [57:0] global_bias_V_offset_dout;
input   global_bias_V_offset_empty_n;
output   global_bias_V_offset_read;
input  [191:0] fifo_config_in_V_V_dout;
input   fifo_config_in_V_V_empty_n;
output   fifo_config_in_V_V_read;
output  [255:0] fifo_conv_weight_V_V_din;
input   fifo_conv_weight_V_V_full_n;
output   fifo_conv_weight_V_V_write;
output  [255:0] fifo_gamma_conv_V_V_din;
input   fifo_gamma_conv_V_V_full_n;
output   fifo_gamma_conv_V_V_write;
output  [255:0] fifo_beta_conv_V_V_din;
input   fifo_beta_conv_V_V_full_n;
output   fifo_beta_conv_V_V_write;
output  [191:0] fifo_config_out_V_V_din;
input   fifo_config_out_V_V_full_n;
output   fifo_config_out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg m_axi_global_weight_V_ARVALID;
reg[63:0] m_axi_global_weight_V_ARADDR;
reg[31:0] m_axi_global_weight_V_ARLEN;
reg m_axi_global_weight_V_RREADY;
reg global_weight_V_offset_read;
reg global_bias_V_offset_read;
reg fifo_config_in_V_V_read;
reg fifo_conv_weight_V_V_write;
reg fifo_gamma_conv_V_V_write;
reg fifo_beta_conv_V_V_write;
reg[191:0] fifo_config_out_V_V_din;
reg fifo_config_out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [100:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    global_weight_V_blk_n_AR;
wire    ap_CS_fsm_state55;
reg    global_weight_V_blk_n_R;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond2_i_i_reg_2018;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond1_i_i_reg_1929;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond3_i_i_reg_1959;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] exitcond4_i_i_reg_2153;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] exitcond5_i_i_reg_2112;
reg    global_weight_V_offset_blk_n;
reg    global_bias_V_offset_blk_n;
reg    fifo_config_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state11;
wire   [0:0] ap_phi_mux_done_i_i_phi_fu_431_p4;
wire   [0:0] ap_phi_mux_layer_start_i_i_phi_fu_419_p4;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg   [0:0] layer_start_i_i_reg_415;
reg    fifo_config_out_V_V_blk_n;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg   [12:0] indvar1_i_i_reg_451;
reg   [12:0] indvar1_i_i_reg_451_pp0_iter1_reg;
wire    ap_block_state36_pp0_stage0_iter0;
reg    ap_block_state37_pp0_stage0_iter1;
wire    ap_block_state38_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [12:0] indvar4_i_i_reg_463;
reg   [12:0] indvar4_i_i_reg_463_pp1_iter1_reg;
wire    ap_block_state48_pp1_stage0_iter0;
reg    ap_block_state49_pp1_stage0_iter1;
wire    ap_block_state50_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [12:0] indvar_i_i_reg_486;
reg   [12:0] indvar_i_i_reg_486_pp3_iter1_reg;
wire    ap_block_state62_pp3_stage0_iter0;
reg    ap_block_state63_pp3_stage0_iter1;
wire    ap_block_state64_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
reg   [25:0] indvar8_i_i_reg_498;
reg   [25:0] indvar8_i_i_reg_498_pp4_iter1_reg;
wire    ap_block_state90_pp4_stage0_iter0;
reg    ap_block_state91_pp4_stage0_iter1;
wire    ap_block_state92_pp4_stage0_iter2;
reg    ap_block_pp4_stage0_11001;
reg   [25:0] indvar6_i_i_reg_510;
reg   [25:0] indvar6_i_i_reg_510_pp5_iter1_reg;
wire    ap_block_state104_pp5_stage0_iter0;
reg    ap_block_state105_pp5_stage0_iter1;
wire    ap_block_state106_pp5_stage0_iter2;
reg    ap_block_pp5_stage0_11001;
reg   [57:0] global_weight_V_offs_reg_1660;
reg    ap_block_state1;
reg   [57:0] global_bias_V_offset_1_reg_1666;
reg   [191:0] tmp_V_4_reg_1672;
reg   [191:0] tmp_V_5_reg_1677;
reg    ap_block_state2;
reg   [191:0] tmp_V_6_reg_1682;
reg    ap_block_state3;
reg   [191:0] tmp_V_9_reg_1687;
reg    ap_block_state4;
reg   [31:0] LAYER_BATCH_V_reg_1692;
reg   [191:0] tmp_V_8_reg_1697;
reg    ap_block_state5;
reg   [191:0] p_Val2_3_reg_1702;
reg    ap_block_state15;
reg   [15:0] LAYER_IN_NUM_T_V_reg_1709;
reg   [15:0] LAYER_OUT_NUM_T_V_reg_1719;
reg   [31:0] LAYER_IN_H_T_V_reg_1728;
reg   [31:0] LAYER_IN_W_T_V_reg_1733;
reg   [0:0] tmp_reg_1738;
reg   [0:0] tmp_17_reg_1744;
reg   [0:0] tmp_18_reg_1749;
reg   [0:0] tmp_19_reg_1755;
reg   [0:0] tmp_20_reg_1760;
reg   [191:0] p_Val2_2_reg_1765;
wire    ap_CS_fsm_state16;
reg   [31:0] weight_offset2_2_reg_1770;
reg   [31:0] beta_depth_offset_reg_1776;
reg   [15:0] FILTER_S2_V_reg_1784;
wire   [31:0] tmp_21_i_i_fu_718_p1;
wire  signed [31:0] grp_fu_1609_p2;
reg  signed [31:0] tmp3_i_i_reg_1797;
wire    ap_CS_fsm_state18;
wire  signed [31:0] LAYER_IN_NUM_HW_V_fu_725_p1;
reg  signed [31:0] LAYER_IN_NUM_HW_V_reg_1802;
wire    ap_CS_fsm_state19;
reg   [31:0] LAYER_OUT_NUM_HW_V_reg_1808;
wire   [30:0] tmp_21_fu_739_p1;
reg   [30:0] tmp_21_reg_1814;
wire   [31:0] beta_conv_offset_fu_755_p2;
reg   [31:0] beta_conv_offset_reg_1819;
wire    ap_CS_fsm_state25;
wire   [31:0] grp_fu_743_p2;
reg   [31:0] p_1_i_i_reg_1825;
reg   [191:0] p_Val2_1_reg_1830;
wire    ap_CS_fsm_state26;
wire   [31:0] LAYER_IN_NUM_V_fu_763_p1;
reg   [31:0] LAYER_IN_NUM_V_reg_1836;
reg   [31:0] LAYER_OUT_NUM_V_reg_1843;
reg   [31:0] LAYER_IN_H_V_reg_1848;
reg   [31:0] LAYER_IN_W_V_reg_1853;
wire   [0:0] bias_en_fu_797_p2;
reg   [0:0] bias_en_reg_1858;
wire   [0:0] norm_conv_en_fu_805_p2;
reg   [0:0] norm_conv_en_reg_1862;
wire   [31:0] beta_conv_offset_1_i_fu_832_p3;
reg   [31:0] beta_conv_offset_1_i_reg_1866;
wire   [31:0] gamma_conv_offset_1_s_fu_839_p3;
reg   [31:0] gamma_conv_offset_1_s_reg_1871;
wire   [31:0] weight_offset2_1_fu_851_p3;
reg   [31:0] weight_offset2_1_reg_1876;
wire   [32:0] ret_V_1_fu_864_p2;
reg   [32:0] ret_V_1_reg_1881;
wire   [32:0] ret_V_fu_877_p2;
reg   [32:0] ret_V_reg_1886;
wire   [0:0] tmp_25_i_i_fu_886_p2;
wire    ap_CS_fsm_state27;
reg   [27:0] tmp_22_reg_1895;
wire   [58:0] global_bias_V_offset_3_fu_909_p1;
reg   [58:0] global_bias_V_offset_3_reg_1900;
wire    ap_CS_fsm_state28;
wire   [58:0] sum1_i_i_fu_912_p2;
reg   [58:0] sum1_i_i_reg_1905;
reg   [12:0] tmp_34_add_i32_shr_i_reg_1910;
reg    ap_sig_ioackin_m_axi_global_weight_V_ARREADY;
wire   [31:0] tmp_34_add_i32_shr_c_fu_955_p1;
reg   [31:0] tmp_34_add_i32_shr_c_reg_1923;
wire   [0:0] exitcond1_i_i_fu_959_p2;
reg   [0:0] exitcond1_i_i_reg_1929_pp0_iter1_reg;
wire   [12:0] indvar_next1_i_i_fu_964_p2;
reg   [12:0] indvar_next1_i_i_reg_1933;
reg    ap_enable_reg_pp0_iter0;
reg   [511:0] global_bias_V_addr_r_reg_1938;
reg   [27:0] tmp_24_reg_1943;
wire    ap_CS_fsm_state39;
wire   [58:0] sum3_i_i_fu_993_p2;
reg   [58:0] sum3_i_i_reg_1948;
wire    ap_CS_fsm_state40;
wire   [0:0] exitcond3_i_i_fu_1008_p2;
reg   [0:0] exitcond3_i_i_reg_1959_pp1_iter1_reg;
wire   [12:0] indvar_next2_i_i_fu_1013_p2;
reg   [12:0] indvar_next2_i_i_reg_1963;
reg    ap_enable_reg_pp1_iter0;
reg   [511:0] global_bias_V_addr_2_2_reg_1968;
wire   [31:0] tmp_38_i_i_fu_1029_p1;
reg   [31:0] tmp_38_i_i_reg_1973;
wire    ap_CS_fsm_state51;
wire   [0:0] tmp_23_i_i_fu_1041_p2;
wire    ap_CS_fsm_state52;
wire   [31:0] global_bias_offset_fu_1046_p2;
reg   [31:0] global_bias_offset_reg_1983;
wire   [2:0] i_fu_1057_p2;
wire    ap_CS_fsm_state53;
wire   [58:0] sum9_i_i_fu_1084_p2;
reg   [58:0] sum9_i_i_reg_1996;
wire    ap_CS_fsm_state54;
reg   [12:0] tmp_40_add_i32_shr_i_reg_2001;
wire   [31:0] tmp_40_add_i32_shr_c_fu_1127_p1;
wire   [0:0] exitcond2_i_i_fu_1131_p2;
reg   [0:0] exitcond2_i_i_reg_2018_pp3_iter1_reg;
wire   [12:0] indvar_next_i_i_fu_1136_p2;
reg   [12:0] indvar_next_i_i_reg_2022;
reg    ap_enable_reg_pp3_iter0;
reg   [511:0] global_bias_V_addr_1_2_reg_2027;
wire   [31:0] tmp_36_i_i_fu_1147_p1;
wire    ap_CS_fsm_state70;
wire   [31:0] grp_fu_1024_p2;
reg   [31:0] tmp_37_i_i_reg_2038;
wire    ap_CS_fsm_state71;
wire   [31:0] grp_fu_1032_p2;
reg   [31:0] tmp_39_i_i_reg_2043;
wire  signed [31:0] tmp_i_i_fu_1150_p2;
reg  signed [31:0] tmp_i_i_reg_2048;
wire    ap_CS_fsm_state72;
wire  signed [31:0] grp_fu_1615_p2;
reg  signed [31:0] tmp4_i_i_reg_2053;
wire   [31:0] grp_fu_1154_p2;
reg   [31:0] tmp2_i_i_reg_2058;
wire    ap_CS_fsm_state79;
wire   [31:0] global_weight_offset_fu_1158_p2;
reg   [31:0] global_weight_offset_reg_2063;
wire    ap_CS_fsm_state80;
wire   [0:0] tmp_40_i_i_fu_1162_p2;
wire   [0:0] tmp_47_i_i_fu_1167_p2;
wire   [58:0] sum4_i_i_fu_1207_p2;
reg   [58:0] sum4_i_i_reg_2086;
wire    ap_CS_fsm_state82;
wire   [31:0] grp_fu_1621_p4;
reg   [31:0] tmp_59_add_i_i_reg_2091;
wire   [25:0] tmp_59_add_i32_shr_i_fu_1223_p4;
reg   [25:0] tmp_59_add_i32_shr_i_reg_2102;
wire   [31:0] tmp_69_i_i_fu_1232_p1;
wire   [0:0] exitcond5_i_i_fu_1237_p2;
reg   [0:0] exitcond5_i_i_reg_2112_pp4_iter1_reg;
wire   [25:0] indvar_next4_i_i_fu_1242_p2;
reg   [25:0] indvar_next4_i_i_reg_2116;
reg    ap_enable_reg_pp4_iter0;
reg   [511:0] global_bias_V_addr_4_1_reg_2121;
wire   [58:0] sum_i_i_fu_1260_p2;
reg   [58:0] sum_i_i_reg_2126;
wire    ap_CS_fsm_state95;
wire   [29:0] grp_fu_1630_p2;
reg   [29:0] tmp_44_i_i_reg_2131;
reg   [25:0] tmp_52_add_i32_shr_i_reg_2136;
wire    ap_CS_fsm_state96;
wire   [31:0] tmp_64_i_i_fu_1299_p1;
wire   [0:0] exitcond4_i_i_fu_1303_p2;
reg   [0:0] exitcond4_i_i_reg_2153_pp5_iter1_reg;
wire   [25:0] indvar_next3_i_i_fu_1308_p2;
reg   [25:0] indvar_next3_i_i_reg_2157;
reg    ap_enable_reg_pp5_iter0;
reg   [511:0] global_bias_V_addr_3_1_reg_2162;
wire   [31:0] in_num_iter_fu_1322_p2;
reg   [31:0] in_num_iter_reg_2167;
wire    ap_CS_fsm_state109;
wire    grp_weight_load_bias_wri_fu_531_ap_ready;
wire    grp_weight_load_bias_wri_fu_531_ap_done;
reg    ap_predicate_op483_call_state109;
wire    grp_weight_load_bias_wri_fu_542_ap_ready;
wire    grp_weight_load_bias_wri_fu_542_ap_done;
reg    ap_predicate_op484_call_state109;
reg    ap_block_state109_on_subcall_done;
wire   [31:0] in_h_iter_fu_1328_p2;
reg   [31:0] in_h_iter_reg_2173;
wire   [31:0] in_w_iter_fu_1333_p2;
reg   [31:0] in_w_iter_reg_2179;
wire   [31:0] out_num_iter_fu_1341_p2;
reg   [31:0] out_num_iter_reg_2185;
wire   [0:0] tmp_53_i_i_fu_1347_p2;
reg   [0:0] tmp_53_i_i_reg_2191;
wire    ap_CS_fsm_state110;
wire   [0:0] tmp_54_i_i_fu_1351_p2;
reg   [0:0] tmp_54_i_i_reg_2198;
wire   [0:0] tmp_55_i_i_fu_1355_p2;
reg   [0:0] tmp_55_i_i_reg_2204;
wire   [0:0] tmp_57_i_i_fu_1359_p2;
reg   [0:0] tmp_57_i_i_reg_2210;
wire   [31:0] layer_iter_fu_1363_p2;
reg   [31:0] layer_iter_reg_2216;
wire   [0:0] sel_tmp6_demorgan_i_s_fu_1369_p2;
reg   [0:0] sel_tmp6_demorgan_i_s_reg_2222;
wire   [0:0] sel_tmp13_demorgan_i_fu_1375_p2;
reg   [0:0] sel_tmp13_demorgan_i_reg_2228;
wire   [31:0] newSel1_i_i_fu_1445_p3;
wire    ap_CS_fsm_state111;
wire   [31:0] newSel4_i_i_fu_1468_p3;
wire   [31:0] newSel7_i_i_fu_1491_p3;
wire   [31:0] newSel10_i_i_fu_1514_p3;
wire   [31:0] newSel12_i_i_fu_1529_p3;
wire   [0:0] layer_start_be_i_i_fu_1575_p2;
wire   [0:0] done_be_i_i_fu_1603_p2;
wire    ap_CS_fsm_state35;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state36;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state47;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state48;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state61;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state62;
reg    ap_enable_reg_pp3_iter2;
wire    ap_CS_fsm_state89;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state90;
reg    ap_enable_reg_pp4_iter2;
wire    ap_CS_fsm_state103;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state104;
reg    ap_enable_reg_pp5_iter2;
reg   [11:0] weight_burst_buf2_V_address0;
reg    weight_burst_buf2_V_ce0;
reg    weight_burst_buf2_V_we0;
reg   [511:0] weight_burst_buf2_V_d0;
wire   [511:0] weight_burst_buf2_V_q0;
reg   [1:0] beta_conv_burst_buf_s_address0;
reg    beta_conv_burst_buf_s_ce0;
reg    beta_conv_burst_buf_s_we0;
reg   [511:0] beta_conv_burst_buf_s_d0;
wire   [511:0] beta_conv_burst_buf_s_q0;
reg   [1:0] gamma_conv_burst_buf_address0;
reg    gamma_conv_burst_buf_ce0;
reg    gamma_conv_burst_buf_we0;
reg   [511:0] gamma_conv_burst_buf_d0;
wire   [511:0] gamma_conv_burst_buf_q0;
wire    grp_weight_load_conv_wei_fu_522_ap_start;
wire    grp_weight_load_conv_wei_fu_522_ap_done;
wire    grp_weight_load_conv_wei_fu_522_ap_idle;
wire    grp_weight_load_conv_wei_fu_522_ap_ready;
wire   [11:0] grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_address0;
wire    grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_ce0;
wire   [255:0] grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_din;
wire    grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_write;
wire    grp_weight_load_bias_wri_fu_531_ap_start;
wire    grp_weight_load_bias_wri_fu_531_ap_idle;
wire   [1:0] grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_address0;
wire    grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_ce0;
wire   [255:0] grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_din;
wire    grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_write;
wire    grp_weight_load_bias_wri_fu_542_ap_start;
wire    grp_weight_load_bias_wri_fu_542_ap_idle;
wire   [1:0] grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_address0;
wire    grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_ce0;
wire   [255:0] grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_din;
wire    grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_write;
reg   [31:0] op_assign_i_i_reg_355;
reg  signed [31:0] i_op_assign_i_i_reg_367;
reg   [31:0] in_h_iter_i_i_reg_379;
reg   [31:0] in_w_iter_i_i_reg_391;
reg   [31:0] layer_iter_i_i_reg_403;
reg   [0:0] done_i_i_reg_427;
reg   [0:0] layer_start_1_i_i_reg_438;
reg    ap_predicate_op170_read_state11;
reg    ap_predicate_op171_write_state11;
reg    ap_block_state11;
reg   [12:0] ap_phi_mux_indvar1_i_i_phi_fu_455_p4;
reg   [12:0] ap_phi_mux_indvar4_i_i_phi_fu_467_p4;
reg   [2:0] i_i_i_reg_475;
wire   [0:0] exitcond_i_i_fu_1051_p2;
reg   [12:0] ap_phi_mux_indvar_i_i_phi_fu_490_p4;
reg   [25:0] ap_phi_mux_indvar8_i_i_phi_fu_502_p4;
reg   [25:0] ap_phi_mux_indvar6_i_i_phi_fu_514_p4;
reg    grp_weight_load_conv_wei_fu_522_ap_start_reg;
wire    ap_CS_fsm_state107;
wire    ap_CS_fsm_state108;
reg    grp_weight_load_bias_wri_fu_531_ap_start_reg;
reg    grp_weight_load_bias_wri_fu_542_ap_start_reg;
wire   [63:0] indvar2_i_i_fu_970_p1;
wire   [63:0] indvar5_i_i_fu_1019_p1;
wire   [63:0] tmp_33_i_i_fu_1063_p1;
wire   [63:0] indvar3_i_i_fu_1142_p1;
wire   [63:0] indvar9_i_i_fu_1248_p1;
wire   [63:0] indvar7_i_i_fu_1314_p1;
wire   [63:0] sum1_cast_i_i_fu_945_p1;
wire   [63:0] sum3_cast_i_i_fu_998_p1;
wire   [63:0] sum9_cast_i_i_fu_1117_p1;
wire   [63:0] sum4_cast_i_i_fu_1213_p1;
wire   [63:0] sum_cast_i_i_fu_1289_p1;
reg    ap_reg_ioackin_m_axi_global_weight_V_ARREADY;
reg    ap_block_state12;
reg    ap_block_state13;
reg    ap_block_state14;
reg   [191:0] tmp_V_fu_188;
reg   [191:0] tmp_V_1_fu_192;
reg   [191:0] tmp_V_2_fu_196;
reg   [191:0] tmp_V_3_fu_200;
wire   [15:0] FILTER_S1_V_fu_698_p4;
wire  signed [31:0] grp_fu_743_p0;
wire   [31:0] factor_i_i_fu_748_p3;
wire   [31:0] gamma_conv_offset_1_fu_813_p2;
wire   [0:0] norm_depth_en_fu_801_p2;
wire   [31:0] p_0575_0_i_i_fu_817_p3;
wire   [31:0] gamma_conv_offset_fu_809_p2;
wire   [31:0] p_i_i_fu_824_p3;
wire   [31:0] weight_offset2_fu_847_p2;
wire   [32:0] lhs_V_1_fu_857_p1;
wire   [32:0] rhs_V_1_fu_861_p1;
wire   [32:0] lhs_V_fu_870_p1;
wire   [32:0] rhs_V_fu_874_p1;
wire   [32:0] tmp_24_i_i_fu_883_p1;
wire   [31:0] global_bias_offset_1_fu_891_p2;
wire   [58:0] tmp_27_cast_i_i_fu_906_p1;
wire   [17:0] tmp_29_i_i_fu_918_p3;
wire   [18:0] tmp_34_cast_i_i_fu_925_p1;
wire   [18:0] tmp_34_add_i_i_i_fu_929_p2;
wire   [31:0] global_bias_offset_2_fu_975_p2;
wire   [58:0] tmp_35_cast_i_i_fu_990_p1;
wire   [15:0] grp_fu_1032_p1;
wire   [32:0] tmp_22_i_i_fu_1038_p1;
wire   [27:0] tmp_23_fu_1068_p4;
wire   [58:0] global_bias_V_offset_2_fu_1081_p1;
wire   [58:0] tmp_31_cast_i_i_fu_1077_p1;
wire   [17:0] tmp_32_i_i_fu_1090_p3;
wire   [18:0] tmp_40_cast_i_i_fu_1097_p1;
wire   [18:0] tmp_40_add_i_i_fu_1101_p2;
wire    ap_CS_fsm_state73;
wire   [20:0] p_shl_i_i_fu_1172_p3;
wire   [17:0] p_shl1_i_i_fu_1183_p3;
wire   [27:0] grp_fu_573_p4;
wire   [58:0] global_weight_V_offs_2_fu_1204_p1;
wire   [58:0] tmp_49_cast_i_i_fu_1200_p1;
wire   [58:0] global_weight_V_offs_1_fu_1257_p1;
wire   [58:0] tmp_42_cast_i_i_fu_1253_p1;
wire   [31:0] tmp_46_i_i_fu_1266_p3;
wire   [31:0] tmp_52_add_i_i_fu_1273_p2;
wire   [31:0] tmp_52_i_i_fu_1319_p1;
wire   [31:0] tmp_56_i_i_fu_1338_p1;
wire   [0:0] sel_tmp1_i_i_fu_1385_p2;
wire   [0:0] sel_tmp6_i_i_fu_1395_p2;
wire   [0:0] sel_tmp_i_i_fu_1405_p2;
wire   [0:0] sel_tmp8_i_i_fu_1410_p2;
wire   [0:0] sel_tmp7_i_i_fu_1400_p2;
wire   [0:0] sel_tmp2_i_i_fu_1390_p2;
wire   [0:0] or_cond_i_i_fu_1415_p2;
wire   [0:0] tmp_5_i_i_fu_1426_p2;
wire   [0:0] or_cond1_i_i_fu_1421_p2;
wire   [0:0] or_cond2_i_i_fu_1439_p2;
wire   [31:0] newSel_i_i_fu_1432_p3;
wire   [31:0] newSel2_i_i_fu_1453_p3;
wire   [31:0] newSel3_i_i_fu_1460_p3;
wire   [31:0] newSel5_i_i_fu_1476_p3;
wire   [31:0] newSel6_i_i_fu_1483_p3;
wire   [31:0] newSel8_i_i_fu_1499_p3;
wire   [31:0] newSel9_i_i_fu_1506_p3;
wire   [0:0] tmp_58_i_i_fu_1381_p2;
wire   [31:0] newSel11_i_i_fu_1522_p3;
wire   [0:0] tmp_56_not_i_i_fu_1543_p2;
wire   [0:0] tmp_58_not_i_i_fu_1553_p2;
wire   [0:0] not_sel_tmp_i_i_fu_1548_p2;
wire   [0:0] not_sel_tmp1_i_i_fu_1558_p2;
wire   [0:0] tmp6_i_i_fu_1563_p2;
wire   [0:0] sel_tmp9_i_i_fu_1537_p2;
wire   [0:0] sel_tmp3_i_i_fu_1569_p2;
wire   [0:0] tmp_55_not_i_i_fu_1581_p2;
wire   [0:0] not_sel_tmp2_i_i_fu_1586_p2;
wire   [0:0] tmp9_i_i_fu_1597_p2;
wire   [0:0] tmp7_i_i_fu_1591_p2;
wire   [15:0] grp_fu_1609_p0;
wire   [15:0] grp_fu_1609_p1;
wire   [15:0] grp_fu_1615_p0;
wire   [15:0] grp_fu_1615_p1;
wire   [17:0] grp_fu_1621_p0;
wire   [20:0] grp_fu_1621_p1;
wire   [15:0] grp_fu_1621_p2;
wire   [6:0] grp_fu_1621_p3;
wire   [15:0] grp_fu_1630_p0;
wire   [15:0] grp_fu_1630_p1;
reg   [100:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
wire   [31:0] grp_fu_1032_p10;
wire   [21:0] grp_fu_1621_p00;
wire   [21:0] grp_fu_1621_p10;
wire   [29:0] grp_fu_1630_p00;
wire   [29:0] grp_fu_1630_p10;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 101'd1;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 grp_weight_load_conv_wei_fu_522_ap_start_reg = 1'b0;
#0 grp_weight_load_bias_wri_fu_531_ap_start_reg = 1'b0;
#0 grp_weight_load_bias_wri_fu_542_ap_start_reg = 1'b0;
#0 ap_reg_ioackin_m_axi_global_weight_V_ARREADY = 1'b0;
end

weight_load_weighlbW #(
    .DataWidth( 512 ),
    .AddressRange( 2304 ),
    .AddressWidth( 12 ))
weight_burst_buf2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_burst_buf2_V_address0),
    .ce0(weight_burst_buf2_V_ce0),
    .we0(weight_burst_buf2_V_we0),
    .d0(weight_burst_buf2_V_d0),
    .q0(weight_burst_buf2_V_q0)
);

weight_load_beta_mb6 #(
    .DataWidth( 512 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
beta_conv_burst_buf_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(beta_conv_burst_buf_s_address0),
    .ce0(beta_conv_burst_buf_s_ce0),
    .we0(beta_conv_burst_buf_s_we0),
    .d0(beta_conv_burst_buf_s_d0),
    .q0(beta_conv_burst_buf_s_q0)
);

weight_load_beta_mb6 #(
    .DataWidth( 512 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
gamma_conv_burst_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(gamma_conv_burst_buf_address0),
    .ce0(gamma_conv_burst_buf_ce0),
    .we0(gamma_conv_burst_buf_we0),
    .d0(gamma_conv_burst_buf_d0),
    .q0(gamma_conv_burst_buf_q0)
);

weight_load_conv_wei grp_weight_load_conv_wei_fu_522(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_weight_load_conv_wei_fu_522_ap_start),
    .ap_done(grp_weight_load_conv_wei_fu_522_ap_done),
    .ap_idle(grp_weight_load_conv_wei_fu_522_ap_idle),
    .ap_ready(grp_weight_load_conv_wei_fu_522_ap_ready),
    .weight_burst_buf2_V_address0(grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_address0),
    .weight_burst_buf2_V_ce0(grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_ce0),
    .weight_burst_buf2_V_q0(weight_burst_buf2_V_q0),
    .fifo_conv_weight_V_V_din(grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_din),
    .fifo_conv_weight_V_V_full_n(fifo_conv_weight_V_V_full_n),
    .fifo_conv_weight_V_V_write(grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_write),
    .inst2_V(p_Val2_2_reg_1765),
    .inst3_V(p_Val2_3_reg_1702)
);

weight_load_bias_wri grp_weight_load_bias_wri_fu_531(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_weight_load_bias_wri_fu_531_ap_start),
    .ap_done(grp_weight_load_bias_wri_fu_531_ap_done),
    .ap_idle(grp_weight_load_bias_wri_fu_531_ap_idle),
    .ap_ready(grp_weight_load_bias_wri_fu_531_ap_ready),
    .bias_burst_buf_V_address0(grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_address0),
    .bias_burst_buf_V_ce0(grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_ce0),
    .bias_burst_buf_V_q0(beta_conv_burst_buf_s_q0),
    .fifo_bias_V_V_din(grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_din),
    .fifo_bias_V_V_full_n(fifo_beta_conv_V_V_full_n),
    .fifo_bias_V_V_write(grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_write),
    .inst1_V(p_Val2_1_reg_1830),
    .inst3_V(p_Val2_3_reg_1702),
    .in_num_iter(op_assign_i_i_reg_355)
);

weight_load_bias_wri grp_weight_load_bias_wri_fu_542(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_weight_load_bias_wri_fu_542_ap_start),
    .ap_done(grp_weight_load_bias_wri_fu_542_ap_done),
    .ap_idle(grp_weight_load_bias_wri_fu_542_ap_idle),
    .ap_ready(grp_weight_load_bias_wri_fu_542_ap_ready),
    .bias_burst_buf_V_address0(grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_address0),
    .bias_burst_buf_V_ce0(grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_ce0),
    .bias_burst_buf_V_q0(gamma_conv_burst_buf_q0),
    .fifo_bias_V_V_din(grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_din),
    .fifo_bias_V_V_full_n(fifo_gamma_conv_V_V_full_n),
    .fifo_bias_V_V_write(grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_write),
    .inst1_V(p_Val2_1_reg_1830),
    .inst3_V(p_Val2_3_reg_1702),
    .in_num_iter(op_assign_i_i_reg_355)
);

top_kernel_mul_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_32bkb_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_743_p0),
    .din1(tmp3_i_i_reg_1797),
    .ce(1'b1),
    .dout(grp_fu_743_p2)
);

top_kernel_mul_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_32bkb_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(i_op_assign_i_i_reg_367),
    .din1(LAYER_IN_NUM_HW_V_reg_1802),
    .ce(1'b1),
    .dout(grp_fu_1024_p2)
);

top_kernel_mul_32g8j #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_32g8j_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(op_assign_i_i_reg_355),
    .din1(grp_fu_1032_p1),
    .ce(1'b1),
    .dout(grp_fu_1032_p2)
);

top_kernel_mul_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_32bkb_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp4_i_i_reg_2053),
    .din1(tmp_i_i_reg_2048),
    .ce(1'b1),
    .dout(grp_fu_1154_p2)
);

top_kernel_mul_muocq #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_muocq_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1609_p0),
    .din1(grp_fu_1609_p1),
    .ce(1'b1),
    .dout(grp_fu_1609_p2)
);

top_kernel_mul_muocq #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
top_kernel_mul_muocq_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1615_p0),
    .din1(grp_fu_1615_p1),
    .ce(1'b1),
    .dout(grp_fu_1615_p2)
);

top_kernel_ama_adpcA #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 21 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 7 ),
    .dout_WIDTH( 32 ))
top_kernel_ama_adpcA_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1621_p0),
    .din1(grp_fu_1621_p1),
    .din2(grp_fu_1621_p2),
    .din3(grp_fu_1621_p3),
    .ce(1'b1),
    .dout(grp_fu_1621_p4)
);

top_kernel_mul_muqcK #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
top_kernel_mul_muqcK_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1630_p0),
    .din1(grp_fu_1630_p1),
    .ce(1'b1),
    .dout(grp_fu_1630_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (ap_phi_mux_done_i_i_phi_fu_431_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state36) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state36)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state36);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state48) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state48)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state48);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state47)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state62) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state61)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state62)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state62);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state61)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state90) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state89)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state90)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state90);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state89)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state104) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state103)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state104)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state104);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state103)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_global_weight_V_ARREADY <= 1'b0;
    end else begin
        if ((((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state83)) | ((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state97)) | ((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41)) | ((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29)) | ((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state55)))) begin
            ap_reg_ioackin_m_axi_global_weight_V_ARREADY <= 1'b0;
        end else if ((((1'b1 == ap_CS_fsm_state83) & (m_axi_global_weight_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state97) & (m_axi_global_weight_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state41) & (m_axi_global_weight_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state29) & (m_axi_global_weight_V_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state55) & (m_axi_global_weight_V_ARREADY == 1'b1)))) begin
            ap_reg_ioackin_m_axi_global_weight_V_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_weight_load_bias_wri_fu_531_ap_start_reg <= 1'b0;
    end else begin
        if ((((bias_en_reg_1858 == 1'd1) & (1'b1 == ap_CS_fsm_state108) & (grp_weight_load_conv_wei_fu_522_ap_done == 1'b1)) | ((norm_conv_en_reg_1862 == 1'd1) & (1'b1 == ap_CS_fsm_state108) & (bias_en_reg_1858 == 1'd0) & (grp_weight_load_conv_wei_fu_522_ap_done == 1'b1)))) begin
            grp_weight_load_bias_wri_fu_531_ap_start_reg <= 1'b1;
        end else if ((grp_weight_load_bias_wri_fu_531_ap_ready == 1'b1)) begin
            grp_weight_load_bias_wri_fu_531_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_weight_load_bias_wri_fu_542_ap_start_reg <= 1'b0;
    end else begin
        if ((((bias_en_reg_1858 == 1'd1) & (1'b1 == ap_CS_fsm_state108) & (grp_weight_load_conv_wei_fu_522_ap_done == 1'b1)) | ((norm_conv_en_reg_1862 == 1'd1) & (1'b1 == ap_CS_fsm_state108) & (bias_en_reg_1858 == 1'd0) & (grp_weight_load_conv_wei_fu_522_ap_done == 1'b1)))) begin
            grp_weight_load_bias_wri_fu_542_ap_start_reg <= 1'b1;
        end else if ((grp_weight_load_bias_wri_fu_542_ap_ready == 1'b1)) begin
            grp_weight_load_bias_wri_fu_542_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_weight_load_conv_wei_fu_522_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state107)) begin
            grp_weight_load_conv_wei_fu_522_ap_start_reg <= 1'b1;
        end else if ((grp_weight_load_conv_wei_fu_522_ap_ready == 1'b1)) begin
            grp_weight_load_conv_wei_fu_522_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        done_i_i_reg_427 <= done_be_i_i_fu_1603_p2;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        done_i_i_reg_427 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) & (exitcond_i_i_fu_1051_p2 == 1'd0))) begin
        i_i_i_reg_475 <= i_fu_1057_p2;
    end else if (((1'b1 == ap_CS_fsm_state52) & (tmp_23_i_i_fu_1041_p2 == 1'd0))) begin
        i_i_i_reg_475 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        i_op_assign_i_i_reg_367 <= newSel4_i_i_fu_1468_p3;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_op_assign_i_i_reg_367 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        in_h_iter_i_i_reg_379 <= newSel7_i_i_fu_1491_p3;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        in_h_iter_i_i_reg_379 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        in_w_iter_i_i_reg_391 <= newSel10_i_i_fu_1514_p3;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        in_w_iter_i_i_reg_391 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_i_i_reg_1929 == 1'd0))) begin
        indvar1_i_i_reg_451 <= indvar_next1_i_i_reg_1933;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        indvar1_i_i_reg_451 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond3_i_i_reg_1959 == 1'd0))) begin
        indvar4_i_i_reg_463 <= indvar_next2_i_i_reg_1963;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        indvar4_i_i_reg_463 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_i_i_reg_2153 == 1'd0))) begin
        indvar6_i_i_reg_510 <= indvar_next3_i_i_reg_2157;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        indvar6_i_i_reg_510 <= 26'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_i_i_reg_2112 == 1'd0))) begin
        indvar8_i_i_reg_498 <= indvar_next4_i_i_reg_2116;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        indvar8_i_i_reg_498 <= 26'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond2_i_i_reg_2018 == 1'd0))) begin
        indvar_i_i_reg_486 <= indvar_next_i_i_reg_2022;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        indvar_i_i_reg_486 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        layer_iter_i_i_reg_403 <= newSel12_i_i_fu_1529_p3;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        layer_iter_i_i_reg_403 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (1'b1 == ap_CS_fsm_state11) & (ap_phi_mux_layer_start_i_i_phi_fu_419_p4 == 1'd0) & (done_i_i_reg_427 == 1'd0))) begin
        layer_start_1_i_i_reg_438 <= layer_start_i_i_reg_415;
    end else if ((~(((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_out_V_V_full_n == 1'b0)) | ((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_in_V_V_empty_n == 1'b0))) & (layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        layer_start_1_i_i_reg_438 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        layer_start_i_i_reg_415 <= layer_start_be_i_i_fu_1575_p2;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        layer_start_i_i_reg_415 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state111)) begin
        op_assign_i_i_reg_355 <= newSel1_i_i_fu_1445_p3;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        op_assign_i_i_reg_355 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        FILTER_S2_V_reg_1784 <= {{tmp_V_1_fu_192[159:144]}};
        beta_depth_offset_reg_1776 <= {{tmp_V_1_fu_192[95:64]}};
        p_Val2_2_reg_1765 <= tmp_V_1_fu_192;
        weight_offset2_2_reg_1770 <= {{tmp_V_1_fu_192[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        LAYER_BATCH_V_reg_1692 <= {{fifo_config_in_V_V_dout[191:160]}};
        tmp_V_9_reg_1687 <= fifo_config_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_out_V_V_full_n == 1'b0)) | ((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_in_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state15))) begin
        LAYER_IN_H_T_V_reg_1728 <= {{tmp_V_fu_188[127:96]}};
        LAYER_IN_NUM_T_V_reg_1709 <= {{tmp_V_fu_188[79:64]}};
        LAYER_IN_W_T_V_reg_1733 <= {{tmp_V_fu_188[159:128]}};
        LAYER_OUT_NUM_T_V_reg_1719 <= {{tmp_V_fu_188[95:80]}};
        p_Val2_3_reg_1702 <= tmp_V_fu_188;
        tmp_17_reg_1744 <= tmp_V_fu_188[32'd7];
        tmp_18_reg_1749 <= tmp_V_fu_188[32'd1];
        tmp_19_reg_1755 <= tmp_V_fu_188[32'd12];
        tmp_20_reg_1760 <= tmp_V_fu_188[32'd10];
        tmp_reg_1738 <= tmp_V_fu_188[32'd2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        LAYER_IN_H_V_reg_1848 <= {{tmp_V_2_fu_196[95:64]}};
        LAYER_IN_NUM_V_reg_1836 <= LAYER_IN_NUM_V_fu_763_p1;
        LAYER_IN_W_V_reg_1853 <= {{tmp_V_2_fu_196[127:96]}};
        LAYER_OUT_NUM_V_reg_1843 <= {{tmp_V_2_fu_196[63:32]}};
        beta_conv_offset_1_i_reg_1866 <= beta_conv_offset_1_i_fu_832_p3;
        bias_en_reg_1858 <= bias_en_fu_797_p2;
        gamma_conv_offset_1_s_reg_1871 <= gamma_conv_offset_1_s_fu_839_p3;
        norm_conv_en_reg_1862 <= norm_conv_en_fu_805_p2;
        p_Val2_1_reg_1830 <= tmp_V_2_fu_196;
        weight_offset2_1_reg_1876 <= weight_offset2_1_fu_851_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        LAYER_IN_NUM_HW_V_reg_1802 <= LAYER_IN_NUM_HW_V_fu_725_p1;
        LAYER_OUT_NUM_HW_V_reg_1808 <= {{tmp_V_3_fu_200[63:32]}};
        tmp_21_reg_1814 <= tmp_21_fu_739_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        beta_conv_offset_reg_1819 <= beta_conv_offset_fu_755_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond1_i_i_reg_1929 <= exitcond1_i_i_fu_959_p2;
        exitcond1_i_i_reg_1929_pp0_iter1_reg <= exitcond1_i_i_reg_1929;
        indvar1_i_i_reg_451_pp0_iter1_reg <= indvar1_i_i_reg_451;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond2_i_i_reg_2018 <= exitcond2_i_i_fu_1131_p2;
        exitcond2_i_i_reg_2018_pp3_iter1_reg <= exitcond2_i_i_reg_2018;
        indvar_i_i_reg_486_pp3_iter1_reg <= indvar_i_i_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond3_i_i_reg_1959 <= exitcond3_i_i_fu_1008_p2;
        exitcond3_i_i_reg_1959_pp1_iter1_reg <= exitcond3_i_i_reg_1959;
        indvar4_i_i_reg_463_pp1_iter1_reg <= indvar4_i_i_reg_463;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        exitcond4_i_i_reg_2153 <= exitcond4_i_i_fu_1303_p2;
        exitcond4_i_i_reg_2153_pp5_iter1_reg <= exitcond4_i_i_reg_2153;
        indvar6_i_i_reg_510_pp5_iter1_reg <= indvar6_i_i_reg_510;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond5_i_i_reg_2112 <= exitcond5_i_i_fu_1237_p2;
        exitcond5_i_i_reg_2112_pp4_iter1_reg <= exitcond5_i_i_reg_2112;
        indvar8_i_i_reg_498_pp4_iter1_reg <= indvar8_i_i_reg_498;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond2_i_i_reg_2018 == 1'd0))) begin
        global_bias_V_addr_1_2_reg_2027 <= m_axi_global_weight_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond3_i_i_reg_1959 == 1'd0))) begin
        global_bias_V_addr_2_2_reg_1968 <= m_axi_global_weight_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_i_i_reg_2153 == 1'd0))) begin
        global_bias_V_addr_3_1_reg_2162 <= m_axi_global_weight_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_i_i_reg_2112 == 1'd0))) begin
        global_bias_V_addr_4_1_reg_2121 <= m_axi_global_weight_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_i_i_reg_1929 == 1'd0))) begin
        global_bias_V_addr_r_reg_1938 <= m_axi_global_weight_V_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0) | (global_bias_V_offset_empty_n == 1'b0) | (global_weight_V_offset_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        global_bias_V_offset_1_reg_1666 <= global_bias_V_offset_dout;
        global_weight_V_offs_reg_1660 <= global_weight_V_offset_dout;
        tmp_V_4_reg_1672 <= fifo_config_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        global_bias_V_offset_3_reg_1900[57 : 0] <= global_bias_V_offset_3_fu_909_p1[57 : 0];
        sum1_i_i_reg_1905 <= sum1_i_i_fu_912_p2;
        tmp_34_add_i32_shr_i_reg_1910 <= {{tmp_34_add_i_i_i_fu_929_p2[18:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (tmp_23_i_i_fu_1041_p2 == 1'd0))) begin
        global_bias_offset_reg_1983 <= global_bias_offset_fu_1046_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        global_weight_offset_reg_2063 <= global_weight_offset_fu_1158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state109_on_subcall_done) & (1'b1 == ap_CS_fsm_state109))) begin
        in_h_iter_reg_2173 <= in_h_iter_fu_1328_p2;
        in_num_iter_reg_2167 <= in_num_iter_fu_1322_p2;
        in_w_iter_reg_2179 <= in_w_iter_fu_1333_p2;
        out_num_iter_reg_2185 <= out_num_iter_fu_1341_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_next1_i_i_reg_1933 <= indvar_next1_i_i_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_next2_i_i_reg_1963 <= indvar_next2_i_i_fu_1013_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        indvar_next3_i_i_reg_2157 <= indvar_next3_i_i_fu_1308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        indvar_next4_i_i_reg_2116 <= indvar_next4_i_i_fu_1242_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_next_i_i_reg_2022 <= indvar_next_i_i_fu_1136_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state110)) begin
        layer_iter_reg_2216 <= layer_iter_fu_1363_p2;
        sel_tmp13_demorgan_i_reg_2228 <= sel_tmp13_demorgan_i_fu_1375_p2;
        sel_tmp6_demorgan_i_s_reg_2222 <= sel_tmp6_demorgan_i_s_fu_1369_p2;
        tmp_53_i_i_reg_2191 <= tmp_53_i_i_fu_1347_p2;
        tmp_54_i_i_reg_2198 <= tmp_54_i_i_fu_1351_p2;
        tmp_55_i_i_reg_2204 <= tmp_55_i_i_fu_1355_p2;
        tmp_57_i_i_reg_2210 <= tmp_57_i_i_fu_1359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_18_reg_1749 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        p_1_i_i_reg_1825 <= grp_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((norm_conv_en_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26) & (bias_en_fu_797_p2 == 1'd0))) begin
        ret_V_1_reg_1881 <= ret_V_1_fu_864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((bias_en_fu_797_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        ret_V_reg_1886 <= ret_V_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        sum3_i_i_reg_1948 <= sum3_i_i_fu_993_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        sum4_i_i_reg_2086 <= sum4_i_i_fu_1207_p2;
        tmp_59_add_i_i_reg_2091 <= grp_fu_1621_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        sum9_i_i_reg_1996 <= sum9_i_i_fu_1084_p2;
        tmp_40_add_i32_shr_i_reg_2001 <= {{tmp_40_add_i_i_fu_1101_p2[18:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        sum_i_i_reg_2126 <= sum_i_i_fu_1260_p2;
        tmp_44_i_i_reg_2131 <= grp_fu_1630_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        tmp2_i_i_reg_2058 <= grp_fu_1154_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_18_reg_1749 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        tmp3_i_i_reg_1797 <= grp_fu_1609_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        tmp4_i_i_reg_2053 <= grp_fu_1615_p2;
        tmp_i_i_reg_2048 <= tmp_i_i_fu_1150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (tmp_25_i_i_fu_886_p2 == 1'd0))) begin
        tmp_22_reg_1895 <= {{global_bias_offset_1_fu_891_p2[31:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_24_reg_1943 <= {{global_bias_offset_2_fu_975_p2[31:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        tmp_34_add_i32_shr_c_reg_1923[12 : 0] <= tmp_34_add_i32_shr_c_fu_955_p1[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        tmp_37_i_i_reg_2038 <= grp_fu_1024_p2;
        tmp_39_i_i_reg_2043 <= grp_fu_1032_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1738 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
        tmp_38_i_i_reg_1973[15 : 0] <= tmp_38_i_i_fu_1029_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        tmp_52_add_i32_shr_i_reg_2136 <= {{tmp_52_add_i_i_fu_1273_p2[31:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state83))) begin
        tmp_59_add_i32_shr_i_reg_2102 <= {{tmp_59_add_i_i_reg_2091[31:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)))) begin
        tmp_V_1_fu_192 <= fifo_config_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        tmp_V_2_fu_196 <= fifo_config_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (done_i_i_reg_427 == 1'd0)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0) | (global_bias_V_offset_empty_n == 1'b0) | (global_weight_V_offset_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        tmp_V_3_fu_200 <= fifo_config_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_5_reg_1677 <= fifo_config_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_6_reg_1682 <= fifo_config_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_V_8_reg_1697 <= fifo_config_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        tmp_V_fu_188 <= fifo_config_in_V_V_dout;
    end
end

always @ (*) begin
    if ((exitcond1_i_i_fu_959_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state36 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state36 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond3_i_i_fu_1008_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state48 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state48 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_i_i_fu_1131_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state62 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state62 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond5_i_i_fu_1237_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state90 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state90 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_i_i_fu_1303_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state104 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state104 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (ap_phi_mux_done_i_i_phi_fu_431_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_i_i_reg_1929 == 1'd0))) begin
        ap_phi_mux_indvar1_i_i_phi_fu_455_p4 = indvar_next1_i_i_reg_1933;
    end else begin
        ap_phi_mux_indvar1_i_i_phi_fu_455_p4 = indvar1_i_i_reg_451;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond3_i_i_reg_1959 == 1'd0))) begin
        ap_phi_mux_indvar4_i_i_phi_fu_467_p4 = indvar_next2_i_i_reg_1963;
    end else begin
        ap_phi_mux_indvar4_i_i_phi_fu_467_p4 = indvar4_i_i_reg_463;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_i_i_reg_2153 == 1'd0))) begin
        ap_phi_mux_indvar6_i_i_phi_fu_514_p4 = indvar_next3_i_i_reg_2157;
    end else begin
        ap_phi_mux_indvar6_i_i_phi_fu_514_p4 = indvar6_i_i_reg_510;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_i_i_reg_2112 == 1'd0))) begin
        ap_phi_mux_indvar8_i_i_phi_fu_502_p4 = indvar_next4_i_i_reg_2116;
    end else begin
        ap_phi_mux_indvar8_i_i_phi_fu_502_p4 = indvar8_i_i_reg_498;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond2_i_i_reg_2018 == 1'd0))) begin
        ap_phi_mux_indvar_i_i_phi_fu_490_p4 = indvar_next_i_i_reg_2022;
    end else begin
        ap_phi_mux_indvar_i_i_phi_fu_490_p4 = indvar_i_i_reg_486;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_global_weight_V_ARREADY = m_axi_global_weight_V_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_global_weight_V_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        beta_conv_burst_buf_s_address0 = indvar3_i_i_fu_1142_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        beta_conv_burst_buf_s_address0 = indvar2_i_i_fu_970_p1;
    end else if ((((bias_en_reg_1858 == 1'd1) & (1'b1 == ap_CS_fsm_state109)) | ((1'b1 == ap_CS_fsm_state109) & (ap_predicate_op483_call_state109 == 1'b1)))) begin
        beta_conv_burst_buf_s_address0 = grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_address0;
    end else begin
        beta_conv_burst_buf_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        beta_conv_burst_buf_s_ce0 = 1'b1;
    end else if ((((bias_en_reg_1858 == 1'd1) & (1'b1 == ap_CS_fsm_state109)) | ((1'b1 == ap_CS_fsm_state109) & (ap_predicate_op483_call_state109 == 1'b1)))) begin
        beta_conv_burst_buf_s_ce0 = grp_weight_load_bias_wri_fu_531_bias_burst_buf_V_ce0;
    end else begin
        beta_conv_burst_buf_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        beta_conv_burst_buf_s_d0 = global_bias_V_addr_1_2_reg_2027;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        beta_conv_burst_buf_s_d0 = global_bias_V_addr_r_reg_1938;
    end else begin
        beta_conv_burst_buf_s_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond2_i_i_reg_2018_pp3_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond1_i_i_reg_1929_pp0_iter1_reg == 1'd0)))) begin
        beta_conv_burst_buf_s_we0 = 1'b1;
    end else begin
        beta_conv_burst_buf_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((bias_en_reg_1858 == 1'd1) & (1'b1 == ap_CS_fsm_state109)) | ((1'b1 == ap_CS_fsm_state109) & (ap_predicate_op483_call_state109 == 1'b1)))) begin
        fifo_beta_conv_V_V_write = grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_write;
    end else begin
        fifo_beta_conv_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state15)) | ((layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (done_i_i_reg_427 == 1'd0)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        fifo_config_in_V_V_blk_n = fifo_config_in_V_V_empty_n;
    end else begin
        fifo_config_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_out_V_V_full_n == 1'b0)) | ((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_in_V_V_empty_n == 1'b0))) & (layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state15)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (1'b1 == ap_CS_fsm_state11) & (ap_predicate_op170_read_state11 == 1'b1)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0) | (global_bias_V_offset_empty_n == 1'b0) | (global_weight_V_offset_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        fifo_config_in_V_V_read = 1'b1;
    end else begin
        fifo_config_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state15)) | ((layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (done_i_i_reg_427 == 1'd0)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        fifo_config_out_V_V_blk_n = fifo_config_out_V_V_full_n;
    end else begin
        fifo_config_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        fifo_config_out_V_V_din = tmp_V_8_reg_1697;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        fifo_config_out_V_V_din = tmp_V_9_reg_1687;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        fifo_config_out_V_V_din = tmp_V_6_reg_1682;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        fifo_config_out_V_V_din = tmp_V_5_reg_1677;
    end else if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        fifo_config_out_V_V_din = tmp_V_4_reg_1672;
    end else if (((~(((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_out_V_V_full_n == 1'b0)) | ((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_in_V_V_empty_n == 1'b0))) & (layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state15)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (1'b1 == ap_CS_fsm_state11) & (ap_predicate_op171_write_state11 == 1'b1)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0) | (global_bias_V_offset_empty_n == 1'b0) | (global_weight_V_offset_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        fifo_config_out_V_V_din = fifo_config_in_V_V_dout;
    end else begin
        fifo_config_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8)) | ((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7)) | ((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_out_V_V_full_n == 1'b0)) | ((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_in_V_V_empty_n == 1'b0))) & (layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state15)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (1'b1 == ap_CS_fsm_state11) & (ap_predicate_op171_write_state11 == 1'b1)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0) | (global_bias_V_offset_empty_n == 1'b0) | (global_weight_V_offset_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        fifo_config_out_V_V_write = 1'b1;
    end else begin
        fifo_config_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        fifo_conv_weight_V_V_write = grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_write;
    end else begin
        fifo_conv_weight_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((bias_en_reg_1858 == 1'd1) & (1'b1 == ap_CS_fsm_state109)) | ((1'b1 == ap_CS_fsm_state109) & (ap_predicate_op484_call_state109 == 1'b1)))) begin
        fifo_gamma_conv_V_V_write = grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_write;
    end else begin
        fifo_gamma_conv_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        gamma_conv_burst_buf_address0 = tmp_33_i_i_fu_1063_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        gamma_conv_burst_buf_address0 = indvar5_i_i_fu_1019_p1;
    end else if ((((bias_en_reg_1858 == 1'd1) & (1'b1 == ap_CS_fsm_state109)) | ((1'b1 == ap_CS_fsm_state109) & (ap_predicate_op484_call_state109 == 1'b1)))) begin
        gamma_conv_burst_buf_address0 = grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_address0;
    end else begin
        gamma_conv_burst_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        gamma_conv_burst_buf_ce0 = 1'b1;
    end else if ((((bias_en_reg_1858 == 1'd1) & (1'b1 == ap_CS_fsm_state109)) | ((1'b1 == ap_CS_fsm_state109) & (ap_predicate_op484_call_state109 == 1'b1)))) begin
        gamma_conv_burst_buf_ce0 = grp_weight_load_bias_wri_fu_542_bias_burst_buf_V_ce0;
    end else begin
        gamma_conv_burst_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        gamma_conv_burst_buf_d0 = 512'd0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        gamma_conv_burst_buf_d0 = global_bias_V_addr_2_2_reg_1968;
    end else begin
        gamma_conv_burst_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state53) & (exitcond_i_i_fu_1051_p2 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond3_i_i_reg_1959_pp1_iter1_reg == 1'd0)))) begin
        gamma_conv_burst_buf_we0 = 1'b1;
    end else begin
        gamma_conv_burst_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        global_bias_V_offset_blk_n = global_bias_V_offset_empty_n;
    end else begin
        global_bias_V_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0) | (global_bias_V_offset_empty_n == 1'b0) | (global_weight_V_offset_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        global_bias_V_offset_read = 1'b1;
    end else begin
        global_bias_V_offset_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state55))) begin
        global_weight_V_blk_n_AR = m_axi_global_weight_V_ARREADY;
    end else begin
        global_weight_V_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_i_i_reg_2112 == 1'd0)) | ((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_i_i_reg_2153 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond3_i_i_reg_1959 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_i_i_reg_1929 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond2_i_i_reg_2018 == 1'd0)))) begin
        global_weight_V_blk_n_R = m_axi_global_weight_V_RVALID;
    end else begin
        global_weight_V_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        global_weight_V_offset_blk_n = global_weight_V_offset_empty_n;
    end else begin
        global_weight_V_offset_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0) | (global_bias_V_offset_empty_n == 1'b0) | (global_weight_V_offset_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        global_weight_V_offset_read = 1'b1;
    end else begin
        global_weight_V_offset_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (ap_phi_mux_done_i_i_phi_fu_431_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state97)) begin
            m_axi_global_weight_V_ARADDR = sum_cast_i_i_fu_1289_p1;
        end else if ((1'b1 == ap_CS_fsm_state83)) begin
            m_axi_global_weight_V_ARADDR = sum4_cast_i_i_fu_1213_p1;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            m_axi_global_weight_V_ARADDR = sum9_cast_i_i_fu_1117_p1;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            m_axi_global_weight_V_ARADDR = sum3_cast_i_i_fu_998_p1;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            m_axi_global_weight_V_ARADDR = sum1_cast_i_i_fu_945_p1;
        end else begin
            m_axi_global_weight_V_ARADDR = 'bx;
        end
    end else begin
        m_axi_global_weight_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_CS_fsm_state97)) begin
            m_axi_global_weight_V_ARLEN = tmp_64_i_i_fu_1299_p1;
        end else if ((1'b1 == ap_CS_fsm_state83)) begin
            m_axi_global_weight_V_ARLEN = tmp_69_i_i_fu_1232_p1;
        end else if ((1'b1 == ap_CS_fsm_state55)) begin
            m_axi_global_weight_V_ARLEN = tmp_40_add_i32_shr_c_fu_1127_p1;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            m_axi_global_weight_V_ARLEN = tmp_34_add_i32_shr_c_reg_1923;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            m_axi_global_weight_V_ARLEN = tmp_34_add_i32_shr_c_fu_955_p1;
        end else begin
            m_axi_global_weight_V_ARLEN = 'bx;
        end
    end else begin
        m_axi_global_weight_V_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((ap_reg_ioackin_m_axi_global_weight_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state83)) | ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state97)) | ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state41)) | ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state29)) | ((ap_reg_ioackin_m_axi_global_weight_V_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state55)))) begin
        m_axi_global_weight_V_ARVALID = 1'b1;
    end else begin
        m_axi_global_weight_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (exitcond5_i_i_reg_2112 == 1'd0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (exitcond4_i_i_reg_2153 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond3_i_i_reg_1959 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond1_i_i_reg_1929 == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond2_i_i_reg_2018 == 1'd0)))) begin
        m_axi_global_weight_V_RREADY = 1'b1;
    end else begin
        m_axi_global_weight_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        weight_burst_buf2_V_address0 = indvar7_i_i_fu_1314_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        weight_burst_buf2_V_address0 = indvar9_i_i_fu_1248_p1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        weight_burst_buf2_V_address0 = grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_address0;
    end else begin
        weight_burst_buf2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
        weight_burst_buf2_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state108)) begin
        weight_burst_buf2_V_ce0 = grp_weight_load_conv_wei_fu_522_weight_burst_buf2_V_ce0;
    end else begin
        weight_burst_buf2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        weight_burst_buf2_V_d0 = global_bias_V_addr_3_1_reg_2162;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        weight_burst_buf2_V_d0 = global_bias_V_addr_4_1_reg_2121;
    end else begin
        weight_burst_buf2_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1) & (exitcond4_i_i_reg_2153_pp5_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (exitcond5_i_i_reg_2112_pp4_iter1_reg == 1'd0)))) begin
        weight_burst_buf2_V_we0 = 1'b1;
    end else begin
        weight_burst_buf2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0) | (global_bias_V_offset_empty_n == 1'b0) | (global_weight_V_offset_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((fifo_config_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (ap_phi_mux_done_i_i_phi_fu_431_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (1'b1 == ap_CS_fsm_state11) & (ap_phi_mux_layer_start_i_i_phi_fu_419_p4 == 1'd0) & (done_i_i_reg_427 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if ((~(((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1))) & (layer_start_i_i_reg_415 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (done_i_i_reg_427 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if ((~(((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_out_V_V_full_n == 1'b0)) | ((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_in_V_V_empty_n == 1'b0))) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (norm_conv_en_fu_805_p2 == 1'd0) & (bias_en_fu_797_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else if (((norm_conv_en_fu_805_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26) & (bias_en_fu_797_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((tmp_25_i_i_fu_886_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond1_i_i_fu_959_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond1_i_i_fu_959_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond3_i_i_fu_1008_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond3_i_i_fu_1008_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (tmp_reg_1738 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (tmp_23_i_i_fu_1041_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (exitcond_i_i_fu_1051_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond2_i_i_fu_1131_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond2_i_i_fu_1131_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((1'b1 == ap_CS_fsm_state80) & (tmp_47_i_i_fu_1167_p2 == 1'd0) & (tmp_40_i_i_fu_1162_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else if (((tmp_47_i_i_fu_1167_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state80) & (tmp_40_i_i_fu_1162_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((exitcond5_i_i_fu_1237_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((exitcond5_i_i_fu_1237_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state93;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((ap_sig_ioackin_m_axi_global_weight_V_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state97))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((exitcond4_i_i_fu_1303_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((exitcond4_i_i_fu_1303_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            if (((1'b1 == ap_CS_fsm_state108) & (grp_weight_load_conv_wei_fu_522_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end
        end
        ap_ST_fsm_state109 : begin
            if (((1'b0 == ap_block_state109_on_subcall_done) & (1'b1 == ap_CS_fsm_state109))) begin
                ap_NS_fsm = ap_ST_fsm_state110;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign FILTER_S1_V_fu_698_p4 = {{tmp_V_1_fu_192[143:128]}};

assign LAYER_IN_NUM_HW_V_fu_725_p1 = tmp_V_3_fu_200[31:0];

assign LAYER_IN_NUM_V_fu_763_p1 = tmp_V_2_fu_196[31:0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd98];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state110 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state111 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd88];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_i_i_reg_1929 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond1_i_i_reg_1929 == 1'd0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond3_i_i_reg_1959 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (exitcond3_i_i_reg_1959 == 1'd0));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond2_i_i_reg_2018 == 1'd0));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (exitcond2_i_i_reg_2018 == 1'd0));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond5_i_i_reg_2112 == 1'd0));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (exitcond5_i_i_reg_2112 == 1'd0));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (exitcond4_i_i_reg_2153 == 1'd0));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((m_axi_global_weight_V_RVALID == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (exitcond4_i_i_reg_2153 == 1'd0));
end

always @ (*) begin
    ap_block_state1 = ((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0) | (global_bias_V_offset_empty_n == 1'b0) | (global_weight_V_offset_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state104_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state105_pp5_stage0_iter1 = ((m_axi_global_weight_V_RVALID == 1'b0) & (exitcond4_i_i_reg_2153 == 1'd0));
end

assign ap_block_state106_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state109_on_subcall_done = (((bias_en_reg_1858 == 1'd1) & (grp_weight_load_bias_wri_fu_542_ap_done == 1'b0)) | ((grp_weight_load_bias_wri_fu_542_ap_done == 1'b0) & (ap_predicate_op484_call_state109 == 1'b1)) | ((bias_en_reg_1858 == 1'd1) & (grp_weight_load_bias_wri_fu_531_ap_done == 1'b0)) | ((grp_weight_load_bias_wri_fu_531_ap_done == 1'b0) & (ap_predicate_op483_call_state109 == 1'b1)));
end

always @ (*) begin
    ap_block_state11 = (((fifo_config_out_V_V_full_n == 1'b0) & (ap_predicate_op171_write_state11 == 1'b1)) | ((fifo_config_in_V_V_empty_n == 1'b0) & (ap_predicate_op170_read_state11 == 1'b1)));
end

always @ (*) begin
    ap_block_state12 = ((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state13 = ((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state14 = ((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state15 = (((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_out_V_V_full_n == 1'b0)) | ((layer_start_i_i_reg_415 == 1'd1) & (fifo_config_in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2 = ((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0));
end

assign ap_block_state36_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state37_pp0_stage0_iter1 = ((m_axi_global_weight_V_RVALID == 1'b0) & (exitcond1_i_i_reg_1929 == 1'd0));
end

assign ap_block_state38_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0));
end

assign ap_block_state48_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state49_pp1_stage0_iter1 = ((m_axi_global_weight_V_RVALID == 1'b0) & (exitcond3_i_i_reg_1959 == 1'd0));
end

always @ (*) begin
    ap_block_state5 = ((fifo_config_out_V_V_full_n == 1'b0) | (fifo_config_in_V_V_empty_n == 1'b0));
end

assign ap_block_state50_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state63_pp3_stage0_iter1 = ((m_axi_global_weight_V_RVALID == 1'b0) & (exitcond2_i_i_reg_2018 == 1'd0));
end

assign ap_block_state64_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state91_pp4_stage0_iter1 = ((m_axi_global_weight_V_RVALID == 1'b0) & (exitcond5_i_i_reg_2112 == 1'd0));
end

assign ap_block_state92_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_phi_mux_done_i_i_phi_fu_431_p4 = done_i_i_reg_427;

assign ap_phi_mux_layer_start_i_i_phi_fu_419_p4 = layer_start_i_i_reg_415;

always @ (*) begin
    ap_predicate_op170_read_state11 = ((layer_start_i_i_reg_415 == 1'd1) & (done_i_i_reg_427 == 1'd0));
end

always @ (*) begin
    ap_predicate_op171_write_state11 = ((layer_start_i_i_reg_415 == 1'd1) & (done_i_i_reg_427 == 1'd0));
end

always @ (*) begin
    ap_predicate_op483_call_state109 = ((norm_conv_en_reg_1862 == 1'd1) & (bias_en_reg_1858 == 1'd0));
end

always @ (*) begin
    ap_predicate_op484_call_state109 = ((norm_conv_en_reg_1862 == 1'd1) & (bias_en_reg_1858 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign beta_conv_offset_1_i_fu_832_p3 = ((norm_depth_en_fu_801_p2[0:0] === 1'b1) ? beta_conv_offset_reg_1819 : p_0575_0_i_i_fu_817_p3);

assign beta_conv_offset_fu_755_p2 = (factor_i_i_fu_748_p3 + beta_depth_offset_reg_1776);

assign bias_en_fu_797_p2 = (tmp_reg_1738 & tmp_17_reg_1744);

assign done_be_i_i_fu_1603_p2 = (tmp9_i_i_fu_1597_p2 & tmp7_i_i_fu_1591_p2);

assign exitcond1_i_i_fu_959_p2 = ((ap_phi_mux_indvar1_i_i_phi_fu_455_p4 == tmp_34_add_i32_shr_i_reg_1910) ? 1'b1 : 1'b0);

assign exitcond2_i_i_fu_1131_p2 = ((ap_phi_mux_indvar_i_i_phi_fu_490_p4 == tmp_40_add_i32_shr_i_reg_2001) ? 1'b1 : 1'b0);

assign exitcond3_i_i_fu_1008_p2 = ((ap_phi_mux_indvar4_i_i_phi_fu_467_p4 == tmp_34_add_i32_shr_i_reg_1910) ? 1'b1 : 1'b0);

assign exitcond4_i_i_fu_1303_p2 = ((ap_phi_mux_indvar6_i_i_phi_fu_514_p4 == tmp_52_add_i32_shr_i_reg_2136) ? 1'b1 : 1'b0);

assign exitcond5_i_i_fu_1237_p2 = ((ap_phi_mux_indvar8_i_i_phi_fu_502_p4 == tmp_59_add_i32_shr_i_reg_2102) ? 1'b1 : 1'b0);

assign exitcond_i_i_fu_1051_p2 = ((i_i_i_reg_475 == 3'd4) ? 1'b1 : 1'b0);

assign factor_i_i_fu_748_p3 = {{tmp_21_reg_1814}, {1'd0}};

assign fifo_beta_conv_V_V_din = grp_weight_load_bias_wri_fu_531_fifo_bias_V_V_din;

assign fifo_conv_weight_V_V_din = grp_weight_load_conv_wei_fu_522_fifo_conv_weight_V_V_din;

assign fifo_gamma_conv_V_V_din = grp_weight_load_bias_wri_fu_542_fifo_bias_V_V_din;

assign gamma_conv_offset_1_fu_813_p2 = (LAYER_OUT_NUM_HW_V_reg_1808 + beta_depth_offset_reg_1776);

assign gamma_conv_offset_1_s_fu_839_p3 = ((norm_depth_en_fu_801_p2[0:0] === 1'b1) ? gamma_conv_offset_fu_809_p2 : p_i_i_fu_824_p3);

assign gamma_conv_offset_fu_809_p2 = (LAYER_OUT_NUM_HW_V_reg_1808 + beta_conv_offset_reg_1819);

assign global_bias_V_offset_2_fu_1081_p1 = global_bias_V_offset_1_reg_1666;

assign global_bias_V_offset_3_fu_909_p1 = global_bias_V_offset_1_reg_1666;

assign global_bias_offset_1_fu_891_p2 = ($signed(i_op_assign_i_i_reg_367) + $signed(beta_conv_offset_1_i_reg_1866));

assign global_bias_offset_2_fu_975_p2 = ($signed(i_op_assign_i_i_reg_367) + $signed(gamma_conv_offset_1_s_reg_1871));

assign global_bias_offset_fu_1046_p2 = ($signed(beta_depth_offset_reg_1776) + $signed(i_op_assign_i_i_reg_367));

assign global_weight_V_offs_1_fu_1257_p1 = global_weight_V_offs_reg_1660;

assign global_weight_V_offs_2_fu_1204_p1 = global_weight_V_offs_reg_1660;

assign global_weight_offset_fu_1158_p2 = (weight_offset2_1_reg_1876 + tmp2_i_i_reg_2058);

assign grp_fu_1032_p1 = grp_fu_1032_p10;

assign grp_fu_1032_p10 = LAYER_OUT_NUM_T_V_reg_1719;

assign grp_fu_1609_p0 = tmp_21_i_i_fu_718_p1;

assign grp_fu_1609_p1 = tmp_21_i_i_fu_718_p1;

assign grp_fu_1615_p0 = tmp_36_i_i_fu_1147_p1;

assign grp_fu_1615_p1 = tmp_36_i_i_fu_1147_p1;

assign grp_fu_1621_p0 = grp_fu_1621_p00;

assign grp_fu_1621_p00 = p_shl1_i_i_fu_1183_p3;

assign grp_fu_1621_p1 = grp_fu_1621_p10;

assign grp_fu_1621_p10 = p_shl_i_i_fu_1172_p3;

assign grp_fu_1621_p2 = tmp_38_i_i_reg_1973;

assign grp_fu_1621_p3 = 32'd63;

assign grp_fu_1630_p0 = grp_fu_1630_p00;

assign grp_fu_1630_p00 = LAYER_IN_NUM_T_V_reg_1709;

assign grp_fu_1630_p1 = grp_fu_1630_p10;

assign grp_fu_1630_p10 = LAYER_OUT_NUM_T_V_reg_1719;

assign grp_fu_573_p4 = {{global_weight_offset_reg_2063[31:4]}};

assign grp_fu_743_p0 = tmp_V_3_fu_200[31:0];

assign grp_weight_load_bias_wri_fu_531_ap_start = grp_weight_load_bias_wri_fu_531_ap_start_reg;

assign grp_weight_load_bias_wri_fu_542_ap_start = grp_weight_load_bias_wri_fu_542_ap_start_reg;

assign grp_weight_load_conv_wei_fu_522_ap_start = grp_weight_load_conv_wei_fu_522_ap_start_reg;

assign i_fu_1057_p2 = (i_i_i_reg_475 + 3'd1);

assign in_h_iter_fu_1328_p2 = (in_h_iter_i_i_reg_379 + LAYER_IN_H_T_V_reg_1728);

assign in_num_iter_fu_1322_p2 = (tmp_52_i_i_fu_1319_p1 + op_assign_i_i_reg_355);

assign in_w_iter_fu_1333_p2 = (in_w_iter_i_i_reg_391 + LAYER_IN_W_T_V_reg_1733);

assign indvar2_i_i_fu_970_p1 = indvar1_i_i_reg_451_pp0_iter1_reg;

assign indvar3_i_i_fu_1142_p1 = indvar_i_i_reg_486_pp3_iter1_reg;

assign indvar5_i_i_fu_1019_p1 = indvar4_i_i_reg_463_pp1_iter1_reg;

assign indvar7_i_i_fu_1314_p1 = indvar6_i_i_reg_510_pp5_iter1_reg;

assign indvar9_i_i_fu_1248_p1 = indvar8_i_i_reg_498_pp4_iter1_reg;

assign indvar_next1_i_i_fu_964_p2 = (ap_phi_mux_indvar1_i_i_phi_fu_455_p4 + 13'd1);

assign indvar_next2_i_i_fu_1013_p2 = (ap_phi_mux_indvar4_i_i_phi_fu_467_p4 + 13'd1);

assign indvar_next3_i_i_fu_1308_p2 = (ap_phi_mux_indvar6_i_i_phi_fu_514_p4 + 26'd1);

assign indvar_next4_i_i_fu_1242_p2 = (ap_phi_mux_indvar8_i_i_phi_fu_502_p4 + 26'd1);

assign indvar_next_i_i_fu_1136_p2 = (ap_phi_mux_indvar_i_i_phi_fu_490_p4 + 13'd1);

assign layer_iter_fu_1363_p2 = (layer_iter_i_i_reg_403 + 32'd1);

assign layer_start_be_i_i_fu_1575_p2 = (sel_tmp3_i_i_fu_1569_p2 | layer_start_1_i_i_reg_438);

assign lhs_V_1_fu_857_p1 = op_assign_i_i_reg_355;

assign lhs_V_fu_870_p1 = op_assign_i_i_reg_355;

assign m_axi_global_weight_V_ARBURST = 2'd0;

assign m_axi_global_weight_V_ARCACHE = 4'd0;

assign m_axi_global_weight_V_ARID = 1'd0;

assign m_axi_global_weight_V_ARLOCK = 2'd0;

assign m_axi_global_weight_V_ARPROT = 3'd0;

assign m_axi_global_weight_V_ARQOS = 4'd0;

assign m_axi_global_weight_V_ARREGION = 4'd0;

assign m_axi_global_weight_V_ARSIZE = 3'd0;

assign m_axi_global_weight_V_ARUSER = 1'd0;

assign m_axi_global_weight_V_AWADDR = 64'd0;

assign m_axi_global_weight_V_AWBURST = 2'd0;

assign m_axi_global_weight_V_AWCACHE = 4'd0;

assign m_axi_global_weight_V_AWID = 1'd0;

assign m_axi_global_weight_V_AWLEN = 32'd0;

assign m_axi_global_weight_V_AWLOCK = 2'd0;

assign m_axi_global_weight_V_AWPROT = 3'd0;

assign m_axi_global_weight_V_AWQOS = 4'd0;

assign m_axi_global_weight_V_AWREGION = 4'd0;

assign m_axi_global_weight_V_AWSIZE = 3'd0;

assign m_axi_global_weight_V_AWUSER = 1'd0;

assign m_axi_global_weight_V_AWVALID = 1'b0;

assign m_axi_global_weight_V_BREADY = 1'b0;

assign m_axi_global_weight_V_WDATA = 512'd0;

assign m_axi_global_weight_V_WID = 1'd0;

assign m_axi_global_weight_V_WLAST = 1'b0;

assign m_axi_global_weight_V_WSTRB = 64'd0;

assign m_axi_global_weight_V_WUSER = 1'd0;

assign m_axi_global_weight_V_WVALID = 1'b0;

assign newSel10_i_i_fu_1514_p3 = ((or_cond2_i_i_fu_1439_p2[0:0] === 1'b1) ? newSel9_i_i_fu_1506_p3 : 32'd0);

assign newSel11_i_i_fu_1522_p3 = ((tmp_58_i_i_fu_1381_p2[0:0] === 1'b1) ? 32'd0 : layer_iter_reg_2216);

assign newSel12_i_i_fu_1529_p3 = ((or_cond2_i_i_fu_1439_p2[0:0] === 1'b1) ? layer_iter_i_i_reg_403 : newSel11_i_i_fu_1522_p3);

assign newSel1_i_i_fu_1445_p3 = ((or_cond2_i_i_fu_1439_p2[0:0] === 1'b1) ? newSel_i_i_fu_1432_p3 : 32'd0);

assign newSel2_i_i_fu_1453_p3 = ((sel_tmp8_i_i_fu_1410_p2[0:0] === 1'b1) ? out_num_iter_reg_2185 : i_op_assign_i_i_reg_367);

assign newSel3_i_i_fu_1460_p3 = ((or_cond_i_i_fu_1415_p2[0:0] === 1'b1) ? newSel2_i_i_fu_1453_p3 : i_op_assign_i_i_reg_367);

assign newSel4_i_i_fu_1468_p3 = ((or_cond2_i_i_fu_1439_p2[0:0] === 1'b1) ? newSel3_i_i_fu_1460_p3 : 32'd0);

assign newSel5_i_i_fu_1476_p3 = ((sel_tmp2_i_i_fu_1390_p2[0:0] === 1'b1) ? in_h_iter_reg_2173 : in_h_iter_i_i_reg_379);

assign newSel6_i_i_fu_1483_p3 = ((or_cond_i_i_fu_1415_p2[0:0] === 1'b1) ? 32'd0 : newSel5_i_i_fu_1476_p3);

assign newSel7_i_i_fu_1491_p3 = ((or_cond2_i_i_fu_1439_p2[0:0] === 1'b1) ? newSel6_i_i_fu_1483_p3 : 32'd0);

assign newSel8_i_i_fu_1499_p3 = ((sel_tmp8_i_i_fu_1410_p2[0:0] === 1'b1) ? 32'd0 : in_w_iter_reg_2179);

assign newSel9_i_i_fu_1506_p3 = ((or_cond_i_i_fu_1415_p2[0:0] === 1'b1) ? newSel8_i_i_fu_1499_p3 : in_w_iter_i_i_reg_391);

assign newSel_i_i_fu_1432_p3 = ((tmp_5_i_i_fu_1426_p2[0:0] === 1'b1) ? 32'd0 : in_num_iter_reg_2167);

assign norm_conv_en_fu_805_p2 = (tmp_reg_1738 & tmp_20_reg_1760);

assign norm_depth_en_fu_801_p2 = (tmp_19_reg_1755 & tmp_18_reg_1749);

assign not_sel_tmp1_i_i_fu_1558_p2 = (tmp_58_not_i_i_fu_1553_p2 | sel_tmp13_demorgan_i_reg_2228);

assign not_sel_tmp2_i_i_fu_1586_p2 = (tmp_55_not_i_i_fu_1581_p2 | tmp_53_i_i_reg_2191);

assign not_sel_tmp_i_i_fu_1548_p2 = (tmp_56_not_i_i_fu_1543_p2 | sel_tmp6_demorgan_i_s_reg_2222);

assign or_cond1_i_i_fu_1421_p2 = (tmp_53_i_i_reg_2191 | sel_tmp2_i_i_fu_1390_p2);

assign or_cond2_i_i_fu_1439_p2 = (or_cond_i_i_fu_1415_p2 | or_cond1_i_i_fu_1421_p2);

assign or_cond_i_i_fu_1415_p2 = (sel_tmp8_i_i_fu_1410_p2 | sel_tmp7_i_i_fu_1400_p2);

assign out_num_iter_fu_1341_p2 = ($signed(tmp_56_i_i_fu_1338_p1) + $signed(i_op_assign_i_i_reg_367));

assign p_0575_0_i_i_fu_817_p3 = ((norm_conv_en_fu_805_p2[0:0] === 1'b1) ? beta_depth_offset_reg_1776 : 32'd0);

assign p_i_i_fu_824_p3 = ((norm_conv_en_fu_805_p2[0:0] === 1'b1) ? gamma_conv_offset_1_fu_813_p2 : 32'd0);

assign p_shl1_i_i_fu_1183_p3 = {{LAYER_IN_NUM_T_V_reg_1709}, {2'd0}};

assign p_shl_i_i_fu_1172_p3 = {{LAYER_IN_NUM_T_V_reg_1709}, {5'd0}};

assign ret_V_1_fu_864_p2 = (lhs_V_1_fu_857_p1 + rhs_V_1_fu_861_p1);

assign ret_V_fu_877_p2 = (lhs_V_fu_870_p1 + rhs_V_fu_874_p1);

assign rhs_V_1_fu_861_p1 = LAYER_IN_NUM_T_V_reg_1709;

assign rhs_V_fu_874_p1 = LAYER_IN_NUM_T_V_reg_1709;

assign sel_tmp13_demorgan_i_fu_1375_p2 = (tmp_55_i_i_fu_1355_p2 | sel_tmp6_demorgan_i_s_fu_1369_p2);

assign sel_tmp1_i_i_fu_1385_p2 = (tmp_53_i_i_reg_2191 ^ 1'd1);

assign sel_tmp2_i_i_fu_1390_p2 = (tmp_54_i_i_reg_2198 & sel_tmp1_i_i_fu_1385_p2);

assign sel_tmp3_i_i_fu_1569_p2 = (tmp6_i_i_fu_1563_p2 & sel_tmp9_i_i_fu_1537_p2);

assign sel_tmp6_demorgan_i_s_fu_1369_p2 = (tmp_54_i_i_fu_1351_p2 | tmp_53_i_i_fu_1347_p2);

assign sel_tmp6_i_i_fu_1395_p2 = (sel_tmp6_demorgan_i_s_reg_2222 ^ 1'd1);

assign sel_tmp7_i_i_fu_1400_p2 = (tmp_55_i_i_reg_2204 & sel_tmp6_i_i_fu_1395_p2);

assign sel_tmp8_i_i_fu_1410_p2 = (tmp_57_i_i_reg_2210 & sel_tmp_i_i_fu_1405_p2);

assign sel_tmp9_i_i_fu_1537_p2 = (sel_tmp2_i_i_fu_1390_p2 ^ sel_tmp1_i_i_fu_1385_p2);

assign sel_tmp_i_i_fu_1405_p2 = (sel_tmp13_demorgan_i_reg_2228 ^ 1'd1);

assign start_out = real_start;

assign sum1_cast_i_i_fu_945_p1 = sum1_i_i_reg_1905;

assign sum1_i_i_fu_912_p2 = (global_bias_V_offset_3_fu_909_p1 + tmp_27_cast_i_i_fu_906_p1);

assign sum3_cast_i_i_fu_998_p1 = sum3_i_i_reg_1948;

assign sum3_i_i_fu_993_p2 = (global_bias_V_offset_3_reg_1900 + tmp_35_cast_i_i_fu_990_p1);

assign sum4_cast_i_i_fu_1213_p1 = sum4_i_i_reg_2086;

assign sum4_i_i_fu_1207_p2 = (global_weight_V_offs_2_fu_1204_p1 + tmp_49_cast_i_i_fu_1200_p1);

assign sum9_cast_i_i_fu_1117_p1 = sum9_i_i_reg_1996;

assign sum9_i_i_fu_1084_p2 = (global_bias_V_offset_2_fu_1081_p1 + tmp_31_cast_i_i_fu_1077_p1);

assign sum_cast_i_i_fu_1289_p1 = sum_i_i_reg_2126;

assign sum_i_i_fu_1260_p2 = (global_weight_V_offs_1_fu_1257_p1 + tmp_42_cast_i_i_fu_1253_p1);

assign tmp6_i_i_fu_1563_p2 = (not_sel_tmp_i_i_fu_1548_p2 & not_sel_tmp1_i_i_fu_1558_p2);

assign tmp7_i_i_fu_1591_p2 = (tmp_58_i_i_fu_1381_p2 & sel_tmp1_i_i_fu_1385_p2);

assign tmp9_i_i_fu_1597_p2 = (tmp6_i_i_fu_1563_p2 & not_sel_tmp2_i_i_fu_1586_p2);

assign tmp_21_fu_739_p1 = tmp_V_3_fu_200[30:0];

assign tmp_21_i_i_fu_718_p1 = FILTER_S1_V_fu_698_p4;

assign tmp_22_i_i_fu_1038_p1 = LAYER_IN_NUM_V_reg_1836;

assign tmp_23_fu_1068_p4 = {{global_bias_offset_reg_1983[31:4]}};

assign tmp_23_i_i_fu_1041_p2 = ((ret_V_reg_1886 < tmp_22_i_i_fu_1038_p1) ? 1'b1 : 1'b0);

assign tmp_24_i_i_fu_883_p1 = LAYER_IN_NUM_V_reg_1836;

assign tmp_25_i_i_fu_886_p2 = ((ret_V_1_reg_1881 < tmp_24_i_i_fu_883_p1) ? 1'b1 : 1'b0);

assign tmp_27_cast_i_i_fu_906_p1 = tmp_22_reg_1895;

assign tmp_29_i_i_fu_918_p3 = {{LAYER_OUT_NUM_T_V_reg_1719}, {2'd0}};

assign tmp_31_cast_i_i_fu_1077_p1 = tmp_23_fu_1068_p4;

assign tmp_32_i_i_fu_1090_p3 = {{LAYER_OUT_NUM_T_V_reg_1719}, {2'd0}};

assign tmp_33_i_i_fu_1063_p1 = i_i_i_reg_475;

assign tmp_34_add_i32_shr_c_fu_955_p1 = tmp_34_add_i32_shr_i_reg_1910;

assign tmp_34_add_i_i_i_fu_929_p2 = (tmp_34_cast_i_i_fu_925_p1 + 19'd63);

assign tmp_34_cast_i_i_fu_925_p1 = tmp_29_i_i_fu_918_p3;

assign tmp_35_cast_i_i_fu_990_p1 = tmp_24_reg_1943;

assign tmp_36_i_i_fu_1147_p1 = FILTER_S2_V_reg_1784;

assign tmp_38_i_i_fu_1029_p1 = LAYER_OUT_NUM_T_V_reg_1719;

assign tmp_40_add_i32_shr_c_fu_1127_p1 = tmp_40_add_i32_shr_i_reg_2001;

assign tmp_40_add_i_i_fu_1101_p2 = (tmp_40_cast_i_i_fu_1097_p1 + 19'd63);

assign tmp_40_cast_i_i_fu_1097_p1 = tmp_32_i_i_fu_1090_p3;

assign tmp_40_i_i_fu_1162_p2 = ((FILTER_S2_V_reg_1784 == 16'd1) ? 1'b1 : 1'b0);

assign tmp_42_cast_i_i_fu_1253_p1 = grp_fu_573_p4;

assign tmp_46_i_i_fu_1266_p3 = {{tmp_44_i_i_reg_2131}, {2'd0}};

assign tmp_47_i_i_fu_1167_p2 = ((FILTER_S2_V_reg_1784 == 16'd3) ? 1'b1 : 1'b0);

assign tmp_49_cast_i_i_fu_1200_p1 = grp_fu_573_p4;

assign tmp_52_add_i_i_fu_1273_p2 = (tmp_46_i_i_fu_1266_p3 + 32'd63);

assign tmp_52_i_i_fu_1319_p1 = LAYER_IN_NUM_T_V_reg_1709;

assign tmp_53_i_i_fu_1347_p2 = ((in_num_iter_reg_2167 < LAYER_IN_NUM_V_reg_1836) ? 1'b1 : 1'b0);

assign tmp_54_i_i_fu_1351_p2 = ((in_h_iter_reg_2173 < LAYER_IN_H_V_reg_1848) ? 1'b1 : 1'b0);

assign tmp_55_i_i_fu_1355_p2 = ((in_w_iter_reg_2179 < LAYER_IN_W_V_reg_1853) ? 1'b1 : 1'b0);

assign tmp_55_not_i_i_fu_1581_p2 = (tmp_54_i_i_reg_2198 ^ 1'd1);

assign tmp_56_i_i_fu_1338_p1 = LAYER_OUT_NUM_T_V_reg_1719;

assign tmp_56_not_i_i_fu_1543_p2 = (tmp_55_i_i_reg_2204 ^ 1'd1);

assign tmp_57_i_i_fu_1359_p2 = ((out_num_iter_reg_2185 < LAYER_OUT_NUM_V_reg_1843) ? 1'b1 : 1'b0);

assign tmp_58_i_i_fu_1381_p2 = ((layer_iter_reg_2216 == LAYER_BATCH_V_reg_1692) ? 1'b1 : 1'b0);

assign tmp_58_not_i_i_fu_1553_p2 = (tmp_57_i_i_reg_2210 ^ 1'd1);

assign tmp_59_add_i32_shr_i_fu_1223_p4 = {{tmp_59_add_i_i_reg_2091[31:6]}};

assign tmp_5_i_i_fu_1426_p2 = (sel_tmp2_i_i_fu_1390_p2 | or_cond_i_i_fu_1415_p2);

assign tmp_64_i_i_fu_1299_p1 = tmp_52_add_i32_shr_i_reg_2136;

assign tmp_69_i_i_fu_1232_p1 = tmp_59_add_i32_shr_i_fu_1223_p4;

assign tmp_i_i_fu_1150_p2 = (tmp_39_i_i_reg_2043 + tmp_37_i_i_reg_2038);

assign weight_offset2_1_fu_851_p3 = ((tmp_18_reg_1749[0:0] === 1'b1) ? weight_offset2_fu_847_p2 : weight_offset2_2_reg_1770);

assign weight_offset2_fu_847_p2 = (weight_offset2_2_reg_1770 + p_1_i_i_reg_1825);

always @ (posedge ap_clk) begin
    global_bias_V_offset_3_reg_1900[58] <= 1'b0;
    tmp_34_add_i32_shr_c_reg_1923[31:13] <= 19'b0000000000000000000;
    tmp_38_i_i_reg_1973[31:16] <= 16'b0000000000000000;
end

endmodule //weight_load
