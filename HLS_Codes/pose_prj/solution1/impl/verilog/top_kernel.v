// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top_kernel,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx690tffg1761-2,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.349000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=586,HLS_SYN_DSP=293,HLS_SYN_FF=125322,HLS_SYN_LUT=77566,HLS_VERSION=2018_3}" *)

module top_kernel (
        ap_clk,
        ap_rst_n,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        m_axi_gmem3_AWVALID,
        m_axi_gmem3_AWREADY,
        m_axi_gmem3_AWADDR,
        m_axi_gmem3_AWID,
        m_axi_gmem3_AWLEN,
        m_axi_gmem3_AWSIZE,
        m_axi_gmem3_AWBURST,
        m_axi_gmem3_AWLOCK,
        m_axi_gmem3_AWCACHE,
        m_axi_gmem3_AWPROT,
        m_axi_gmem3_AWQOS,
        m_axi_gmem3_AWREGION,
        m_axi_gmem3_AWUSER,
        m_axi_gmem3_WVALID,
        m_axi_gmem3_WREADY,
        m_axi_gmem3_WDATA,
        m_axi_gmem3_WSTRB,
        m_axi_gmem3_WLAST,
        m_axi_gmem3_WID,
        m_axi_gmem3_WUSER,
        m_axi_gmem3_ARVALID,
        m_axi_gmem3_ARREADY,
        m_axi_gmem3_ARADDR,
        m_axi_gmem3_ARID,
        m_axi_gmem3_ARLEN,
        m_axi_gmem3_ARSIZE,
        m_axi_gmem3_ARBURST,
        m_axi_gmem3_ARLOCK,
        m_axi_gmem3_ARCACHE,
        m_axi_gmem3_ARPROT,
        m_axi_gmem3_ARQOS,
        m_axi_gmem3_ARREGION,
        m_axi_gmem3_ARUSER,
        m_axi_gmem3_RVALID,
        m_axi_gmem3_RREADY,
        m_axi_gmem3_RDATA,
        m_axi_gmem3_RLAST,
        m_axi_gmem3_RID,
        m_axi_gmem3_RUSER,
        m_axi_gmem3_RRESP,
        m_axi_gmem3_BVALID,
        m_axi_gmem3_BREADY,
        m_axi_gmem3_BRESP,
        m_axi_gmem3_BID,
        m_axi_gmem3_BUSER,
        m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST,
        m_axi_gmem2_WID,
        m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY,
        m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID,
        m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA,
        m_axi_gmem2_RLAST,
        m_axi_gmem2_RID,
        m_axi_gmem2_RUSER,
        m_axi_gmem2_RRESP,
        m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP,
        m_axi_gmem2_BID,
        m_axi_gmem2_BUSER,
        m_axi_gcontrol_AWVALID,
        m_axi_gcontrol_AWREADY,
        m_axi_gcontrol_AWADDR,
        m_axi_gcontrol_AWID,
        m_axi_gcontrol_AWLEN,
        m_axi_gcontrol_AWSIZE,
        m_axi_gcontrol_AWBURST,
        m_axi_gcontrol_AWLOCK,
        m_axi_gcontrol_AWCACHE,
        m_axi_gcontrol_AWPROT,
        m_axi_gcontrol_AWQOS,
        m_axi_gcontrol_AWREGION,
        m_axi_gcontrol_AWUSER,
        m_axi_gcontrol_WVALID,
        m_axi_gcontrol_WREADY,
        m_axi_gcontrol_WDATA,
        m_axi_gcontrol_WSTRB,
        m_axi_gcontrol_WLAST,
        m_axi_gcontrol_WID,
        m_axi_gcontrol_WUSER,
        m_axi_gcontrol_ARVALID,
        m_axi_gcontrol_ARREADY,
        m_axi_gcontrol_ARADDR,
        m_axi_gcontrol_ARID,
        m_axi_gcontrol_ARLEN,
        m_axi_gcontrol_ARSIZE,
        m_axi_gcontrol_ARBURST,
        m_axi_gcontrol_ARLOCK,
        m_axi_gcontrol_ARCACHE,
        m_axi_gcontrol_ARPROT,
        m_axi_gcontrol_ARQOS,
        m_axi_gcontrol_ARREGION,
        m_axi_gcontrol_ARUSER,
        m_axi_gcontrol_RVALID,
        m_axi_gcontrol_RREADY,
        m_axi_gcontrol_RDATA,
        m_axi_gcontrol_RLAST,
        m_axi_gcontrol_RID,
        m_axi_gcontrol_RUSER,
        m_axi_gcontrol_RRESP,
        m_axi_gcontrol_BVALID,
        m_axi_gcontrol_BREADY,
        m_axi_gcontrol_BRESP,
        m_axi_gcontrol_BID,
        m_axi_gcontrol_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM3_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM3_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM3_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM3_USER_VALUE = 0;
parameter    C_M_AXI_GMEM3_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM3_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM2_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM2_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM2_USER_VALUE = 0;
parameter    C_M_AXI_GMEM2_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM2_CACHE_VALUE = 3;
parameter    C_M_AXI_GCONTROL_ID_WIDTH = 1;
parameter    C_M_AXI_GCONTROL_ADDR_WIDTH = 64;
parameter    C_M_AXI_GCONTROL_DATA_WIDTH = 32;
parameter    C_M_AXI_GCONTROL_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GCONTROL_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GCONTROL_WUSER_WIDTH = 1;
parameter    C_M_AXI_GCONTROL_RUSER_WIDTH = 1;
parameter    C_M_AXI_GCONTROL_BUSER_WIDTH = 1;
parameter    C_M_AXI_GCONTROL_USER_VALUE = 0;
parameter    C_M_AXI_GCONTROL_PROT_VALUE = 0;
parameter    C_M_AXI_GCONTROL_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM3_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_GMEM2_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_GCONTROL_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
output   m_axi_gmem3_AWVALID;
input   m_axi_gmem3_AWREADY;
output  [C_M_AXI_GMEM3_ADDR_WIDTH - 1:0] m_axi_gmem3_AWADDR;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_AWID;
output  [7:0] m_axi_gmem3_AWLEN;
output  [2:0] m_axi_gmem3_AWSIZE;
output  [1:0] m_axi_gmem3_AWBURST;
output  [1:0] m_axi_gmem3_AWLOCK;
output  [3:0] m_axi_gmem3_AWCACHE;
output  [2:0] m_axi_gmem3_AWPROT;
output  [3:0] m_axi_gmem3_AWQOS;
output  [3:0] m_axi_gmem3_AWREGION;
output  [C_M_AXI_GMEM3_AWUSER_WIDTH - 1:0] m_axi_gmem3_AWUSER;
output   m_axi_gmem3_WVALID;
input   m_axi_gmem3_WREADY;
output  [C_M_AXI_GMEM3_DATA_WIDTH - 1:0] m_axi_gmem3_WDATA;
output  [C_M_AXI_GMEM3_WSTRB_WIDTH - 1:0] m_axi_gmem3_WSTRB;
output   m_axi_gmem3_WLAST;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_WID;
output  [C_M_AXI_GMEM3_WUSER_WIDTH - 1:0] m_axi_gmem3_WUSER;
output   m_axi_gmem3_ARVALID;
input   m_axi_gmem3_ARREADY;
output  [C_M_AXI_GMEM3_ADDR_WIDTH - 1:0] m_axi_gmem3_ARADDR;
output  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_ARID;
output  [7:0] m_axi_gmem3_ARLEN;
output  [2:0] m_axi_gmem3_ARSIZE;
output  [1:0] m_axi_gmem3_ARBURST;
output  [1:0] m_axi_gmem3_ARLOCK;
output  [3:0] m_axi_gmem3_ARCACHE;
output  [2:0] m_axi_gmem3_ARPROT;
output  [3:0] m_axi_gmem3_ARQOS;
output  [3:0] m_axi_gmem3_ARREGION;
output  [C_M_AXI_GMEM3_ARUSER_WIDTH - 1:0] m_axi_gmem3_ARUSER;
input   m_axi_gmem3_RVALID;
output   m_axi_gmem3_RREADY;
input  [C_M_AXI_GMEM3_DATA_WIDTH - 1:0] m_axi_gmem3_RDATA;
input   m_axi_gmem3_RLAST;
input  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_RID;
input  [C_M_AXI_GMEM3_RUSER_WIDTH - 1:0] m_axi_gmem3_RUSER;
input  [1:0] m_axi_gmem3_RRESP;
input   m_axi_gmem3_BVALID;
output   m_axi_gmem3_BREADY;
input  [1:0] m_axi_gmem3_BRESP;
input  [C_M_AXI_GMEM3_ID_WIDTH - 1:0] m_axi_gmem3_BID;
input  [C_M_AXI_GMEM3_BUSER_WIDTH - 1:0] m_axi_gmem3_BUSER;
output   m_axi_gmem2_AWVALID;
input   m_axi_gmem2_AWREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_AWADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_AWID;
output  [7:0] m_axi_gmem2_AWLEN;
output  [2:0] m_axi_gmem2_AWSIZE;
output  [1:0] m_axi_gmem2_AWBURST;
output  [1:0] m_axi_gmem2_AWLOCK;
output  [3:0] m_axi_gmem2_AWCACHE;
output  [2:0] m_axi_gmem2_AWPROT;
output  [3:0] m_axi_gmem2_AWQOS;
output  [3:0] m_axi_gmem2_AWREGION;
output  [C_M_AXI_GMEM2_AWUSER_WIDTH - 1:0] m_axi_gmem2_AWUSER;
output   m_axi_gmem2_WVALID;
input   m_axi_gmem2_WREADY;
output  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_WDATA;
output  [C_M_AXI_GMEM2_WSTRB_WIDTH - 1:0] m_axi_gmem2_WSTRB;
output   m_axi_gmem2_WLAST;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_WID;
output  [C_M_AXI_GMEM2_WUSER_WIDTH - 1:0] m_axi_gmem2_WUSER;
output   m_axi_gmem2_ARVALID;
input   m_axi_gmem2_ARREADY;
output  [C_M_AXI_GMEM2_ADDR_WIDTH - 1:0] m_axi_gmem2_ARADDR;
output  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_ARID;
output  [7:0] m_axi_gmem2_ARLEN;
output  [2:0] m_axi_gmem2_ARSIZE;
output  [1:0] m_axi_gmem2_ARBURST;
output  [1:0] m_axi_gmem2_ARLOCK;
output  [3:0] m_axi_gmem2_ARCACHE;
output  [2:0] m_axi_gmem2_ARPROT;
output  [3:0] m_axi_gmem2_ARQOS;
output  [3:0] m_axi_gmem2_ARREGION;
output  [C_M_AXI_GMEM2_ARUSER_WIDTH - 1:0] m_axi_gmem2_ARUSER;
input   m_axi_gmem2_RVALID;
output   m_axi_gmem2_RREADY;
input  [C_M_AXI_GMEM2_DATA_WIDTH - 1:0] m_axi_gmem2_RDATA;
input   m_axi_gmem2_RLAST;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_RID;
input  [C_M_AXI_GMEM2_RUSER_WIDTH - 1:0] m_axi_gmem2_RUSER;
input  [1:0] m_axi_gmem2_RRESP;
input   m_axi_gmem2_BVALID;
output   m_axi_gmem2_BREADY;
input  [1:0] m_axi_gmem2_BRESP;
input  [C_M_AXI_GMEM2_ID_WIDTH - 1:0] m_axi_gmem2_BID;
input  [C_M_AXI_GMEM2_BUSER_WIDTH - 1:0] m_axi_gmem2_BUSER;
output   m_axi_gcontrol_AWVALID;
input   m_axi_gcontrol_AWREADY;
output  [C_M_AXI_GCONTROL_ADDR_WIDTH - 1:0] m_axi_gcontrol_AWADDR;
output  [C_M_AXI_GCONTROL_ID_WIDTH - 1:0] m_axi_gcontrol_AWID;
output  [7:0] m_axi_gcontrol_AWLEN;
output  [2:0] m_axi_gcontrol_AWSIZE;
output  [1:0] m_axi_gcontrol_AWBURST;
output  [1:0] m_axi_gcontrol_AWLOCK;
output  [3:0] m_axi_gcontrol_AWCACHE;
output  [2:0] m_axi_gcontrol_AWPROT;
output  [3:0] m_axi_gcontrol_AWQOS;
output  [3:0] m_axi_gcontrol_AWREGION;
output  [C_M_AXI_GCONTROL_AWUSER_WIDTH - 1:0] m_axi_gcontrol_AWUSER;
output   m_axi_gcontrol_WVALID;
input   m_axi_gcontrol_WREADY;
output  [C_M_AXI_GCONTROL_DATA_WIDTH - 1:0] m_axi_gcontrol_WDATA;
output  [C_M_AXI_GCONTROL_WSTRB_WIDTH - 1:0] m_axi_gcontrol_WSTRB;
output   m_axi_gcontrol_WLAST;
output  [C_M_AXI_GCONTROL_ID_WIDTH - 1:0] m_axi_gcontrol_WID;
output  [C_M_AXI_GCONTROL_WUSER_WIDTH - 1:0] m_axi_gcontrol_WUSER;
output   m_axi_gcontrol_ARVALID;
input   m_axi_gcontrol_ARREADY;
output  [C_M_AXI_GCONTROL_ADDR_WIDTH - 1:0] m_axi_gcontrol_ARADDR;
output  [C_M_AXI_GCONTROL_ID_WIDTH - 1:0] m_axi_gcontrol_ARID;
output  [7:0] m_axi_gcontrol_ARLEN;
output  [2:0] m_axi_gcontrol_ARSIZE;
output  [1:0] m_axi_gcontrol_ARBURST;
output  [1:0] m_axi_gcontrol_ARLOCK;
output  [3:0] m_axi_gcontrol_ARCACHE;
output  [2:0] m_axi_gcontrol_ARPROT;
output  [3:0] m_axi_gcontrol_ARQOS;
output  [3:0] m_axi_gcontrol_ARREGION;
output  [C_M_AXI_GCONTROL_ARUSER_WIDTH - 1:0] m_axi_gcontrol_ARUSER;
input   m_axi_gcontrol_RVALID;
output   m_axi_gcontrol_RREADY;
input  [C_M_AXI_GCONTROL_DATA_WIDTH - 1:0] m_axi_gcontrol_RDATA;
input   m_axi_gcontrol_RLAST;
input  [C_M_AXI_GCONTROL_ID_WIDTH - 1:0] m_axi_gcontrol_RID;
input  [C_M_AXI_GCONTROL_RUSER_WIDTH - 1:0] m_axi_gcontrol_RUSER;
input  [1:0] m_axi_gcontrol_RRESP;
input   m_axi_gcontrol_BVALID;
output   m_axi_gcontrol_BREADY;
input  [1:0] m_axi_gcontrol_BRESP;
input  [C_M_AXI_GCONTROL_ID_WIDTH - 1:0] m_axi_gcontrol_BID;
input  [C_M_AXI_GCONTROL_BUSER_WIDTH - 1:0] m_axi_gcontrol_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] global_cin_V;
wire   [63:0] global_prev_cin_V;
wire   [63:0] global_cout_V;
wire   [63:0] global_weight_V;
wire   [63:0] global_bias_V;
wire   [63:0] layer_config_V;
reg    gcontrol_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    gcontrol_blk_n_R;
wire    ap_CS_fsm_state10;
wire   [0:0] exitcond6_fu_363_p2;
reg    gmem1_AWVALID;
wire    gmem1_AWREADY;
reg    gmem1_WVALID;
wire    gmem1_WREADY;
reg    gmem1_ARVALID;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
reg    gmem1_RREADY;
wire   [511:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
reg    gmem1_BREADY;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
wire    gmem2_AWREADY;
wire    gmem2_WREADY;
reg    gmem2_ARVALID;
wire    gmem2_ARREADY;
wire    gmem2_RVALID;
reg    gmem2_RREADY;
wire   [511:0] gmem2_RDATA;
wire    gmem2_RLAST;
wire   [0:0] gmem2_RID;
wire   [0:0] gmem2_RUSER;
wire   [1:0] gmem2_RRESP;
wire    gmem2_BVALID;
wire   [1:0] gmem2_BRESP;
wire   [0:0] gmem2_BID;
wire   [0:0] gmem2_BUSER;
wire    gcontrol_AWREADY;
wire    gcontrol_WREADY;
reg    gcontrol_ARVALID;
wire    gcontrol_ARREADY;
wire   [31:0] gcontrol_ARLEN;
wire    gcontrol_RVALID;
reg    gcontrol_RREADY;
wire   [31:0] gcontrol_RDATA;
wire    gcontrol_RLAST;
wire   [0:0] gcontrol_RID;
wire   [0:0] gcontrol_RUSER;
wire   [1:0] gcontrol_RRESP;
wire    gcontrol_BVALID;
wire   [1:0] gcontrol_BRESP;
wire   [0:0] gcontrol_BID;
wire   [0:0] gcontrol_BUSER;
wire   [62:0] tmp_71_cast_fu_251_p1;
reg   [62:0] tmp_71_cast_reg_388;
reg   [57:0] global_bias_V9_reg_393;
reg   [57:0] global_weight_V7_reg_398;
reg   [57:0] global_cout_V5_reg_403;
reg   [57:0] global_cin_V1_reg_408;
wire   [2:0] layer_id_1_fu_301_p2;
reg   [2:0] layer_id_1_reg_421;
wire    ap_CS_fsm_state2;
reg   [63:0] gcontrol_addr_reg_426;
wire   [0:0] exitcond_fu_295_p2;
wire   [29:0] tmp_cast_fu_344_p3;
reg   [29:0] tmp_cast_reg_432;
reg    ap_sig_ioackin_gcontrol_ARREADY;
wire   [31:0] tmp_27_fu_357_p2;
reg   [31:0] tmp_27_reg_442;
wire    ap_CS_fsm_state9;
wire   [29:0] indvar_next5_fu_368_p2;
reg   [29:0] indvar_next5_reg_450;
reg    ap_block_state10;
reg   [31:0] gcontrol_addr_read_reg_455;
wire   [31:0] tmp_16_fu_374_p2;
reg   [31:0] tmp_16_reg_460;
wire    ap_CS_fsm_state12;
wire   [31:0] config_q0;
reg   [31:0] nxt_layer_batch_reg_470;
wire    ap_CS_fsm_state13;
reg   [4:0] config_address0;
reg    config_ce0;
reg    config_we0;
reg   [31:0] config_d0;
reg    config_ce1;
wire   [31:0] config_q1;
wire    grp_engine_fu_228_m_axi_global_cin_V_AWVALID;
wire   [63:0] grp_engine_fu_228_m_axi_global_cin_V_AWADDR;
wire   [0:0] grp_engine_fu_228_m_axi_global_cin_V_AWID;
wire   [31:0] grp_engine_fu_228_m_axi_global_cin_V_AWLEN;
wire   [2:0] grp_engine_fu_228_m_axi_global_cin_V_AWSIZE;
wire   [1:0] grp_engine_fu_228_m_axi_global_cin_V_AWBURST;
wire   [1:0] grp_engine_fu_228_m_axi_global_cin_V_AWLOCK;
wire   [3:0] grp_engine_fu_228_m_axi_global_cin_V_AWCACHE;
wire   [2:0] grp_engine_fu_228_m_axi_global_cin_V_AWPROT;
wire   [3:0] grp_engine_fu_228_m_axi_global_cin_V_AWQOS;
wire   [3:0] grp_engine_fu_228_m_axi_global_cin_V_AWREGION;
wire   [0:0] grp_engine_fu_228_m_axi_global_cin_V_AWUSER;
wire    grp_engine_fu_228_m_axi_global_cin_V_WVALID;
wire   [511:0] grp_engine_fu_228_m_axi_global_cin_V_WDATA;
wire   [63:0] grp_engine_fu_228_m_axi_global_cin_V_WSTRB;
wire    grp_engine_fu_228_m_axi_global_cin_V_WLAST;
wire   [0:0] grp_engine_fu_228_m_axi_global_cin_V_WID;
wire   [0:0] grp_engine_fu_228_m_axi_global_cin_V_WUSER;
wire    grp_engine_fu_228_m_axi_global_cin_V_ARVALID;
wire   [63:0] grp_engine_fu_228_m_axi_global_cin_V_ARADDR;
wire   [0:0] grp_engine_fu_228_m_axi_global_cin_V_ARID;
wire   [31:0] grp_engine_fu_228_m_axi_global_cin_V_ARLEN;
wire   [2:0] grp_engine_fu_228_m_axi_global_cin_V_ARSIZE;
wire   [1:0] grp_engine_fu_228_m_axi_global_cin_V_ARBURST;
wire   [1:0] grp_engine_fu_228_m_axi_global_cin_V_ARLOCK;
wire   [3:0] grp_engine_fu_228_m_axi_global_cin_V_ARCACHE;
wire   [2:0] grp_engine_fu_228_m_axi_global_cin_V_ARPROT;
wire   [3:0] grp_engine_fu_228_m_axi_global_cin_V_ARQOS;
wire   [3:0] grp_engine_fu_228_m_axi_global_cin_V_ARREGION;
wire   [0:0] grp_engine_fu_228_m_axi_global_cin_V_ARUSER;
wire    grp_engine_fu_228_m_axi_global_cin_V_RREADY;
wire    grp_engine_fu_228_m_axi_global_cin_V_BREADY;
wire    grp_engine_fu_228_m_axi_global_weight_V_AWVALID;
wire   [63:0] grp_engine_fu_228_m_axi_global_weight_V_AWADDR;
wire   [0:0] grp_engine_fu_228_m_axi_global_weight_V_AWID;
wire   [31:0] grp_engine_fu_228_m_axi_global_weight_V_AWLEN;
wire   [2:0] grp_engine_fu_228_m_axi_global_weight_V_AWSIZE;
wire   [1:0] grp_engine_fu_228_m_axi_global_weight_V_AWBURST;
wire   [1:0] grp_engine_fu_228_m_axi_global_weight_V_AWLOCK;
wire   [3:0] grp_engine_fu_228_m_axi_global_weight_V_AWCACHE;
wire   [2:0] grp_engine_fu_228_m_axi_global_weight_V_AWPROT;
wire   [3:0] grp_engine_fu_228_m_axi_global_weight_V_AWQOS;
wire   [3:0] grp_engine_fu_228_m_axi_global_weight_V_AWREGION;
wire   [0:0] grp_engine_fu_228_m_axi_global_weight_V_AWUSER;
wire    grp_engine_fu_228_m_axi_global_weight_V_WVALID;
wire   [511:0] grp_engine_fu_228_m_axi_global_weight_V_WDATA;
wire   [63:0] grp_engine_fu_228_m_axi_global_weight_V_WSTRB;
wire    grp_engine_fu_228_m_axi_global_weight_V_WLAST;
wire   [0:0] grp_engine_fu_228_m_axi_global_weight_V_WID;
wire   [0:0] grp_engine_fu_228_m_axi_global_weight_V_WUSER;
wire    grp_engine_fu_228_m_axi_global_weight_V_ARVALID;
wire   [63:0] grp_engine_fu_228_m_axi_global_weight_V_ARADDR;
wire   [0:0] grp_engine_fu_228_m_axi_global_weight_V_ARID;
wire   [31:0] grp_engine_fu_228_m_axi_global_weight_V_ARLEN;
wire   [2:0] grp_engine_fu_228_m_axi_global_weight_V_ARSIZE;
wire   [1:0] grp_engine_fu_228_m_axi_global_weight_V_ARBURST;
wire   [1:0] grp_engine_fu_228_m_axi_global_weight_V_ARLOCK;
wire   [3:0] grp_engine_fu_228_m_axi_global_weight_V_ARCACHE;
wire   [2:0] grp_engine_fu_228_m_axi_global_weight_V_ARPROT;
wire   [3:0] grp_engine_fu_228_m_axi_global_weight_V_ARQOS;
wire   [3:0] grp_engine_fu_228_m_axi_global_weight_V_ARREGION;
wire   [0:0] grp_engine_fu_228_m_axi_global_weight_V_ARUSER;
wire    grp_engine_fu_228_m_axi_global_weight_V_RREADY;
wire    grp_engine_fu_228_m_axi_global_weight_V_BREADY;
wire   [4:0] grp_engine_fu_228_config_r_address0;
wire    grp_engine_fu_228_config_r_ce0;
wire   [31:0] grp_engine_fu_228_config_r_d0;
wire    grp_engine_fu_228_config_r_we0;
wire   [4:0] grp_engine_fu_228_config_r_address1;
wire    grp_engine_fu_228_config_r_ce1;
wire   [31:0] grp_engine_fu_228_config_r_d1;
wire    grp_engine_fu_228_config_r_we1;
wire    grp_engine_fu_228_ap_start;
wire    grp_engine_fu_228_ap_done;
wire    grp_engine_fu_228_ap_ready;
wire    grp_engine_fu_228_ap_idle;
reg    grp_engine_fu_228_ap_continue;
reg   [31:0] cur_layer_batch_reg_192;
wire    ap_CS_fsm_state15;
wire    ap_sync_grp_engine_fu_228_ap_ready;
wire    ap_sync_grp_engine_fu_228_ap_done;
reg    ap_block_state15_on_subcall_done;
reg   [2:0] layer_id_reg_205;
reg   [29:0] indvar_reg_216;
wire    ap_CS_fsm_state11;
reg    grp_engine_fu_228_ap_start_reg;
wire    ap_CS_fsm_state14;
reg    ap_sync_reg_grp_engine_fu_228_ap_ready;
reg    ap_sync_reg_grp_engine_fu_228_ap_done;
wire   [63:0] indvar1_fu_379_p1;
wire  signed [63:0] tmp_17_fu_384_p1;
wire   [63:0] layer_config_V12_sum_1_fu_330_p1;
reg    ap_reg_ioackin_gcontrol_ARREADY;
wire   [61:0] tmp_fu_241_p4;
wire   [7:0] tmp_s_fu_307_p3;
wire   [7:0] tmp_15_fu_315_p2;
wire   [62:0] tmp_60_cast_fu_321_p1;
wire   [62:0] layer_config_V12_sum_fu_325_p2;
wire   [24:0] tmp_28_fu_340_p1;
reg   [14:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 grp_engine_fu_228_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_engine_fu_228_ap_ready = 1'b0;
#0 ap_sync_reg_grp_engine_fu_228_ap_done = 1'b0;
#0 ap_reg_ioackin_gcontrol_ARREADY = 1'b0;
end

top_kernel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
top_kernel_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .global_cin_V(global_cin_V),
    .global_prev_cin_V(global_prev_cin_V),
    .global_cout_V(global_cout_V),
    .global_weight_V(global_weight_V),
    .global_bias_V(global_bias_V),
    .layer_config_V(layer_config_V)
);

top_kernel_gmem1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
top_kernel_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem1_ARVALID),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(grp_engine_fu_228_m_axi_global_cin_V_ARADDR),
    .I_ARID(grp_engine_fu_228_m_axi_global_cin_V_ARID),
    .I_ARLEN(grp_engine_fu_228_m_axi_global_cin_V_ARLEN),
    .I_ARSIZE(grp_engine_fu_228_m_axi_global_cin_V_ARSIZE),
    .I_ARLOCK(grp_engine_fu_228_m_axi_global_cin_V_ARLOCK),
    .I_ARCACHE(grp_engine_fu_228_m_axi_global_cin_V_ARCACHE),
    .I_ARQOS(grp_engine_fu_228_m_axi_global_cin_V_ARQOS),
    .I_ARPROT(grp_engine_fu_228_m_axi_global_cin_V_ARPROT),
    .I_ARUSER(grp_engine_fu_228_m_axi_global_cin_V_ARUSER),
    .I_ARBURST(grp_engine_fu_228_m_axi_global_cin_V_ARBURST),
    .I_ARREGION(grp_engine_fu_228_m_axi_global_cin_V_ARREGION),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(gmem1_RREADY),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(grp_engine_fu_228_m_axi_global_cin_V_AWADDR),
    .I_AWID(grp_engine_fu_228_m_axi_global_cin_V_AWID),
    .I_AWLEN(grp_engine_fu_228_m_axi_global_cin_V_AWLEN),
    .I_AWSIZE(grp_engine_fu_228_m_axi_global_cin_V_AWSIZE),
    .I_AWLOCK(grp_engine_fu_228_m_axi_global_cin_V_AWLOCK),
    .I_AWCACHE(grp_engine_fu_228_m_axi_global_cin_V_AWCACHE),
    .I_AWQOS(grp_engine_fu_228_m_axi_global_cin_V_AWQOS),
    .I_AWPROT(grp_engine_fu_228_m_axi_global_cin_V_AWPROT),
    .I_AWUSER(grp_engine_fu_228_m_axi_global_cin_V_AWUSER),
    .I_AWBURST(grp_engine_fu_228_m_axi_global_cin_V_AWBURST),
    .I_AWREGION(grp_engine_fu_228_m_axi_global_cin_V_AWREGION),
    .I_WVALID(gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(grp_engine_fu_228_m_axi_global_cin_V_WDATA),
    .I_WID(grp_engine_fu_228_m_axi_global_cin_V_WID),
    .I_WUSER(grp_engine_fu_228_m_axi_global_cin_V_WUSER),
    .I_WLAST(grp_engine_fu_228_m_axi_global_cin_V_WLAST),
    .I_WSTRB(grp_engine_fu_228_m_axi_global_cin_V_WSTRB),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(gmem1_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

top_kernel_gmem2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM2_CACHE_VALUE ))
top_kernel_gmem2_m_axi_U(
    .AWVALID(m_axi_gmem2_AWVALID),
    .AWREADY(m_axi_gmem2_AWREADY),
    .AWADDR(m_axi_gmem2_AWADDR),
    .AWID(m_axi_gmem2_AWID),
    .AWLEN(m_axi_gmem2_AWLEN),
    .AWSIZE(m_axi_gmem2_AWSIZE),
    .AWBURST(m_axi_gmem2_AWBURST),
    .AWLOCK(m_axi_gmem2_AWLOCK),
    .AWCACHE(m_axi_gmem2_AWCACHE),
    .AWPROT(m_axi_gmem2_AWPROT),
    .AWQOS(m_axi_gmem2_AWQOS),
    .AWREGION(m_axi_gmem2_AWREGION),
    .AWUSER(m_axi_gmem2_AWUSER),
    .WVALID(m_axi_gmem2_WVALID),
    .WREADY(m_axi_gmem2_WREADY),
    .WDATA(m_axi_gmem2_WDATA),
    .WSTRB(m_axi_gmem2_WSTRB),
    .WLAST(m_axi_gmem2_WLAST),
    .WID(m_axi_gmem2_WID),
    .WUSER(m_axi_gmem2_WUSER),
    .ARVALID(m_axi_gmem2_ARVALID),
    .ARREADY(m_axi_gmem2_ARREADY),
    .ARADDR(m_axi_gmem2_ARADDR),
    .ARID(m_axi_gmem2_ARID),
    .ARLEN(m_axi_gmem2_ARLEN),
    .ARSIZE(m_axi_gmem2_ARSIZE),
    .ARBURST(m_axi_gmem2_ARBURST),
    .ARLOCK(m_axi_gmem2_ARLOCK),
    .ARCACHE(m_axi_gmem2_ARCACHE),
    .ARPROT(m_axi_gmem2_ARPROT),
    .ARQOS(m_axi_gmem2_ARQOS),
    .ARREGION(m_axi_gmem2_ARREGION),
    .ARUSER(m_axi_gmem2_ARUSER),
    .RVALID(m_axi_gmem2_RVALID),
    .RREADY(m_axi_gmem2_RREADY),
    .RDATA(m_axi_gmem2_RDATA),
    .RLAST(m_axi_gmem2_RLAST),
    .RID(m_axi_gmem2_RID),
    .RUSER(m_axi_gmem2_RUSER),
    .RRESP(m_axi_gmem2_RRESP),
    .BVALID(m_axi_gmem2_BVALID),
    .BREADY(m_axi_gmem2_BREADY),
    .BRESP(m_axi_gmem2_BRESP),
    .BID(m_axi_gmem2_BID),
    .BUSER(m_axi_gmem2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem2_ARVALID),
    .I_ARREADY(gmem2_ARREADY),
    .I_ARADDR(grp_engine_fu_228_m_axi_global_weight_V_ARADDR),
    .I_ARID(grp_engine_fu_228_m_axi_global_weight_V_ARID),
    .I_ARLEN(grp_engine_fu_228_m_axi_global_weight_V_ARLEN),
    .I_ARSIZE(grp_engine_fu_228_m_axi_global_weight_V_ARSIZE),
    .I_ARLOCK(grp_engine_fu_228_m_axi_global_weight_V_ARLOCK),
    .I_ARCACHE(grp_engine_fu_228_m_axi_global_weight_V_ARCACHE),
    .I_ARQOS(grp_engine_fu_228_m_axi_global_weight_V_ARQOS),
    .I_ARPROT(grp_engine_fu_228_m_axi_global_weight_V_ARPROT),
    .I_ARUSER(grp_engine_fu_228_m_axi_global_weight_V_ARUSER),
    .I_ARBURST(grp_engine_fu_228_m_axi_global_weight_V_ARBURST),
    .I_ARREGION(grp_engine_fu_228_m_axi_global_weight_V_ARREGION),
    .I_RVALID(gmem2_RVALID),
    .I_RREADY(gmem2_RREADY),
    .I_RDATA(gmem2_RDATA),
    .I_RID(gmem2_RID),
    .I_RUSER(gmem2_RUSER),
    .I_RRESP(gmem2_RRESP),
    .I_RLAST(gmem2_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem2_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem2_WREADY),
    .I_WDATA(512'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem2_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem2_BRESP),
    .I_BID(gmem2_BID),
    .I_BUSER(gmem2_BUSER)
);

top_kernel_gcontrol_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GCONTROL_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GCONTROL_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GCONTROL_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GCONTROL_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GCONTROL_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GCONTROL_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GCONTROL_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GCONTROL_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GCONTROL_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GCONTROL_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GCONTROL_CACHE_VALUE ))
top_kernel_gcontrol_m_axi_U(
    .AWVALID(m_axi_gcontrol_AWVALID),
    .AWREADY(m_axi_gcontrol_AWREADY),
    .AWADDR(m_axi_gcontrol_AWADDR),
    .AWID(m_axi_gcontrol_AWID),
    .AWLEN(m_axi_gcontrol_AWLEN),
    .AWSIZE(m_axi_gcontrol_AWSIZE),
    .AWBURST(m_axi_gcontrol_AWBURST),
    .AWLOCK(m_axi_gcontrol_AWLOCK),
    .AWCACHE(m_axi_gcontrol_AWCACHE),
    .AWPROT(m_axi_gcontrol_AWPROT),
    .AWQOS(m_axi_gcontrol_AWQOS),
    .AWREGION(m_axi_gcontrol_AWREGION),
    .AWUSER(m_axi_gcontrol_AWUSER),
    .WVALID(m_axi_gcontrol_WVALID),
    .WREADY(m_axi_gcontrol_WREADY),
    .WDATA(m_axi_gcontrol_WDATA),
    .WSTRB(m_axi_gcontrol_WSTRB),
    .WLAST(m_axi_gcontrol_WLAST),
    .WID(m_axi_gcontrol_WID),
    .WUSER(m_axi_gcontrol_WUSER),
    .ARVALID(m_axi_gcontrol_ARVALID),
    .ARREADY(m_axi_gcontrol_ARREADY),
    .ARADDR(m_axi_gcontrol_ARADDR),
    .ARID(m_axi_gcontrol_ARID),
    .ARLEN(m_axi_gcontrol_ARLEN),
    .ARSIZE(m_axi_gcontrol_ARSIZE),
    .ARBURST(m_axi_gcontrol_ARBURST),
    .ARLOCK(m_axi_gcontrol_ARLOCK),
    .ARCACHE(m_axi_gcontrol_ARCACHE),
    .ARPROT(m_axi_gcontrol_ARPROT),
    .ARQOS(m_axi_gcontrol_ARQOS),
    .ARREGION(m_axi_gcontrol_ARREGION),
    .ARUSER(m_axi_gcontrol_ARUSER),
    .RVALID(m_axi_gcontrol_RVALID),
    .RREADY(m_axi_gcontrol_RREADY),
    .RDATA(m_axi_gcontrol_RDATA),
    .RLAST(m_axi_gcontrol_RLAST),
    .RID(m_axi_gcontrol_RID),
    .RUSER(m_axi_gcontrol_RUSER),
    .RRESP(m_axi_gcontrol_RRESP),
    .BVALID(m_axi_gcontrol_BVALID),
    .BREADY(m_axi_gcontrol_BREADY),
    .BRESP(m_axi_gcontrol_BRESP),
    .BID(m_axi_gcontrol_BID),
    .BUSER(m_axi_gcontrol_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gcontrol_ARVALID),
    .I_ARREADY(gcontrol_ARREADY),
    .I_ARADDR(gcontrol_addr_reg_426),
    .I_ARID(1'd0),
    .I_ARLEN(gcontrol_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gcontrol_RVALID),
    .I_RREADY(gcontrol_RREADY),
    .I_RDATA(gcontrol_RDATA),
    .I_RID(gcontrol_RID),
    .I_RUSER(gcontrol_RUSER),
    .I_RRESP(gcontrol_RRESP),
    .I_RLAST(gcontrol_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gcontrol_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gcontrol_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(gcontrol_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gcontrol_BRESP),
    .I_BID(gcontrol_BID),
    .I_BUSER(gcontrol_BUSER)
);

top_kernel_config #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
config_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(config_address0),
    .ce0(config_ce0),
    .we0(config_we0),
    .d0(config_d0),
    .q0(config_q0),
    .address1(grp_engine_fu_228_config_r_address1),
    .ce1(config_ce1),
    .q1(config_q1)
);

engine grp_engine_fu_228(
    .m_axi_global_cin_V_AWVALID(grp_engine_fu_228_m_axi_global_cin_V_AWVALID),
    .m_axi_global_cin_V_AWREADY(gmem1_AWREADY),
    .m_axi_global_cin_V_AWADDR(grp_engine_fu_228_m_axi_global_cin_V_AWADDR),
    .m_axi_global_cin_V_AWID(grp_engine_fu_228_m_axi_global_cin_V_AWID),
    .m_axi_global_cin_V_AWLEN(grp_engine_fu_228_m_axi_global_cin_V_AWLEN),
    .m_axi_global_cin_V_AWSIZE(grp_engine_fu_228_m_axi_global_cin_V_AWSIZE),
    .m_axi_global_cin_V_AWBURST(grp_engine_fu_228_m_axi_global_cin_V_AWBURST),
    .m_axi_global_cin_V_AWLOCK(grp_engine_fu_228_m_axi_global_cin_V_AWLOCK),
    .m_axi_global_cin_V_AWCACHE(grp_engine_fu_228_m_axi_global_cin_V_AWCACHE),
    .m_axi_global_cin_V_AWPROT(grp_engine_fu_228_m_axi_global_cin_V_AWPROT),
    .m_axi_global_cin_V_AWQOS(grp_engine_fu_228_m_axi_global_cin_V_AWQOS),
    .m_axi_global_cin_V_AWREGION(grp_engine_fu_228_m_axi_global_cin_V_AWREGION),
    .m_axi_global_cin_V_AWUSER(grp_engine_fu_228_m_axi_global_cin_V_AWUSER),
    .m_axi_global_cin_V_WVALID(grp_engine_fu_228_m_axi_global_cin_V_WVALID),
    .m_axi_global_cin_V_WREADY(gmem1_WREADY),
    .m_axi_global_cin_V_WDATA(grp_engine_fu_228_m_axi_global_cin_V_WDATA),
    .m_axi_global_cin_V_WSTRB(grp_engine_fu_228_m_axi_global_cin_V_WSTRB),
    .m_axi_global_cin_V_WLAST(grp_engine_fu_228_m_axi_global_cin_V_WLAST),
    .m_axi_global_cin_V_WID(grp_engine_fu_228_m_axi_global_cin_V_WID),
    .m_axi_global_cin_V_WUSER(grp_engine_fu_228_m_axi_global_cin_V_WUSER),
    .m_axi_global_cin_V_ARVALID(grp_engine_fu_228_m_axi_global_cin_V_ARVALID),
    .m_axi_global_cin_V_ARREADY(gmem1_ARREADY),
    .m_axi_global_cin_V_ARADDR(grp_engine_fu_228_m_axi_global_cin_V_ARADDR),
    .m_axi_global_cin_V_ARID(grp_engine_fu_228_m_axi_global_cin_V_ARID),
    .m_axi_global_cin_V_ARLEN(grp_engine_fu_228_m_axi_global_cin_V_ARLEN),
    .m_axi_global_cin_V_ARSIZE(grp_engine_fu_228_m_axi_global_cin_V_ARSIZE),
    .m_axi_global_cin_V_ARBURST(grp_engine_fu_228_m_axi_global_cin_V_ARBURST),
    .m_axi_global_cin_V_ARLOCK(grp_engine_fu_228_m_axi_global_cin_V_ARLOCK),
    .m_axi_global_cin_V_ARCACHE(grp_engine_fu_228_m_axi_global_cin_V_ARCACHE),
    .m_axi_global_cin_V_ARPROT(grp_engine_fu_228_m_axi_global_cin_V_ARPROT),
    .m_axi_global_cin_V_ARQOS(grp_engine_fu_228_m_axi_global_cin_V_ARQOS),
    .m_axi_global_cin_V_ARREGION(grp_engine_fu_228_m_axi_global_cin_V_ARREGION),
    .m_axi_global_cin_V_ARUSER(grp_engine_fu_228_m_axi_global_cin_V_ARUSER),
    .m_axi_global_cin_V_RVALID(gmem1_RVALID),
    .m_axi_global_cin_V_RREADY(grp_engine_fu_228_m_axi_global_cin_V_RREADY),
    .m_axi_global_cin_V_RDATA(gmem1_RDATA),
    .m_axi_global_cin_V_RLAST(gmem1_RLAST),
    .m_axi_global_cin_V_RID(gmem1_RID),
    .m_axi_global_cin_V_RUSER(gmem1_RUSER),
    .m_axi_global_cin_V_RRESP(gmem1_RRESP),
    .m_axi_global_cin_V_BVALID(gmem1_BVALID),
    .m_axi_global_cin_V_BREADY(grp_engine_fu_228_m_axi_global_cin_V_BREADY),
    .m_axi_global_cin_V_BRESP(gmem1_BRESP),
    .m_axi_global_cin_V_BID(gmem1_BID),
    .m_axi_global_cin_V_BUSER(gmem1_BUSER),
    .global_cin_V_offset(global_cin_V1_reg_408),
    .m_axi_global_weight_V_AWVALID(grp_engine_fu_228_m_axi_global_weight_V_AWVALID),
    .m_axi_global_weight_V_AWREADY(1'b0),
    .m_axi_global_weight_V_AWADDR(grp_engine_fu_228_m_axi_global_weight_V_AWADDR),
    .m_axi_global_weight_V_AWID(grp_engine_fu_228_m_axi_global_weight_V_AWID),
    .m_axi_global_weight_V_AWLEN(grp_engine_fu_228_m_axi_global_weight_V_AWLEN),
    .m_axi_global_weight_V_AWSIZE(grp_engine_fu_228_m_axi_global_weight_V_AWSIZE),
    .m_axi_global_weight_V_AWBURST(grp_engine_fu_228_m_axi_global_weight_V_AWBURST),
    .m_axi_global_weight_V_AWLOCK(grp_engine_fu_228_m_axi_global_weight_V_AWLOCK),
    .m_axi_global_weight_V_AWCACHE(grp_engine_fu_228_m_axi_global_weight_V_AWCACHE),
    .m_axi_global_weight_V_AWPROT(grp_engine_fu_228_m_axi_global_weight_V_AWPROT),
    .m_axi_global_weight_V_AWQOS(grp_engine_fu_228_m_axi_global_weight_V_AWQOS),
    .m_axi_global_weight_V_AWREGION(grp_engine_fu_228_m_axi_global_weight_V_AWREGION),
    .m_axi_global_weight_V_AWUSER(grp_engine_fu_228_m_axi_global_weight_V_AWUSER),
    .m_axi_global_weight_V_WVALID(grp_engine_fu_228_m_axi_global_weight_V_WVALID),
    .m_axi_global_weight_V_WREADY(1'b0),
    .m_axi_global_weight_V_WDATA(grp_engine_fu_228_m_axi_global_weight_V_WDATA),
    .m_axi_global_weight_V_WSTRB(grp_engine_fu_228_m_axi_global_weight_V_WSTRB),
    .m_axi_global_weight_V_WLAST(grp_engine_fu_228_m_axi_global_weight_V_WLAST),
    .m_axi_global_weight_V_WID(grp_engine_fu_228_m_axi_global_weight_V_WID),
    .m_axi_global_weight_V_WUSER(grp_engine_fu_228_m_axi_global_weight_V_WUSER),
    .m_axi_global_weight_V_ARVALID(grp_engine_fu_228_m_axi_global_weight_V_ARVALID),
    .m_axi_global_weight_V_ARREADY(gmem2_ARREADY),
    .m_axi_global_weight_V_ARADDR(grp_engine_fu_228_m_axi_global_weight_V_ARADDR),
    .m_axi_global_weight_V_ARID(grp_engine_fu_228_m_axi_global_weight_V_ARID),
    .m_axi_global_weight_V_ARLEN(grp_engine_fu_228_m_axi_global_weight_V_ARLEN),
    .m_axi_global_weight_V_ARSIZE(grp_engine_fu_228_m_axi_global_weight_V_ARSIZE),
    .m_axi_global_weight_V_ARBURST(grp_engine_fu_228_m_axi_global_weight_V_ARBURST),
    .m_axi_global_weight_V_ARLOCK(grp_engine_fu_228_m_axi_global_weight_V_ARLOCK),
    .m_axi_global_weight_V_ARCACHE(grp_engine_fu_228_m_axi_global_weight_V_ARCACHE),
    .m_axi_global_weight_V_ARPROT(grp_engine_fu_228_m_axi_global_weight_V_ARPROT),
    .m_axi_global_weight_V_ARQOS(grp_engine_fu_228_m_axi_global_weight_V_ARQOS),
    .m_axi_global_weight_V_ARREGION(grp_engine_fu_228_m_axi_global_weight_V_ARREGION),
    .m_axi_global_weight_V_ARUSER(grp_engine_fu_228_m_axi_global_weight_V_ARUSER),
    .m_axi_global_weight_V_RVALID(gmem2_RVALID),
    .m_axi_global_weight_V_RREADY(grp_engine_fu_228_m_axi_global_weight_V_RREADY),
    .m_axi_global_weight_V_RDATA(gmem2_RDATA),
    .m_axi_global_weight_V_RLAST(gmem2_RLAST),
    .m_axi_global_weight_V_RID(gmem2_RID),
    .m_axi_global_weight_V_RUSER(gmem2_RUSER),
    .m_axi_global_weight_V_RRESP(gmem2_RRESP),
    .m_axi_global_weight_V_BVALID(1'b0),
    .m_axi_global_weight_V_BREADY(grp_engine_fu_228_m_axi_global_weight_V_BREADY),
    .m_axi_global_weight_V_BRESP(2'd0),
    .m_axi_global_weight_V_BID(1'd0),
    .m_axi_global_weight_V_BUSER(1'd0),
    .global_weight_V_offset(global_weight_V7_reg_398),
    .global_bias_V_offset(global_bias_V9_reg_393),
    .global_cout_V_offset(global_cout_V5_reg_403),
    .config_r_address0(grp_engine_fu_228_config_r_address0),
    .config_r_ce0(grp_engine_fu_228_config_r_ce0),
    .config_r_d0(grp_engine_fu_228_config_r_d0),
    .config_r_q0(config_q0),
    .config_r_we0(grp_engine_fu_228_config_r_we0),
    .config_r_address1(grp_engine_fu_228_config_r_address1),
    .config_r_ce1(grp_engine_fu_228_config_r_ce1),
    .config_r_d1(grp_engine_fu_228_config_r_d1),
    .config_r_q1(config_q1),
    .config_r_we1(grp_engine_fu_228_config_r_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .global_cin_V_offset_ap_vld(1'b1),
    .global_weight_V_offset_ap_vld(1'b1),
    .global_bias_V_offset_ap_vld(1'b1),
    .global_cout_V_offset_ap_vld(1'b1),
    .ap_start(grp_engine_fu_228_ap_start),
    .ap_done(grp_engine_fu_228_ap_done),
    .ap_ready(grp_engine_fu_228_ap_ready),
    .ap_idle(grp_engine_fu_228_ap_idle),
    .ap_continue(grp_engine_fu_228_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gcontrol_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            if ((ap_sig_ioackin_gcontrol_ARREADY == 1'b1)) begin
                ap_reg_ioackin_gcontrol_ARREADY <= 1'b0;
            end else if ((gcontrol_ARREADY == 1'b1)) begin
                ap_reg_ioackin_gcontrol_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_engine_fu_228_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_sync_reg_grp_engine_fu_228_ap_done <= 1'b0;
        end else if ((grp_engine_fu_228_ap_done == 1'b1)) begin
            ap_sync_reg_grp_engine_fu_228_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_engine_fu_228_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_sync_reg_grp_engine_fu_228_ap_ready <= 1'b0;
        end else if ((grp_engine_fu_228_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_engine_fu_228_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_engine_fu_228_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state14) | ((ap_sync_grp_engine_fu_228_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state15)))) begin
            grp_engine_fu_228_ap_start_reg <= 1'b1;
        end else if ((grp_engine_fu_228_ap_ready == 1'b1)) begin
            grp_engine_fu_228_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        cur_layer_batch_reg_192 <= nxt_layer_batch_reg_470;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cur_layer_batch_reg_192 <= 32'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_reg_216 <= indvar_next5_reg_450;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        indvar_reg_216 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        layer_id_reg_205 <= layer_id_1_reg_421;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        layer_id_reg_205 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((gcontrol_RVALID == 1'b0) & (exitcond6_fu_363_p2 == 1'd0)) & (exitcond6_fu_363_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        gcontrol_addr_read_reg_455 <= gcontrol_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        gcontrol_addr_reg_426[62 : 0] <= layer_config_V12_sum_1_fu_330_p1[62 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        global_bias_V9_reg_393 <= {{global_bias_V[63:6]}};
        global_cin_V1_reg_408 <= {{global_cin_V[63:6]}};
        global_cout_V5_reg_403 <= {{global_cout_V[63:6]}};
        global_weight_V7_reg_398 <= {{global_weight_V[63:6]}};
        tmp_71_cast_reg_388[61 : 0] <= tmp_71_cast_fu_251_p1[61 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((gcontrol_RVALID == 1'b0) & (exitcond6_fu_363_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state10))) begin
        indvar_next5_reg_450 <= indvar_next5_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        layer_id_1_reg_421 <= layer_id_1_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        nxt_layer_batch_reg_470 <= config_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((gcontrol_RVALID == 1'b0) & (exitcond6_fu_363_p2 == 1'd0)) & (exitcond6_fu_363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        tmp_16_reg_460[31 : 5] <= tmp_16_fu_374_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_27_reg_442[31 : 5] <= tmp_27_fu_357_p2[31 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sig_ioackin_gcontrol_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_cast_reg_432[29 : 5] <= tmp_cast_fu_344_p3[29 : 5];
    end
end

always @ (*) begin
    if (((exitcond_fu_295_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_295_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gcontrol_ARREADY == 1'b0)) begin
        ap_sig_ioackin_gcontrol_ARREADY = gcontrol_ARREADY;
    end else begin
        ap_sig_ioackin_gcontrol_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        config_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        config_address0 = tmp_17_fu_384_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        config_address0 = indvar1_fu_379_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        config_address0 = grp_engine_fu_228_config_r_address0;
    end else begin
        config_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12))) begin
        config_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        config_ce0 = grp_engine_fu_228_config_r_ce0;
    end else begin
        config_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        config_ce1 = grp_engine_fu_228_config_r_ce1;
    end else begin
        config_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        config_d0 = cur_layer_batch_reg_192;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        config_d0 = gcontrol_addr_read_reg_455;
    end else begin
        config_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        config_we0 = 1'b1;
    end else begin
        config_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_gcontrol_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state3))) begin
        gcontrol_ARVALID = 1'b1;
    end else begin
        gcontrol_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((gcontrol_RVALID == 1'b0) & (exitcond6_fu_363_p2 == 1'd0)) & (exitcond6_fu_363_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        gcontrol_RREADY = 1'b1;
    end else begin
        gcontrol_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        gcontrol_blk_n_AR = m_axi_gcontrol_ARREADY;
    end else begin
        gcontrol_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond6_fu_363_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        gcontrol_blk_n_R = m_axi_gcontrol_RVALID;
    end else begin
        gcontrol_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        gmem1_ARVALID = grp_engine_fu_228_m_axi_global_cin_V_ARVALID;
    end else begin
        gmem1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        gmem1_AWVALID = grp_engine_fu_228_m_axi_global_cin_V_AWVALID;
    end else begin
        gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        gmem1_BREADY = grp_engine_fu_228_m_axi_global_cin_V_BREADY;
    end else begin
        gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        gmem1_RREADY = grp_engine_fu_228_m_axi_global_cin_V_RREADY;
    end else begin
        gmem1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        gmem1_WVALID = grp_engine_fu_228_m_axi_global_cin_V_WVALID;
    end else begin
        gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        gmem2_ARVALID = grp_engine_fu_228_m_axi_global_weight_V_ARVALID;
    end else begin
        gmem2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        gmem2_RREADY = grp_engine_fu_228_m_axi_global_weight_V_RREADY;
    end else begin
        gmem2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        grp_engine_fu_228_ap_continue = 1'b1;
    end else begin
        grp_engine_fu_228_ap_continue = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond_fu_295_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((ap_sig_ioackin_gcontrol_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if ((~((gcontrol_RVALID == 1'b0) & (exitcond6_fu_363_p2 == 1'd0)) & (exitcond6_fu_363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if ((~((gcontrol_RVALID == 1'b0) & (exitcond6_fu_363_p2 == 1'd0)) & (exitcond6_fu_363_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state10 = ((gcontrol_RVALID == 1'b0) & (exitcond6_fu_363_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state15_on_subcall_done = ((ap_sync_grp_engine_fu_228_ap_ready & ap_sync_grp_engine_fu_228_ap_done) == 1'b0);
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_engine_fu_228_ap_done = (grp_engine_fu_228_ap_done | ap_sync_reg_grp_engine_fu_228_ap_done);

assign ap_sync_grp_engine_fu_228_ap_ready = (grp_engine_fu_228_ap_ready | ap_sync_reg_grp_engine_fu_228_ap_ready);

assign exitcond6_fu_363_p2 = ((indvar_reg_216 == tmp_cast_reg_432) ? 1'b1 : 1'b0);

assign exitcond_fu_295_p2 = ((layer_id_reg_205 == 3'd5) ? 1'b1 : 1'b0);

assign gcontrol_ARLEN = tmp_cast_fu_344_p3;

assign grp_engine_fu_228_ap_start = grp_engine_fu_228_ap_start_reg;

assign indvar1_fu_379_p1 = indvar_reg_216;

assign indvar_next5_fu_368_p2 = (indvar_reg_216 + 30'd1);

assign layer_config_V12_sum_1_fu_330_p1 = layer_config_V12_sum_fu_325_p2;

assign layer_config_V12_sum_fu_325_p2 = (tmp_71_cast_reg_388 + tmp_60_cast_fu_321_p1);

assign layer_id_1_fu_301_p2 = (layer_id_reg_205 + 3'd1);

assign m_axi_gmem3_ARADDR = 64'd0;

assign m_axi_gmem3_ARBURST = 2'd0;

assign m_axi_gmem3_ARCACHE = 4'd0;

assign m_axi_gmem3_ARID = 1'd0;

assign m_axi_gmem3_ARLEN = 8'd0;

assign m_axi_gmem3_ARLOCK = 2'd0;

assign m_axi_gmem3_ARPROT = 3'd0;

assign m_axi_gmem3_ARQOS = 4'd0;

assign m_axi_gmem3_ARREGION = 4'd0;

assign m_axi_gmem3_ARSIZE = 3'd0;

assign m_axi_gmem3_ARUSER = 1'd0;

assign m_axi_gmem3_ARVALID = 1'b0;

assign m_axi_gmem3_AWADDR = 64'd0;

assign m_axi_gmem3_AWBURST = 2'd0;

assign m_axi_gmem3_AWCACHE = 4'd0;

assign m_axi_gmem3_AWID = 1'd0;

assign m_axi_gmem3_AWLEN = 8'd0;

assign m_axi_gmem3_AWLOCK = 2'd0;

assign m_axi_gmem3_AWPROT = 3'd0;

assign m_axi_gmem3_AWQOS = 4'd0;

assign m_axi_gmem3_AWREGION = 4'd0;

assign m_axi_gmem3_AWSIZE = 3'd0;

assign m_axi_gmem3_AWUSER = 1'd0;

assign m_axi_gmem3_AWVALID = 1'b0;

assign m_axi_gmem3_BREADY = 1'b0;

assign m_axi_gmem3_RREADY = 1'b0;

assign m_axi_gmem3_WDATA = 512'd0;

assign m_axi_gmem3_WID = 1'd0;

assign m_axi_gmem3_WLAST = 1'b0;

assign m_axi_gmem3_WSTRB = 64'd0;

assign m_axi_gmem3_WUSER = 1'd0;

assign m_axi_gmem3_WVALID = 1'b0;

assign tmp_15_fu_315_p2 = (tmp_s_fu_307_p3 | 8'd5);

assign tmp_16_fu_374_p2 = ($signed(tmp_27_reg_442) + $signed(32'd4294967289));

assign tmp_17_fu_384_p1 = $signed(tmp_16_reg_460);

assign tmp_27_fu_357_p2 = cur_layer_batch_reg_192 << 32'd5;

assign tmp_28_fu_340_p1 = cur_layer_batch_reg_192[24:0];

assign tmp_60_cast_fu_321_p1 = tmp_15_fu_315_p2;

assign tmp_71_cast_fu_251_p1 = tmp_fu_241_p4;

assign tmp_cast_fu_344_p3 = {{tmp_28_fu_340_p1}, {5'd0}};

assign tmp_fu_241_p4 = {{layer_config_V[63:2]}};

assign tmp_s_fu_307_p3 = {{layer_id_reg_205}, {5'd0}};

always @ (posedge ap_clk) begin
    tmp_71_cast_reg_388[62] <= 1'b0;
    gcontrol_addr_reg_426[63] <= 1'b0;
    tmp_cast_reg_432[4:0] <= 5'b00000;
    tmp_27_reg_442[4:0] <= 5'b00000;
    tmp_16_reg_460[4:0] <= 5'b11001;
end

endmodule //top_kernel
